
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/04_using_a_custom_material.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_04_using_a_custom_material.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_04_using_a_custom_material.py:


Using a custom material
=======================

This example shows how you can use a custom material in PyAdditive simulations.
For background information and file formats, see
`Material Tuning Tool (Beta) to Create User Defined Materials
<https://ansyshelp.ansys.com/account/secured?returnurl=/Views/Secured/corp/v232/en/add_beta/add_science_BETA_material_tuning_tool.html?q=material%20tuning%20tool>`_
in the *Additive Manufacturing Beta Features* documentation.
To prevent wasted time, before executing this example, carefully review
the steps described in this PyAdditive documentation.

Units are SI (m, kg, s, K) unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 37-40

Perform required import and connect
-----------------------------------
Perform the required import and connect to the Additive service.

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default


    from ansys.additive.core import Additive, AdditiveMachine, SingleBeadInput

    additive = Additive()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    user data path: /home/runner/.local/share/ansys-pyadditive




.. GENERATED FROM PYTHON SOURCE LINES 46-50

Download custom material
------------------------
Download an example of a custom material. Typically, you would have the
files defining your custom material stored locally.

.. GENERATED FROM PYTHON SOURCE LINES 50-55

.. code-block:: default


    import ansys.additive.core.examples as examples

    material_files = examples.download_custom_material()








.. GENERATED FROM PYTHON SOURCE LINES 56-60

Load custom material files
--------------------------
Use the :meth:`load_material() <ansys.additive.core.additive.load_material>`
method on the ``additive`` object to load the files defining a custom material.

.. GENERATED FROM PYTHON SOURCE LINES 60-67

.. code-block:: default


    custom_material = additive.load_material(
        parameters_file=material_files.material_parameters_file,
        thermal_lookup_file=material_files.thermal_properties_lookup_file,
        characteristic_width_lookup_file=material_files.characteristic_width_lookup_file,
    )








.. GENERATED FROM PYTHON SOURCE LINES 68-72

Use the custom material in a simulation
---------------------------------------
Once the custom material has been loaded, you can assign it to a simulation input
object.

.. GENERATED FROM PYTHON SOURCE LINES 72-82

.. code-block:: default


    input = SingleBeadInput(
        machine=AdditiveMachine(),
        material=custom_material,
        id="single-bead-simulation",
        bead_length=0.001,  # meters
    )

    # Remove '#' to run the simulation
    # additive.simulate(input)








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.255 seconds)


.. _sphx_glr_download_examples_gallery_examples_04_using_a_custom_material.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 04_using_a_custom_material.py <04_using_a_custom_material.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 04_using_a_custom_material.ipynb <04_using_a_custom_material.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
