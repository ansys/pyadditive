
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/01_additive_porosity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_examples_01_additive_porosity.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_01_additive_porosity.py:


Porosity Analysis
=================

This tutorial shows how you can use PyAdditive to determine
porosity for given material and machine parameter combinations.

Units are SI (m, kg, s, K) unless otherwise noted.

First, connect to the Additive service.

.. GENERATED FROM PYTHON SOURCE LINES 12-16

.. code-block:: default

    import ansys.additive as pyadditive

    additive = pyadditive.Additive()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    user data path: /home/runner/.local/share/ansys-pyadditive




.. GENERATED FROM PYTHON SOURCE LINES 17-23

Select Material
---------------
The next step is a to choose a material. A list of available materials can
be obtained using the
:meth:`get_materials_list() <ansys.additive.additive.Additive.get_materials_list>`
command.

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default


    print(additive.get_materials_list())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    names: "Ti64"
    names: "IN625"
    names: "CoCr"
    names: "Al357"
    names: "AlSi10Mg"
    names: "IN718"
    names: "316L"
    names: "17-4PH"





.. GENERATED FROM PYTHON SOURCE LINES 27-30

Obtain the parameters for a single material by passing one of the names
from the materials list to
:meth:`get_material() <ansys.additive.additive.Additive.get_material>`.

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: default

    material = additive.get_material("316L")








.. GENERATED FROM PYTHON SOURCE LINES 33-39

Set Machine Parameters
----------------------
Specify machine parameters by first creating an
:class:`AdditiveMachine <ansys.additive.machine.AdditiveMachine>` object
then assigning the desired values. All values are in SI units (m, kg, s, K)
unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 39-44

.. code-block:: default

    machine = pyadditive.AdditiveMachine()

    # Show available parameters
    print(machine)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    AdditiveMachine
    laser_power: 195 W
    scan_speed: 1.0 m/s
    heater_temperature: 80 °C
    layer_thickness: 5e-05 m
    beam_diameter: 0.0001 m
    starting_layer_angle: 57 °
    layer_rotation_angle: 67 °
    hatch_spacing: 0.0001 m
    slicing_stripe_width: 0.01 m





.. GENERATED FROM PYTHON SOURCE LINES 45-46

Set laser power and scan speed

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: default

    machine.scan_speed = 1.2  # m/s
    machine.laser_power = 250  # W








.. GENERATED FROM PYTHON SOURCE LINES 50-54

Specify Porosity Simulation Inputs
----------------------------------
Create a :class:`PorosityInput <ansys.additive.porosity.PorosityInput>` object
containing the desired simulation parameters.

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    input = pyadditive.PorosityInput(
        machine=machine,
        material=material,
        id="porosity-example",
        size_x=0.001,  # meters
        size_y=0.001,
        size_z=0.001,
    )








.. GENERATED FROM PYTHON SOURCE LINES 65-71

Run Simulation
--------------
Use the :meth:`simulate() <ansys.additive.additive.Additive.simulate>` method
on the ``additive`` object to run the simulation. The returned object is a
:class:`PorositySummary <ansys.additive.porosity.PorositySummary>` object
containing the input and the relative density of the simulated sample.

.. GENERATED FROM PYTHON SOURCE LINES 71-74

.. code-block:: default


    summary = additive.simulate(input)








.. GENERATED FROM PYTHON SOURCE LINES 75-77

Print Results
-------------

.. GENERATED FROM PYTHON SOURCE LINES 77-80

.. code-block:: default


    print(f"For {summary.input.material.name} with \n", summary.input.machine)
    print(f"\n    relative density = {round(summary.relative_density, 5)}")




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    For 316L with 
     AdditiveMachine
    laser_power: 250 W
    scan_speed: 1.2 m/s
    heater_temperature: 80 °C
    layer_thickness: 5e-05 m
    beam_diameter: 0.0001 m
    starting_layer_angle: 57 °
    layer_rotation_angle: 67 °
    hatch_spacing: 0.0001 m
    slicing_stripe_width: 0.01 m


        relative density = 0.99998





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  3.879 seconds)


.. _sphx_glr_download_examples_gallery_examples_01_additive_porosity.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 01_additive_porosity.py <01_additive_porosity.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 01_additive_porosity.ipynb <01_additive_porosity.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
