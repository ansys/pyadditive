
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/00_additive_single_bead.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_gallery_examples_00_additive_single_bead.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_00_additive_single_bead.py:


Single Bead Analysis
====================

This tutorial shows how you can use PyAdditive to determine
meltpool characteristics for given material and machine
parameter combinations.

Units are SI (m, kg, s, K) unless otherwise noted.

First, connect to the Additive service.

.. GENERATED FROM PYTHON SOURCE LINES 13-17

.. code-block:: default

    import ansys.additive as pyadditive

    additive = pyadditive.Additive()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    2023-07-17 20:39:09 Connected to localhost:50052
    user data path: /home/runner/.local/share/ansys-pyadditive




.. GENERATED FROM PYTHON SOURCE LINES 18-24

Select Material
---------------
The next step is a to choose a material. A list of available materials can
be obtained using the
:meth:`get_materials_list() <ansys.additive.additive.Additive.get_materials_list>`
command.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default


    print(additive.get_materials_list())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    names: "Ti64"
    names: "IN625"
    names: "CoCr"
    names: "Al357"
    names: "AlSi10Mg"
    names: "IN718"
    names: "316L"
    names: "17-4PH"





.. GENERATED FROM PYTHON SOURCE LINES 28-31

Obtain the parameters for a single material by passing one of the names
from the materials list to
:meth:`get_material() <ansys.additive.additive.Additive.get_material>`.

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    material = additive.get_material("17-4PH")








.. GENERATED FROM PYTHON SOURCE LINES 34-40

Set Machine Parameters
----------------------
Specify machine parameters by first creating an
:class:`AdditiveMachine <ansys.additive.machine.AdditiveMachine>` object
then assigning the desired values. All values are in SI units (m, kg, s, K)
unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 40-46

.. code-block:: default


    machine = pyadditive.AdditiveMachine()

    # Show available parameters
    print(machine)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    AdditiveMachine
    laser_power: 195 W
    scan_speed: 1.0 m/s
    heater_temperature: 80 °C
    layer_thickness: 5e-05 m
    beam_diameter: 0.0001 m
    starting_layer_angle: 57 °
    layer_rotation_angle: 67 °
    hatch_spacing: 0.0001 m
    slicing_stripe_width: 0.01 m





.. GENERATED FROM PYTHON SOURCE LINES 47-48

Set laser power and scan speed

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default

    machine.scan_speed = 1  # m/s
    machine.laser_power = 300  # W








.. GENERATED FROM PYTHON SOURCE LINES 52-56

Specify Single Bead Simulation Inputs
-------------------------------------
Create a :class:`SingleBeadInput <ansys.additive.single_bead.SingleBeadInput>`
object containing the desired simulation parameters.

.. GENERATED FROM PYTHON SOURCE LINES 56-61

.. code-block:: default


    input = pyadditive.SingleBeadInput(
        machine=machine, material=material, id="single-bead-example", bead_length=0.0012  # meters
    )








.. GENERATED FROM PYTHON SOURCE LINES 62-69

Run Simulation
--------------
Use the :meth:`simulate() <ansys.additive.additive.Additive.simulate>`
method of the ``additive`` object to run the simulation. The returned object is a
:class:`SingleBeadSummary <ansys.additive.single_bead.SingleBeadSummary>`
containing the input and a
:class:`MeltPool <ansys.additive.single_bead.MeltPool>` object.

.. GENERATED FROM PYTHON SOURCE LINES 69-72

.. code-block:: default


    summary = additive.simulate(input)








.. GENERATED FROM PYTHON SOURCE LINES 73-81

Plot Melt Pool Statistics
-------------------------
A :class:`Pandas DataFrame <pandas.DataFrame>` containing the melt pool
statistics can be obtained using the
:meth:`data_frame() <ansys.additive.single_bead.MeltPool.data_frame>` property
of the ``melt_pool`` attribute of the ``summary`` object. The
:meth:`plot() <pandas.DataFrame.plot>` method can be used to plot the melt
pool dimensions as a function of bead length.

.. GENERATED FROM PYTHON SOURCE LINES 81-93

.. code-block:: default


    df = summary.melt_pool.data_frame.multiply(1e6)  # convert from meters to microns
    df.index *= 1e3  # convert bead length from meters to millimeters

    df.plot(
        y=["length", "width", "depth", "reference_width", "reference_depth"],
        ylabel="Melt Pool Dimensions (µm)",
        xlabel="Bead Length (mm)",
        title="Melt Pool Dimensions vs Bead Length",
    )





.. image-sg:: /examples/gallery_examples/images/sphx_glr_00_additive_single_bead_001.png
   :alt: Melt Pool Dimensions vs Bead Length
   :srcset: /examples/gallery_examples/images/sphx_glr_00_additive_single_bead_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <AxesSubplot: title={'center': 'Melt Pool Dimensions vs Bead Length'}, xlabel='Bead Length (mm)', ylabel='Melt Pool Dimensions (µm)'>



.. GENERATED FROM PYTHON SOURCE LINES 94-99

List Melt Pool Statistics
-------------------------
A table of the melt pool statistics can be obtained using a
`Pandas Styler <https://pandas.pydata.org/docs/user_guide/style.html>`_.
Here we show only the first few rows using ``head()`` for brevity.

.. GENERATED FROM PYTHON SOURCE LINES 99-102

.. code-block:: default


    df.head().style.format("{:.2f}").format_index("{:.2f}")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style type="text/css">
    </style>
    <table id="T_73b65">
      <thead>
        <tr>
          <th class="blank level0" >&nbsp;</th>
          <th id="T_73b65_level0_col0" class="col_heading level0 col0" >length</th>
          <th id="T_73b65_level0_col1" class="col_heading level0 col1" >width</th>
          <th id="T_73b65_level0_col2" class="col_heading level0 col2" >depth</th>
          <th id="T_73b65_level0_col3" class="col_heading level0 col3" >reference_width</th>
          <th id="T_73b65_level0_col4" class="col_heading level0 col4" >reference_depth</th>
        </tr>
        <tr>
          <th class="index_name level0" >bead_length</th>
          <th class="blank col0" >&nbsp;</th>
          <th class="blank col1" >&nbsp;</th>
          <th class="blank col2" >&nbsp;</th>
          <th class="blank col3" >&nbsp;</th>
          <th class="blank col4" >&nbsp;</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th id="T_73b65_level0_row0" class="row_heading level0 row0" >0.00</th>
          <td id="T_73b65_row0_col0" class="data row0 col0" >87.65</td>
          <td id="T_73b65_row0_col1" class="data row0 col1" >89.03</td>
          <td id="T_73b65_row0_col2" class="data row0 col2" >28.72</td>
          <td id="T_73b65_row0_col3" class="data row0 col3" >0.00</td>
          <td id="T_73b65_row0_col4" class="data row0 col4" >0.00</td>
        </tr>
        <tr>
          <th id="T_73b65_level0_row1" class="row_heading level0 row1" >0.02</th>
          <td id="T_73b65_row1_col0" class="data row1 col0" >118.64</td>
          <td id="T_73b65_row1_col1" class="data row1 col1" >110.63</td>
          <td id="T_73b65_row1_col2" class="data row1 col2" >54.16</td>
          <td id="T_73b65_row1_col3" class="data row1 col3" >20.38</td>
          <td id="T_73b65_row1_col4" class="data row1 col4" >4.16</td>
        </tr>
        <tr>
          <th id="T_73b65_level0_row2" class="row_heading level0 row2" >0.04</th>
          <td id="T_73b65_row2_col0" class="data row2 col0" >137.63</td>
          <td id="T_73b65_row2_col1" class="data row2 col1" >121.14</td>
          <td id="T_73b65_row2_col2" class="data row2 col2" >82.13</td>
          <td id="T_73b65_row2_col3" class="data row2 col3" >56.82</td>
          <td id="T_73b65_row2_col4" class="data row2 col4" >32.13</td>
        </tr>
        <tr>
          <th id="T_73b65_level0_row3" class="row_heading level0 row3" >0.06</th>
          <td id="T_73b65_row3_col0" class="data row3 col0" >158.90</td>
          <td id="T_73b65_row3_col1" class="data row3 col1" >127.86</td>
          <td id="T_73b65_row3_col2" class="data row3 col2" >105.45</td>
          <td id="T_73b65_row3_col3" class="data row3 col3" >72.04</td>
          <td id="T_73b65_row3_col4" class="data row3 col4" >55.45</td>
        </tr>
        <tr>
          <th id="T_73b65_level0_row4" class="row_heading level0 row4" >0.08</th>
          <td id="T_73b65_row4_col0" class="data row4 col0" >178.04</td>
          <td id="T_73b65_row4_col1" class="data row4 col1" >132.89</td>
          <td id="T_73b65_row4_col2" class="data row4 col2" >118.87</td>
          <td id="T_73b65_row4_col3" class="data row4 col3" >80.92</td>
          <td id="T_73b65_row4_col4" class="data row4 col4" >68.87</td>
        </tr>
      </tbody>
    </table>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 103-107

Save Melt Pool Statistics
-------------------------
The melt pool statistics can be saved to a CSV file using the
:meth:`to_csv() <pandas.DataFrame.to_csv>` method.

.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default


    df.to_csv("melt_pool.csv")








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  44.374 seconds)


.. _sphx_glr_download_examples_gallery_examples_00_additive_single_bead.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 00_additive_single_bead.py <00_additive_single_bead.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 00_additive_single_bead.ipynb <00_additive_single_bead.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
