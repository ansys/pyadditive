[{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/DefaultSingleSimulationProgressHandler.html#defaultsinglesimulationprogresshandler","title":"DefaultSingleSimulationProgressHandler","text":"DefaultSingleSimulationProgressHandler\n\n\n\nclass ansys.additive.core.progress_handler.DefaultSingleSimulationProgressHandler\n\nBases: IProgressHandler\n\nCreates a progress bar for a single simulation.\n\nParameters\n\nsim_id\n\npython:str\n\nSimulation ID."},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/DefaultSingleSimulationProgressHandler.html#overview","title":"DefaultSingleSimulationProgressHandler > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nupdate\n\nUpdate the progress bar.\n\nSpecial methods\n\n\n\n\n\n__del__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/DefaultSingleSimulationProgressHandler.html#import-detail","title":"DefaultSingleSimulationProgressHandler > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/DefaultSingleSimulationProgressHandler.html#method-detail","title":"DefaultSingleSimulationProgressHandler > Method detail","text":"Method detail\n\n\n\nDefaultSingleSimulationProgressHandler.update(progress: Progress)\n\nUpdate the progress bar.\n\nParameters\n\nprogress: Progress\n\nLatest progress.\n\n\n\nDefaultSingleSimulationProgressHandler.__del__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/index.html#the-simulation_errorpy-module","title":"The simulation_error.py module","text":"The simulation_error.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/index.html#summary","title":"The simulation_error.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSimulationError\n\nProvides simulation error information.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/index.html#description","title":"The simulation_error.py module > Description","text":"Description\n\nProvides simulation error information.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/index.html#the-material_tuningpy-module","title":"The material_tuning.py module","text":"The material_tuning.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/index.html#summary","title":"The material_tuning.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMaterialTuningInput\n\nProvides input parameters for tuning a custom material.\n\nMaterialTuningSummary\n\nProvides a summary of material tuning simulations.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/index.html#description","title":"The material_tuning.py module > Description","text":"Description\n\nProvides input and result summary containers for material tuning.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/conversions/index.html#the-conversionspy-module","title":"The conversions.py module","text":"The conversions.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/conversions/index.html#summary","title":"The conversions.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ncelsius_to_kelvin\n\nConvert celsius to kelvin.\n\nkelvin_to_celsius\n\nConvert degrees kelvin to celsius.\n\nConstants\n\n\n\n\n\nMM_TO_METER\n\n\n\nMETER_TO_MM\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/conversions/index.html#description","title":"The conversions.py module > Description","text":"Description\n\nUnit conversion constants and functions."},{"objectID":"Home","href":"api/ansys/additive/core/conversions/index.html#module-detail","title":"The conversions.py module > Module detail","text":"Module detail\n\n\n\nconversions.celsius_to_kelvin(celsius: float) -> float\n\nConvert celsius to kelvin.\n\nParameters\n\ncelsius: float\n\nDegrees celsius.\n\nReturns\n\npython:float\n\nEquivalent degrees in kelvin.\n\n\n\nconversions.kelvin_to_celsius(kelvin)\n\nConvert degrees kelvin to celsius.\n\nParameters\n\nkelvin: float\n\nDegrees kelvin.\n\nReturns\n\npython:float\n\nEquivalent degrees in celsius.\n\n\n\nconversions.MM_TO_METER = 0.001\n\n\n\n\n\nconversions.METER_TO_MM = 1000\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/index.html#the-simulation_task_managerpy-module","title":"The simulation_task_manager.py module","text":"The simulation_task_manager.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/index.html#summary","title":"The simulation_task_manager.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSimulationTaskManager\n\nProvides a manager for simulation tasks.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/index.html#description","title":"The simulation_task_manager.py module > Description","text":"Description\n\nManages simulation tasks.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/Microstructure2DResult.html#microstructure2dresult","title":"Microstructure2DResult","text":"Microstructure2DResult\n\n\n\nclass ansys.additive.core.microstructure.Microstructure2DResult(msg: ansys.api.additive.v0.additive_domain_pb2.MicrostructureResult, output_data_path: str)\n\nProvides the results of a 2D microstructure simulation."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/Microstructure2DResult.html#overview","title":"Microstructure2DResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nxy_average_grain_size\n\nAverage grain size (µm) for the XY plane.\n\nxz_average_grain_size\n\nAverage grain size (µm) for the XZ plane.\n\nyz_average_grain_size\n\nAverage grain size (µm) for the YZ plane.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/Microstructure2DResult.html#import-detail","title":"Microstructure2DResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/Microstructure2DResult.html#property-detail","title":"Microstructure2DResult > Property detail","text":"Property detail\n\n\n\nproperty Microstructure2DResult.xy_average_grain_size: float\n\nAverage grain size (µm) for the XY plane.\n\n\n\nproperty Microstructure2DResult.xz_average_grain_size: float\n\nAverage grain size (µm) for the XZ plane.\n\n\n\nproperty Microstructure2DResult.yz_average_grain_size: float\n\nAverage grain size (µm) for the YZ plane."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/Microstructure2DResult.html#method-detail","title":"Microstructure2DResult > Method detail","text":"Method detail\n\n\n\nMicrostructure2DResult.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/PyAdditivePercentStyle.html#pyadditivepercentstyle","title":"PyAdditivePercentStyle","text":"PyAdditivePercentStyle\n\n\n\nclass ansys.additive.core.logger.PyAdditivePercentStyle(fmt, *, defaults=None)\n\nBases: logging.PercentStyle\n\nProvides a common messaging style for the PyAdditiveFormatter class."},{"objectID":"Home","href":"api/ansys/additive/core/logger/PyAdditivePercentStyle.html#import-detail","title":"PyAdditivePercentStyle > Import detail","text":"Import detail\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningSummary.html#materialtuningsummary","title":"MaterialTuningSummary","text":"MaterialTuningSummary\n\n\n\nclass ansys.additive.core.material_tuning.MaterialTuningSummary(input: MaterialTuningInput, msg: ansys.api.additive.v0.additive_domain_pb2.MaterialTuningResult, out_dir: str)\n\nProvides a summary of material tuning simulations."},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningSummary.html#overview","title":"MaterialTuningSummary > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nMaterial tuning input.\n\noptimized_parameters_file\n\nPath to the optimization parameters file.\n\ncoefficients_file\n\nPath to the calculated coefficients file.\n\nmaterial_configuration_file\n\nPath to the updated material properties file.\n\ncharacteristic_width_file\n\nPath to the characteristic width file or None.\n\nlog_file\n\nPath to the tuning log file or None.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningSummary.html#import-detail","title":"MaterialTuningSummary > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningSummary.html#property-detail","title":"MaterialTuningSummary > Property detail","text":"Property detail\n\n\n\nproperty MaterialTuningSummary.input: MaterialTuningInput\n\nMaterial tuning input.\n\n\n\nproperty MaterialTuningSummary.optimized_parameters_file: str\n\nPath to the optimization parameters file.\n\n\n\nproperty MaterialTuningSummary.coefficients_file: str | None\n\nPath to the calculated coefficients file.\n\n\n\nproperty MaterialTuningSummary.material_configuration_file: str | None\n\nPath to the updated material properties file.\n\nPenetration depth and absorptivity coefficients are updated based on the tuning\nresults.\n\n\n\nproperty MaterialTuningSummary.characteristic_width_file: str | None\n\nPath to the characteristic width file or None.\n\n\n\nproperty MaterialTuningSummary.log_file: str\n\nPath to the tuning log file or None."},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningSummary.html#method-detail","title":"MaterialTuningSummary > Method detail","text":"Method detail\n\n\n\nMaterialTuningSummary.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section describes PyAdditive endpoints, their capabilities, and how\nto interact with them programmatically.\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/SimulationError.html#simulationerror","title":"SimulationError","text":"SimulationError\n\n\n\nclass ansys.additive.core.simulation_error.SimulationError(input: ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput | ansys.additive.core.microstructure_3d.Microstructure3DInput | ansys.additive.core.thermal_history.ThermalHistoryInput | ansys.additive.core.material_tuning.MaterialTuningInput, message: str, logs: str)\n\nProvides simulation error information."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/SimulationError.html#overview","title":"SimulationError > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nSimulation input.\n\nmessage\n\nProvides simulation error message.\n\nlogs\n\nProvides simulation logs."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/SimulationError.html#import-detail","title":"SimulationError > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_error/SimulationError.html#property-detail","title":"SimulationError > Property detail","text":"Property detail\n\n\n\nproperty SimulationError.input: ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput | ansys.additive.core.microstructure_3d.Microstructure3DInput | ansys.additive.core.thermal_history.ThermalHistoryInput | ansys.additive.core.material_tuning.MaterialTuningInput\n\nSimulation input.\n\n\n\nproperty SimulationError.message: str\n\nProvides simulation error message.\n\n\n\nproperty SimulationError.logs: str\n\nProvides simulation logs.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/IProgressHandler.html#iprogresshandler","title":"IProgressHandler","text":"IProgressHandler\n\n\n\nclass ansys.additive.core.progress_handler.IProgressHandler\n\nBases: abc.ABC\n\nInterface for simulation progress updates."},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/IProgressHandler.html#overview","title":"IProgressHandler > Overview","text":"Overview\n\nAbstract methods\n\n\n\n\n\nupdate\n\nUpdate progress."},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/IProgressHandler.html#import-detail","title":"IProgressHandler > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/IProgressHandler.html#method-detail","title":"IProgressHandler > Method detail","text":"Method detail\n\n\n\nabstractmethod IProgressHandler.update(progress: Progress)\n\nUpdate progress.\n\nParameters\n\nprogress\n\nProgress\n\nProgress information.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/BuildFile.html#buildfile","title":"BuildFile","text":"BuildFile\n\n\n\nclass ansys.additive.core.geometry_file.BuildFile(type: MachineType, path: os.PathLike)\n\nProvides the build file description.\n\nIn the context of PyAdditive, a build file is a ZIP archive\ncontaining:\n\nA part geometry file in STL format.\n\nZero or more support geometry files in STL format. Support file\nnames must end in *_vless.stl for volumeless supports and\n*_solid.stl for solid supports.\n\nOne or more machine instruction files. The number and type of\nfiles depend upon the machine type.\n\nThese files must be placed in the root of the archive and not\nunder a folder.\n\nParameters\n\ntype: MachineType\n\nType of additive machine the build file is for.\n\npath: os.PathLike\n\nPath to the build file."},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/BuildFile.html#overview","title":"BuildFile > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntype\n\nAdditive manufacturing machine type this file is for.\n\npath\n\nPath of the ZIP file.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/BuildFile.html#import-detail","title":"BuildFile > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/BuildFile.html#property-detail","title":"BuildFile > Property detail","text":"Property detail\n\n\n\nproperty BuildFile.type: MachineType\n\nAdditive manufacturing machine type this file is for.\n\n\n\nproperty BuildFile.path: str\n\nPath of the ZIP file."},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/BuildFile.html#method-detail","title":"BuildFile > Method detail","text":"Method detail\n\n\n\nBuildFile.__repr__()\n\n\n\n\n\nBuildFile.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#3d-microstructure-analysis-beta","title":"3D Microstructure analysis (BETA)","text":"3D Microstructure analysis (BETA)\n\nBeta Features Disclaimer\n\nThis is beta documentation for one or more beta software features.\n\nBeta features are considered unreleased and have not been fully tested nor\nfully validated. The results are not guaranteed by Ansys, Inc. (Ansys) to be\ncorrect. You assume the risk of using beta features.\n\nAt its discretion, Ansys may release, change, or withdraw beta features\nin future revisions.\n\nBeta features are not subject to the Ansys Class 3 error reporting system.\nAnsys makes no commitment to resolve defects reported against beta features;\nhowever, your feedback will help us improve the quality of the product.\n\nAnsys does not guarantee that database and/or input files used with beta\nfeatures will run successfully from version to version of the software, nor\nwith the final released version of the features. You may need to modify the\ndatabase and/or input files before running them on other versions.\n\nDocumentation for beta features is called beta documentation, and it may\nnot be written to the same standard as documentation for released features.\nBeta documentation may not be complete at the time of product release.\nAt its discretion, Ansys may add, change, or delete beta documentation\nat any time.\n\nThis example shows how to use PyAdditive to determine\nthe three-dimensional microstructure for a sample coupon\nwith given material and machine parameters.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#perform-required-import-and-connect","title":"3D Microstructure analysis (BETA) > Perform required import and connect","text":"Perform required import and connect\n\nPerform the required import and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#select-material","title":"3D Microstructure analysis (BETA) > Select material","text":"Select material\n\nSelect a material. You can use the materials_list() method to\nobtain a list of available materials.\n\nYou can obtain the parameters for a single material by passing a name\nfrom the materials list to the material() method."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#specify-machine-parameters","title":"3D Microstructure analysis (BETA) > Specify machine parameters","text":"Specify machine parameters\n\nSpecify machine parameters by first creating an AdditiveMachine object\nand then assigning the desired values. All values are in SI units (m, kg, s, K)\nunless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#set-laser-power-and-scan-speed","title":"3D Microstructure analysis (BETA) > Set laser power and scan speed","text":"Set laser power and scan speed\n\nSet the laser power and scan speed."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#specify-inputs-for-3d-microstructure-simulation","title":"3D Microstructure analysis (BETA) > Specify inputs for 3D microstructure simulation","text":"Specify inputs for 3D microstructure simulation\n\nSpecify microstructure inputs."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#run-simulation","title":"3D Microstructure analysis (BETA) > Run simulation","text":"Run simulation\n\nUse the simulate() method of the additive object to run the simulation.\nThe returned object is either a Microstructure3DSummary object or a\nSimulationError object."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#plot-3d-grain-visualization","title":"3D Microstructure analysis (BETA) > Plot 3D grain visualization","text":"Plot 3D grain visualization\n\nThe summary object includes a VTK file describing the 3D grain structure.\nThe VTK file contains scalar data sets GrainNumber, Phi0_(deg),\nPhi1_(deg), Phi2_(deg), and Temperatures.\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#print-average-grain-sizes","title":"3D Microstructure analysis (BETA) > Print average grain sizes","text":"Print average grain sizes\n\nThe summary object includes the average grain sizes in the XY, XZ, and YZ\nplanes."},{"objectID":"Home","href":"examples/gallery_examples/06_additive_3d_microstructure.html#print-the-simulation-logs","title":"3D Microstructure analysis (BETA) > Print the simulation logs","text":"Print the simulation logs\n\nTo print the simulation logs, use the logs() property.\n\nTotal running time of the script: (0 minutes 24.172 seconds)\n\n\n\nDownload Jupyter notebook: 06_additive_3d_microstructure.ipynb\n\nDownload Python source code: 06_additive_3d_microstructure.py\n\nDownload zipped: 06_additive_3d_microstructure.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_utils/index.html#the-parametric_utilspy-module","title":"The parametric_utils.py module","text":"The parametric_utils.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_utils/index.html#summary","title":"The parametric_utils.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nbuild_rate\n\nCalculate the build rate.\n\nenergy_density\n\nCalculate the energy density."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_utils/index.html#description","title":"The parametric_utils.py module > Description","text":"Description\n\nProvides utility functions used during a parametric study."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_utils/index.html#module-detail","title":"The parametric_utils.py module > Module detail","text":"Module detail\n\n\n\nparametric_utils.build_rate(scan_speed: float, layer_thickness: float, hatch_spacing: float) -> float\n\nCalculate the build rate.\n\nThis is an approximate value useful for comparison but not for an accurate prediction\nof build time. The returned value is simply the product of the scan speed, layer thickness,\nand hatch spacing (if provided).\n\nParameters\n\nscan_speed\n\npython:float\n\nLaser scan speed.\n\nlayer_thickness\n\npython:float\n\nPowder deposit layer thickness.\n\nhatch_spacing\n\npython:float\n\nDistance between hatch scan lines.\n\nReturns\n\npython:float\n\nVolumetric build rate is returned. If input units are m/s and m,\nthe output units are m^3/s.\n\n\n\nparametric_utils.energy_density(laser_power: float, scan_speed: float, layer_thickness: float, hatch_spacing: float) -> float\n\nCalculate the energy density.\n\nThis is an approximate value useful for comparison. The returned value is simply\nthe laser power divided by the build rate. For more information, see the build_rate()\nmethod.\n\nParameters\n\nlaser_power\n\npython:float\n\nLaser power.\n\nscan_speed\n\npython:float\n\nLaser scan speed.\n\nlayer_thickness\n\npython:float\n\nPowder deposit layer thickness.\n\nhatch_spacing\n\npython:float\n\nDistance between hatch scan lines.\n\nReturns\n\npython:float\n\nVolumetric energy density is returned. If input units are W, m/s, and m,\nthe output units are J/m^3.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadInput.html#singlebeadinput","title":"SingleBeadInput","text":"SingleBeadInput\n\n\n\nclass ansys.additive.core.single_bead.SingleBeadInput(*, bead_length: float = DEFAULT_BEAD_LENGTH, machine: ansys.additive.core.machine.AdditiveMachine | None = None, material: ansys.additive.core.material.AdditiveMaterial | None = None, output_thermal_history: bool = DEFAULT_OUTPUT_THERMAL_HISTORY, thermal_history_interval: int = DEFAULT_THERMAL_HISTORY_INTERVAL)\n\nBases: ansys.additive.core.simulation.SimulationInputBase\n\nProvides input parameters for a single bead simulation."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadInput.html#overview","title":"SingleBeadInput > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbead_length\n\nLength (m) of bead to simulate.\n\nmachine\n\nMachine parameters.\n\nmaterial\n\nMaterial parameters.\n\noutput_thermal_history\n\nFlag indicating whether to output the thermal history of the simulation.\n\nthermal_history_interval\n\nInterval, in simulation steps, between thermal history results.\n\nAttributes\n\n\n\n\n\nDEFAULT_BEAD_LENGTH\n\nDefault bead length (m).\n\nMIN_BEAD_LENGTH\n\nMinimum bead length (m).\n\nMAX_BEAD_LENGTH\n\nMaximum bead length (m).\n\nDEFAULT_OUTPUT_THERMAL_HISTORY\n\nDefault output thermal history flag.\n\nMIN_THERMAL_HISTORY_INTERVAL\n\nMinimum thermal history interval.\n\nMAX_THERMAL_HISTORY_INTERVAL\n\nMaximum thermal history interval.\n\nDEFAULT_THERMAL_HISTORY_INTERVAL\n\nDefault thermal history interval.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadInput.html#import-detail","title":"SingleBeadInput > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadInput.html#property-detail","title":"SingleBeadInput > Property detail","text":"Property detail\n\n\n\nproperty SingleBeadInput.bead_length: float\n\nLength (m) of bead to simulate.\n\nValid values are from the MIN_BEAD_LENGTH value to the\nMAX_BEAD_LENGTH value.\n\n\n\nproperty SingleBeadInput.machine: ansys.additive.core.machine.AdditiveMachine\n\nMachine parameters.\n\n\n\nproperty SingleBeadInput.material: ansys.additive.core.material.AdditiveMaterial\n\nMaterial parameters.\n\n\n\nproperty SingleBeadInput.output_thermal_history: bool\n\nFlag indicating whether to output the thermal history of the simulation.\n\n\n\nproperty SingleBeadInput.thermal_history_interval: int\n\nInterval, in simulation steps, between thermal history results.\n\nUse 1 to create thermal history results for every simulation step,\n2 for every other step, and so on."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadInput.html#attribute-detail","title":"SingleBeadInput > Attribute detail","text":"Attribute detail\n\n\n\nSingleBeadInput.DEFAULT_BEAD_LENGTH = 0.003\n\nDefault bead length (m).\n\n\n\nSingleBeadInput.MIN_BEAD_LENGTH = 0.001\n\nMinimum bead length (m).\n\n\n\nSingleBeadInput.MAX_BEAD_LENGTH = 0.01\n\nMaximum bead length (m).\n\n\n\nSingleBeadInput.DEFAULT_OUTPUT_THERMAL_HISTORY = False\n\nDefault output thermal history flag.\n\n\n\nSingleBeadInput.MIN_THERMAL_HISTORY_INTERVAL = 1\n\nMinimum thermal history interval.\n\n\n\nSingleBeadInput.MAX_THERMAL_HISTORY_INTERVAL = 10000\n\nMaximum thermal history interval.\n\n\n\nSingleBeadInput.DEFAULT_THERMAL_HISTORY_INTERVAL = 10000\n\nDefault thermal history interval."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadInput.html#method-detail","title":"SingleBeadInput > Method detail","text":"Method detail\n\n\n\nSingleBeadInput.__repr__()\n\n\n\n\n\nSingleBeadInput.__eq__(__o: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPool.html#meltpool","title":"MeltPool","text":"MeltPool\n\n\n\nclass ansys.additive.core.single_bead.MeltPool(msg: ansys.api.additive.v0.additive_domain_pb2.MeltPool, thermal_history_output: str | None = None)\n\nContains the melt pool size dimensions for each time step during a single bead simulation."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPool.html#overview","title":"MeltPool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndata_frame\n\nGet the data frame containing the melt pool data.\n\ndepth_over_width\n\nReturn the median reference depth over reference width.\n\nlength_over_width\n\nReturn the median length over width.\n\nmedian_width\n\nReturn the median width.\n\nmedian_depth\n\nReturn the median depth.\n\nmedian_length\n\nReturn the median length.\n\nmedian_reference_width\n\nReturn the median reference width.\n\nmedian_reference_depth\n\nReturn the median reference depth.\n\nProperties\n\n\n\n\n\nthermal_history_output\n\nPath to the thermal history output file.\n\nSpecial methods\n\n\n\n\n\n__eq__\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPool.html#import-detail","title":"MeltPool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPool.html#property-detail","title":"MeltPool > Property detail","text":"Property detail\n\n\n\nproperty MeltPool.thermal_history_output: str | None\n\nPath to the thermal history output file."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPool.html#method-detail","title":"MeltPool > Method detail","text":"Method detail\n\n\n\nMeltPool.data_frame() -> pandas.DataFrame\n\nGet the data frame containing the melt pool data.\n\nValues are in meters.\n\nIndices:\n\nbead_length: Length of the bead at each time step.\n\nColumns:\n\nMeltPoolColumnNames.LENGTH.\n\nMeltPoolColumnNames.WIDTH.\n\nMeltPoolColumnNames.DEPTH.\n\nMeltPoolColumnNames.REFERENCE_WIDTH.\n\nMeltPoolColumnNames.REFERENCE_DEPTH.\n\n\n\nMeltPool.depth_over_width() -> float\n\nReturn the median reference depth over reference width.\n\n\n\nMeltPool.length_over_width() -> float\n\nReturn the median length over width.\n\n\n\nMeltPool.median_width() -> float\n\nReturn the median width.\n\n\n\nMeltPool.median_depth() -> float\n\nReturn the median depth.\n\n\n\nMeltPool.median_length() -> float\n\nReturn the median length.\n\n\n\nMeltPool.median_reference_width() -> float\n\nReturn the median reference width.\n\n\n\nMeltPool.median_reference_depth() -> float\n\nReturn the median reference depth.\n\n\n\nMeltPool.__eq__(__o: object) -> bool\n\n\n\n\n\nMeltPool.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/PyAdditiveFormatter.html#pyadditiveformatter","title":"PyAdditiveFormatter","text":"PyAdditiveFormatter\n\n\n\nclass ansys.additive.core.logger.PyAdditiveFormatter(fmt=STDOUT_MSG_FORMAT, datefmt=None, style='%', validate=True, defaults=None)\n\nBases: logging.Formatter\n\nProvides a Formatter class for overwriting default format styles."},{"objectID":"Home","href":"api/ansys/additive/core/logger/PyAdditiveFormatter.html#import-detail","title":"PyAdditiveFormatter > Import detail","text":"Import detail\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/ParametricStudyProgressHandler.html#parametricstudyprogresshandler","title":"ParametricStudyProgressHandler","text":"ParametricStudyProgressHandler\n\n\n\nclass ansys.additive.core.parametric_study.parametric_study_progress_handler.ParametricStudyProgressHandler(study: ansys.additive.core.parametric_study.ParametricStudy)\n\nBases: ansys.additive.core.progress_handler.IProgressHandler\n\nProvides methods to update parametric study simulation status.\n\nParameters\n\nstudy\n\nParametricStudy\n\nParametric study to update."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/ParametricStudyProgressHandler.html#overview","title":"ParametricStudyProgressHandler > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nupdate\n\nUpdate the progress of a simulation."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/ParametricStudyProgressHandler.html#import-detail","title":"ParametricStudyProgressHandler > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/ParametricStudyProgressHandler.html#method-detail","title":"ParametricStudyProgressHandler > Method detail","text":"Method detail\n\n\n\nParametricStudyProgressHandler.update(progress: ansys.additive.core.progress_handler.Progress) -> None\n\nUpdate the progress of a simulation.\n\nParameters\n\nprogress\n\nProgress\n\nProgress information for the simulation.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/index.html#the-simulation_taskpy-module","title":"The simulation_task.py module","text":"The simulation_task.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/index.html#summary","title":"The simulation_task.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSimulationTask\n\nProvides a simulation task.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/index.html#description","title":"The simulation_task.py module > Description","text":"Description\n\nContainer for a simulation task.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorositySummary.html#porositysummary","title":"PorositySummary","text":"PorositySummary\n\n\n\nclass ansys.additive.core.porosity.PorositySummary(input: PorosityInput, result: ansys.api.additive.v0.additive_domain_pb2.PorosityResult, logs: str, status: ansys.additive.core.simulation.SimulationStatus = SimulationStatus.COMPLETED)\n\nBases: ansys.additive.core.simulation.SimulationSummaryBase\n\nProvides a summary of a porosity simulation."},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorositySummary.html#overview","title":"PorositySummary > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nSimulation input.\n\nrelative_density\n\nRatio of the density of the simulated sample to a completely solid sample.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorositySummary.html#import-detail","title":"PorositySummary > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorositySummary.html#property-detail","title":"PorositySummary > Property detail","text":"Property detail\n\n\n\nproperty PorositySummary.input: PorosityInput\n\nSimulation input.\n\n\n\nproperty PorositySummary.relative_density: float\n\nRatio of the density of the simulated sample to a completely solid sample."},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorositySummary.html#method-detail","title":"PorositySummary > Method detail","text":"Method detail\n\n\n\nPorositySummary.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#thermal-history-analysis-beta","title":"Thermal history analysis (BETA)","text":"Thermal history analysis (BETA)\n\nBeta Features Disclaimer\n\nThis is beta documentation for one or more beta software features.\n\nBeta features are considered unreleased and have not been fully tested nor\nfully validated. The results are not guaranteed by Ansys, Inc. (Ansys) to be\ncorrect. You assume the risk of using beta features.\n\nAt its discretion, Ansys may release, change, or withdraw beta features\nin future revisions.\n\nBeta features are not subject to the Ansys Class 3 error reporting system.\nAnsys makes no commitment to resolve defects reported against beta features;\nhowever, your feedback will help us improve the quality of the product.\n\nAnsys does not guarantee that database and/or input files used with beta\nfeatures will run successfully from version to version of the software, nor\nwith the final released version of the features. You may need to modify the\ndatabase and/or input files before running them on other versions.\n\nDocumentation for beta features is called beta documentation, and it may\nnot be written to the same standard as documentation for released features.\nBeta documentation may not be complete at the time of product release.\nAt its discretion, Ansys may add, change, or delete beta documentation\nat any time.\n\nThis example shows how to use PyAdditive to determine\nthermal history during a build using a simulated coaxial\naverage sensor.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#perform-required-import-and-connect","title":"Thermal history analysis (BETA) > Perform required import and connect","text":"Perform required import and connect\n\nPerform the required import and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#specify-model","title":"Thermal history analysis (BETA) > Specify model","text":"Specify model\n\nSpecify the geometry model. PyAdditive supports two types of geometry\nspecifications, the StlFile class and the BuildFile class.\n\nYou can download the example build and STL files by importing the\nexamples module."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#select-material","title":"Thermal history analysis (BETA) > Select material","text":"Select material\n\nSelect a material. You can use the materials_list() method to\nobtain a list of available materials.\n\nYou can obtain the parameters for a single material by passing a name\nfrom the materials list to the material() method."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#specify-machine-parameters","title":"Thermal history analysis (BETA) > Specify machine parameters","text":"Specify machine parameters\n\nSpecify machine parameters by first creating an AdditiveMachine object\nand then assigning the desired values. All values are in SI units (m, kg, s, K)\nunless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#set-laser-power-and-scan-speed","title":"Thermal history analysis (BETA) > Set laser power and scan speed","text":"Set laser power and scan speed\n\nSet the laser power and scan speed."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#specify-inputs-for-thermal-history-simulation","title":"Thermal history analysis (BETA) > Specify inputs for thermal history simulation","text":"Specify inputs for thermal history simulation\n\nThermal history is simulated for the given geometry over a range of heights\nin the Z dimension. More than one range can be specified. Each range is specified\nwith a Range object. The ranges are assigned to a CoaxialAverageSensorInputs\nobject, which also includes a sensor radius. The CoaxialAverageSensorInputs object\nis assigned to a ThermalHistoryInput object."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#run-simulation","title":"Thermal history analysis (BETA) > Run simulation","text":"Run simulation\n\nUse the simulate() method of the additive object to run the simulation.\nThe returned object is either a ThermalHistorySummary object or a\nSimulationError object."},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#plot-thermal-history","title":"Thermal history analysis (BETA) > Plot thermal history","text":"Plot thermal history\n\nPlot the thermal history using PyVista.\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/07_additive_thermal_history.html#print-the-simulation-logs","title":"Thermal history analysis (BETA) > Print the simulation logs","text":"Print the simulation logs\n\nTo print the simulation logs, use the logs() property.\n\nTotal running time of the script: (3 minutes 6.758 seconds)\n\n\n\nDownload Jupyter notebook: 07_additive_thermal_history.ipynb\n\nDownload Python source code: 07_additive_thermal_history.py\n\nDownload zipped: 07_additive_thermal_history.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/index.html#the-parametric_study-package","title":"The parametric_study package","text":"The parametric_study package\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/index.html#summary","title":"The parametric_study package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nconstants\n\nProvides constant values related to parametric studies.\n\nparametric_study\n\nProvides data storage and utilities to perform a parametric study.\n\nparametric_study_progress_handler\n\nProvides a class to update progress when running parametric study simulations.\n\nparametric_utils\n\nProvides utility functions used during a parametric study.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/index.html#description","title":"The parametric_study package > Description","text":"Description\n\nProvides data storage and utility methods for a parametric study.\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#parametric-study","title":"Parametric study","text":"Parametric study\n\nThis example shows how to use PyAdditive to perform a parametric study.\nYou perform a parametric study if you want to optimize additive machine parameters\nto achieve a specific result. Here, the ParametricStudy class is used to\nconduct a parametric study. While not essential, the ParametricStudy\nclass provides data management features that make the work easier.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#perform-required-imports-and-create-a-study","title":"Parametric study > Perform required imports and create a study","text":"Perform required imports and create a study\n\nPerform the required import and create a ParametricStudy instance."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#select-a-material-for-the-study","title":"Parametric study > Select a material for the study","text":"Select a material for the study\n\nSelect a material to use in the study. The material name must be known by\nthe Additive service. You can connect to the Additive service\nand print a list of available materials prior to selecting one."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#create-the-study","title":"Parametric study > Create the study","text":"Create the study\n\nCreate the parametric study with a name and the selected material."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#get-the-study-file-name","title":"Parametric study > Get the study file name","text":"Get the study file name\n\nThe current state of the parametric study is saved to a file upon each\nupdate. You can retrieve the name of the file as shown below. This file\nuses a binary format and is not human readable."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#create-a-single-bead-evaluation","title":"Parametric study > Create a single bead evaluation","text":"Create a single bead evaluation\n\nParametric studies often start with single bead simulations to\ndetermine melt pool statistics. Here, the\ngenerate_single_bead_permutations() method is used to\ngenerate single bead simulation permutations. The parameters\nfor the generate_single_bead_permutations() method allow you to\nspecify a range of machine parameters and filter them by the P/V ratio. Not all\nthe parameters shown are required. Optional parameters that are not specified\nuse default values defined in the MachineConstants class."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#show-the-simulations-as-a-table","title":"Parametric study > Show the simulations as a table","text":"Show the simulations as a table\n\nThe data_frame() method returns a DataFrame\nobject that can be used to display the simulations as a table. Here, the\nhead() method is used to display all the rows of the table."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#skip-some-simulations","title":"Parametric study > Skip some simulations","text":"Skip some simulations\n\nIf you are working with a large parametric study, you may want to skip some\nsimulations to reduce processing time. To do so, set the simulation status\nto SimulationStatus.SKIP which is defined in the SimulationStatus\nclass. Here, a DataFrame object is obtained, a filter is\napplied to get a list of simulation IDs, and then the status is updated on the\nsimulations with those IDs."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#run-single-bead-simulations","title":"Parametric study > Run single bead simulations","text":"Run single bead simulations\n\nRun the simulations using the simulate_study() method. All simulations\nwith a SimulationStatus.NEW status are executed."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#view-single-bead-results","title":"Parametric study > View single bead results","text":"View single bead results\n\nThe single bead simulation results are shown in the Melt Pool Width (m), Melt Pool Depth (m),\nMelt Pool Length (m), Melt Pool Length/Width, Melt Pool Ref Width (m),\nMelt Pool Ref Depth (m), and Melt Pool Ref Depth/Width columns of the data frame.\nFor explanations of these columns, see ColumnNames."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#save-the-study-to-a-csv-file","title":"Parametric study > Save the study to a CSV file","text":"Save the study to a CSV file\n\nThe parametric study is saved with each update in a binary format.\nFor other formats, use the to_* methods provided by the DataFrame class."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#import-a-study-from-a-csv-file","title":"Parametric study > Import a study from a CSV file","text":"Import a study from a CSV file\n\nImport a study from a CSV file using the ParametricStudy.import_csv_study() method.\nThe CSV file must contain the same columns as the parametric study data frame.\nThe ParametricStudy.import_csv_study() method will return a list of errors for each\nsimulation that failed to import and the number of duplicate simulations removed (if any).\nAll other valid simulations will be added to the study."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#load-a-previously-saved-study","title":"Parametric study > Load a previously saved study","text":"Load a previously saved study\n\nLoad a previously saved study using the static\nParameticStudy.load() method."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#create-a-porosity-evaluation","title":"Parametric study > Create a porosity evaluation","text":"Create a porosity evaluation\n\nYou can use the insights gained from the single bead evaluation to\ngenerate parameters for a porosity evaluation. Alternatively, you can\nperform a porosity evaluation without a previous single bead evaluation.\nHere, the laser power and scan speeds are determined by filtering the\nsingle bead results where the ratio of the melt pool reference depth\nto reference width is within a specified range. Additionally, the simulations\nare restricted to a minimum build rate, which is calculated as\nscan speed * layer thickness * hatch spacing. The\ngenerate_porosity_permutations() method is used to add\nporosity simulations to the study."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#run-porosity-simulations","title":"Parametric study > Run porosity simulations","text":"Run porosity simulations\n\nRun the simulations using the simulate_study() method."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#view-porosity-results","title":"Parametric study > View porosity results","text":"View porosity results\n\nPorosity simulation results are shown in the Relative Density column of\nthe data frame."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#create-a-microstructure-evaluation","title":"Parametric study > Create a microstructure evaluation","text":"Create a microstructure evaluation\n\nHere a set of microstructure simulations is generated using many of the same\nparameters used for the porosity simulations. The parameters cooling_rate,\nthermal_gradient, melt_pool_width, and melt_pool_depth are not\nspecified so they are calculated. The\ngenerate_microstructure_permutations() method is used to add\nmicrostructure simulations to the study."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#run-microstructure-simulations","title":"Parametric study > Run microstructure simulations","text":"Run microstructure simulations\n\nRun the simulations using the simulate_study() method."},{"objectID":"Home","href":"examples/gallery_examples/05_advanced_parametric_study.html#view-microstructure-results","title":"Parametric study > View microstructure results","text":"View microstructure results\n\nMicrostructure simulation results are shown in the XY Average Grain Size (microns),\nXZ Average Grain Size (microns), and YZ Average Grain Size (microns) columns of\nthe data frame. For explanations of these columns, see ColumnNames.\n\nTotal running time of the script: (61 minutes 25.741 seconds)\n\n\n\nDownload Jupyter notebook: 05_advanced_parametric_study.ipynb\n\nDownload Python source code: 05_advanced_parametric_study.py\n\nDownload zipped: 05_advanced_parametric_study.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/AdditiveMaterial.html#additivematerial","title":"AdditiveMaterial","text":"AdditiveMaterial\n\n\n\nclass ansys.additive.core.material.AdditiveMaterial(*, absorptivity_maximum: float = 0, absorptivity_minimum: float = 0, absorptivity_powder_coefficient_a: float = 0, absorptivity_powder_coefficient_b: float = 0, absorptivity_solid_coefficient_a: float = 0, absorptivity_solid_coefficient_b: float = 0, anisotropic_strain_coefficient_parallel: float = 0, anisotropic_strain_coefficient_perpendicular: float = 0, anisotropic_strain_coefficient_z: float = 0, cooling_rate_sim_coeff_a: float = 0, cooling_rate_sim_coeff_b: float = 0, description: str = '', elastic_modulus: float = 0, hardening_factor: float = 0, liquidus_temperature: float = 0, material_yield_strength: float = 0, name: str = '', nucleation_constant_bulk: float = 0, nucleation_constant_interface: float = 0, penetration_depth_maximum: float = 0, penetration_depth_minimum: float = 0, penetration_depth_powder_coefficient_a: float = 0, penetration_depth_powder_coefficient_b: float = 0, penetration_depth_solid_coefficient_a: float = 0, penetration_depth_solid_coefficient_b: float = 0, poisson_ratio: float = 0, powder_packing_density: float = 0, purging_gas_convection_coefficient: float = 0, solid_density_at_room_temperature: float = 0, solid_specific_heat_at_room_temperature: float = 0, solid_thermal_conductivity_at_room_temperature: float = 0, solidus_temperature: float = 0, strain_scaling_factor: float = 0, support_yield_strength_ratio: float = 0, thermal_expansion_coefficient: float = 0, vaporization_temperature: float = 0, characteristic_width_data: list[CharacteristicWidthDataPoint] = None, thermal_properties_data: list[ThermalPropertiesDataPoint] = None)\n\nProvides the container for material properties used during additive manufacturing simulations."},{"objectID":"Home","href":"api/ansys/additive/core/material/AdditiveMaterial.html#overview","title":"AdditiveMaterial > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsorptivity_maximum\n\nAbsorptivity maximum.\n\nabsorptivity_minimum\n\nAbsorptivity minimum.\n\nabsorptivity_powder_coefficient_a\n\nAbsorptivity powder coefficient a.\n\nabsorptivity_powder_coefficient_b\n\nAbsorptivity powder coefficient b.\n\nabsorptivity_solid_coefficient_a\n\nAbsorptivity solid coefficient a.\n\nabsorptivity_solid_coefficient_b\n\nAbsorptivity solid coefficient b.\n\nanisotropic_strain_coefficient_parallel\n\nMultiplier on the predicted strain in the direction that the laser is scanning for the major fill rasters.\n\nanisotropic_strain_coefficient_perpendicular\n\nMultiplier on the predicted strain orthogonal to the direction that the laser is scanning for the major fill rasters and in the plane of the surface of the build plate.\n\nanisotropic_strain_coefficient_z\n\nMultiplier on the predicted strain in the Z direction.\n\ncooling_rate_sim_coeff_a\n\nFirst coefficient for the cooling rate SIM model.\n\ncooling_rate_sim_coeff_b\n\nSecond coefficient for the cooling rate SIM model.\n\ndescription\n\nDescription of the material.\n\nelastic_modulus\n\nElastic modulus (Pa).\n\nhardening_factor\n\nFactor relating the elastic modulus to the tangent modulus for plasticity simulations (tangent modulus = elastic modulus * hardening factor).\n\nliquidus_temperature\n\nMinimum temperature (K) at which the material is completely liquid.\n\nmaterial_yield_strength\n\nMaterial yield strength (Pa).\n\nname\n\nName of the material.\n\nnucleation_constant_bulk\n\nControls the homogeneous nucleation rate (in bulk of the microstructure simulation domain) during solidification (1/m^2/K^2).\n\nnucleation_constant_interface\n\nHeterogeneous nucleation rate (on existing solid interfaces) during solidification (1/m/K^2).\n\npenetration_depth_maximum\n\nPenetration depth maximum.\n\npenetration_depth_minimum\n\nPenetration depth minimum.\n\npenetration_depth_powder_coefficient_a\n\nPenetration depth powder coefficient a.\n\npenetration_depth_powder_coefficient_b\n\nPenetration depth powder coefficient b.\n\npenetration_depth_solid_coefficient_a\n\nPenetration depth solid coefficient a.\n\npenetration_depth_solid_coefficient_b\n\nPenetration depth solid coefficient b.\n\npoisson_ratio\n\nPoisson ratio.\n\npowder_packing_density\n\nDensity of powder material relative to the solid.\n\npurging_gas_convection_coefficient\n\nConvection coefficient between the solid and gas during build.\n\nsolid_density_at_room_temperature\n\nDensity of bulk material at room temperature, 298 K (kg/m^3).\n\nsolid_specific_heat_at_room_temperature\n\nSpecific heat of bulk material at room temperature, 298 K (J/kg/K).\n\nsolid_thermal_conductivity_at_room_temperature\n\nThermal conductivity of bulk material at room temperature, 298 K (W/m/K).\n\nsolidus_temperature\n\nMaximum temperature (K) at which the material is completely solid.\n\nstrain_scaling_factor\n\nStrain scaling factor.\n\nsupport_yield_strength_ratio\n\nKnockdown factor that is used to adjust the strength of the support material in comparison to the solid material.\n\nthermal_expansion_coefficient\n\nCoefficient of thermal expansion (1/K).\n\nvaporization_temperature\n\nTemperature (K) at which the material has completely changed from liquid to vapor.\n\ncharacteristic_width_data\n\nList of characteristic width data points.\n\nthermal_properties_data\n\nList of thermal properties data points.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/AdditiveMaterial.html#import-detail","title":"AdditiveMaterial > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/material/AdditiveMaterial.html#property-detail","title":"AdditiveMaterial > Property detail","text":"Property detail\n\n\n\nproperty AdditiveMaterial.absorptivity_maximum: float\n\nAbsorptivity maximum.\n\n\n\nproperty AdditiveMaterial.absorptivity_minimum: float\n\nAbsorptivity minimum.\n\n\n\nproperty AdditiveMaterial.absorptivity_powder_coefficient_a: float\n\nAbsorptivity powder coefficient a.\n\n\n\nproperty AdditiveMaterial.absorptivity_powder_coefficient_b: float\n\nAbsorptivity powder coefficient b.\n\n\n\nproperty AdditiveMaterial.absorptivity_solid_coefficient_a: float\n\nAbsorptivity solid coefficient a.\n\n\n\nproperty AdditiveMaterial.absorptivity_solid_coefficient_b: float\n\nAbsorptivity solid coefficient b.\n\n\n\nproperty AdditiveMaterial.anisotropic_strain_coefficient_parallel: float\n\nMultiplier on the predicted strain in the direction that the laser is scanning for the major fill rasters.\n\n\n\nproperty AdditiveMaterial.anisotropic_strain_coefficient_perpendicular: float\n\nMultiplier on the predicted strain orthogonal to the direction that the laser is scanning for the major fill rasters and in the plane of the surface of the build plate.\n\n\n\nproperty AdditiveMaterial.anisotropic_strain_coefficient_z: float\n\nMultiplier on the predicted strain in the Z direction.\n\n\n\nproperty AdditiveMaterial.cooling_rate_sim_coeff_a: float\n\nFirst coefficient for the cooling rate SIM model.\n\n\n\nproperty AdditiveMaterial.cooling_rate_sim_coeff_b: float\n\nSecond coefficient for the cooling rate SIM model.\n\n\n\nproperty AdditiveMaterial.description: str\n\nDescription of the material.\n\n\n\nproperty AdditiveMaterial.elastic_modulus: float\n\nElastic modulus (Pa).\n\n\n\nproperty AdditiveMaterial.hardening_factor: float\n\nFactor relating the elastic modulus to the tangent modulus for plasticity simulations (tangent modulus = elastic modulus * hardening factor).\n\n\n\nproperty AdditiveMaterial.liquidus_temperature: float\n\nMinimum temperature (K) at which the material is completely liquid.\n\n\n\nproperty AdditiveMaterial.material_yield_strength: float\n\nMaterial yield strength (Pa).\n\n\n\nproperty AdditiveMaterial.name: str\n\nName of the material.\n\n\n\nproperty AdditiveMaterial.nucleation_constant_bulk: float\n\nControls the homogeneous nucleation rate (in bulk of the microstructure simulation domain) during solidification (1/m^2/K^2).\n\n\n\nproperty AdditiveMaterial.nucleation_constant_interface: float\n\nHeterogeneous nucleation rate (on existing solid interfaces) during solidification (1/m/K^2).\n\n\n\nproperty AdditiveMaterial.penetration_depth_maximum: float\n\nPenetration depth maximum.\n\n\n\nproperty AdditiveMaterial.penetration_depth_minimum: float\n\nPenetration depth minimum.\n\n\n\nproperty AdditiveMaterial.penetration_depth_powder_coefficient_a: float\n\nPenetration depth powder coefficient a.\n\n\n\nproperty AdditiveMaterial.penetration_depth_powder_coefficient_b: float\n\nPenetration depth powder coefficient b.\n\n\n\nproperty AdditiveMaterial.penetration_depth_solid_coefficient_a: float\n\nPenetration depth solid coefficient a.\n\n\n\nproperty AdditiveMaterial.penetration_depth_solid_coefficient_b: float\n\nPenetration depth solid coefficient b.\n\n\n\nproperty AdditiveMaterial.poisson_ratio: float\n\nPoisson ratio.\n\n\n\nproperty AdditiveMaterial.powder_packing_density: float\n\nDensity of powder material relative to the solid.\n\n\n\nproperty AdditiveMaterial.purging_gas_convection_coefficient: float\n\nConvection coefficient between the solid and gas during build.\n\n\n\nproperty AdditiveMaterial.solid_density_at_room_temperature: float\n\nDensity of bulk material at room temperature, 298 K (kg/m^3).\n\n\n\nproperty AdditiveMaterial.solid_specific_heat_at_room_temperature: float\n\nSpecific heat of bulk material at room temperature, 298 K (J/kg/K).\n\n\n\nproperty AdditiveMaterial.solid_thermal_conductivity_at_room_temperature: float\n\nThermal conductivity of bulk material at room temperature, 298 K (W/m/K).\n\n\n\nproperty AdditiveMaterial.solidus_temperature: float\n\nMaximum temperature (K) at which the material is completely solid.\n\n\n\nproperty AdditiveMaterial.strain_scaling_factor: float\n\nStrain scaling factor.\n\n\n\nproperty AdditiveMaterial.support_yield_strength_ratio: float\n\nKnockdown factor that is used to adjust the strength of the support material in comparison to the solid material.\n\nThe factor is multiplied by the support material’s yield\nstrength and elastic modulus. A value of 1.0, for example,\nresults in support strength equal to the solid material, whereas\n0.5 is half the strength of the solid material.\n\n\n\nproperty AdditiveMaterial.thermal_expansion_coefficient: float\n\nCoefficient of thermal expansion (1/K).\n\n\n\nproperty AdditiveMaterial.vaporization_temperature: float\n\nTemperature (K) at which the material has completely changed from liquid to vapor.\n\n\n\nproperty AdditiveMaterial.characteristic_width_data: list[CharacteristicWidthDataPoint]\n\nList of characteristic width data points.\n\n\n\nproperty AdditiveMaterial.thermal_properties_data: list[ThermalPropertiesDataPoint]\n\nList of thermal properties data points."},{"objectID":"Home","href":"api/ansys/additive/core/material/AdditiveMaterial.html#method-detail","title":"AdditiveMaterial > Method detail","text":"Method detail\n\n\n\nAdditiveMaterial.__repr__() -> str\n\n\n\n\n\nAdditiveMaterial.__eq__(__o: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/machine/MachineConstants.html#machineconstants","title":"MachineConstants","text":"MachineConstants\n\n\n\nclass ansys.additive.core.machine.MachineConstants\n\nProvides constants for additive manufacturing machine settings."},{"objectID":"Home","href":"api/ansys/additive/core/machine/MachineConstants.html#overview","title":"MachineConstants > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDEFAULT_LASER_POWER\n\nDefault laser power (W).\n\nMIN_LASER_POWER\n\nMinimum laser power (W).\n\nMAX_LASER_POWER\n\nMaximum laser power (W).\n\nDEFAULT_SCAN_SPEED\n\nDefault scan speed (m/s).\n\nMIN_SCAN_SPEED\n\nMinimum scan speed (m/s).\n\nMAX_SCAN_SPEED\n\nMaximum scan speed (m/s).\n\nDEFAULT_HEATER_TEMP\n\nDefault heater temperature (C).\n\nMIN_HEATER_TEMP\n\nMinimum heater temperature (C).\n\nMAX_HEATER_TEMP\n\nMaximum heater temperature (C).\n\nDEFAULT_LAYER_THICKNESS\n\nDefault layer thickness (m).\n\nMIN_LAYER_THICKNESS\n\nMinimum layer thickness (m).\n\nMAX_LAYER_THICKNESS\n\nMaximum layer thickness (m).\n\nDEFAULT_BEAM_DIAMETER\n\nDefault beam diameter (m).\n\nMIN_BEAM_DIAMETER\n\nMinimum beam diameter (m).\n\nMAX_BEAM_DIAMETER\n\nMaximum beam diameter (m).\n\nDEFAULT_STARTING_LAYER_ANGLE\n\nDefault starting layer angle (degrees).\n\nMIN_STARTING_LAYER_ANGLE\n\nMinimum starting layer angle (degrees).\n\nMAX_STARTING_LAYER_ANGLE\n\nMaximum starting layer angle (degrees).\n\nDEFAULT_LAYER_ROTATION_ANGLE\n\nDefault layer rotation angle (degrees).\n\nMIN_LAYER_ROTATION_ANGLE\n\nMinimum layer rotation angle (degrees).\n\nMAX_LAYER_ROTATION_ANGLE\n\nMaximum layer rotation angle (degrees).\n\nDEFAULT_HATCH_SPACING\n\nDefault hatch spacing (m).\n\nMIN_HATCH_SPACING\n\nMinimum hatch spacing (m).\n\nMAX_HATCH_SPACING\n\nMaximum hatch spacing (m).\n\nDEFAULT_SLICING_STRIPE_WIDTH\n\nDefault slicing stripe width (m).\n\nMIN_SLICING_STRIPE_WIDTH\n\nMinimum slicing stripe width (m).\n\nMAX_SLICING_STRIPE_WIDTH\n\nMaximum slicing stripe width (m).\n\nHEAT_SOURCE_MODEL_NAME_GAUSSIAN\n\nHeat source model name for a Gaussian heat source.\n\nHEAT_SOURCE_MODEL_NAME_RING\n\nHeat source model name for a Ring Mode heat source.\n\nDEFAULT_HEAT_SOURCE_MODEL_NAME\n\nDefault heat source model type used in simulations.\n\nAVAILABLE_HEAT_SOURCE_MODELS\n\nList of available heat source model types: [HEAT_SOURCE_MODEL_NAME_GAUSSIAN, HEAT_SOURCE_MODEL_NAME_RING]\n\nDEFAULT_RING_MODE_INDEX\n\nDefault ring mode index (only applicable for ring heat source).\n\nMIN_RING_MODE_INDEX\n\nMinimum ring mode index.\n\nMAX_RING_MODE_INDEX\n\nMaximum ring mode index."},{"objectID":"Home","href":"api/ansys/additive/core/machine/MachineConstants.html#import-detail","title":"MachineConstants > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/machine/MachineConstants.html#attribute-detail","title":"MachineConstants > Attribute detail","text":"Attribute detail\n\n\n\nMachineConstants.DEFAULT_LASER_POWER = 195.0\n\nDefault laser power (W).\n\n\n\nMachineConstants.MIN_LASER_POWER = 50.0\n\nMinimum laser power (W).\n\n\n\nMachineConstants.MAX_LASER_POWER = 700.0\n\nMaximum laser power (W).\n\n\n\nMachineConstants.DEFAULT_SCAN_SPEED = 1.0\n\nDefault scan speed (m/s).\n\n\n\nMachineConstants.MIN_SCAN_SPEED = 0.35\n\nMinimum scan speed (m/s).\n\n\n\nMachineConstants.MAX_SCAN_SPEED = 2.5\n\nMaximum scan speed (m/s).\n\n\n\nMachineConstants.DEFAULT_HEATER_TEMP = 80.0\n\nDefault heater temperature (C).\n\n\n\nMachineConstants.MIN_HEATER_TEMP = 20.0\n\nMinimum heater temperature (C).\n\n\n\nMachineConstants.MAX_HEATER_TEMP = 500.0\n\nMaximum heater temperature (C).\n\n\n\nMachineConstants.DEFAULT_LAYER_THICKNESS = 5e-05\n\nDefault layer thickness (m).\n\n\n\nMachineConstants.MIN_LAYER_THICKNESS = 1e-05\n\nMinimum layer thickness (m).\n\n\n\nMachineConstants.MAX_LAYER_THICKNESS = 0.0001\n\nMaximum layer thickness (m).\n\n\n\nMachineConstants.DEFAULT_BEAM_DIAMETER = 0.0001\n\nDefault beam diameter (m).\n\n\n\nMachineConstants.MIN_BEAM_DIAMETER = 2e-05\n\nMinimum beam diameter (m).\n\n\n\nMachineConstants.MAX_BEAM_DIAMETER = 0.00014\n\nMaximum beam diameter (m).\n\n\n\nMachineConstants.DEFAULT_STARTING_LAYER_ANGLE = 57\n\nDefault starting layer angle (degrees).\n\n\n\nMachineConstants.MIN_STARTING_LAYER_ANGLE = 0\n\nMinimum starting layer angle (degrees).\n\n\n\nMachineConstants.MAX_STARTING_LAYER_ANGLE = 180\n\nMaximum starting layer angle (degrees).\n\n\n\nMachineConstants.DEFAULT_LAYER_ROTATION_ANGLE = 67\n\nDefault layer rotation angle (degrees).\n\n\n\nMachineConstants.MIN_LAYER_ROTATION_ANGLE = 0\n\nMinimum layer rotation angle (degrees).\n\n\n\nMachineConstants.MAX_LAYER_ROTATION_ANGLE = 180\n\nMaximum layer rotation angle (degrees).\n\n\n\nMachineConstants.DEFAULT_HATCH_SPACING = 0.0001\n\nDefault hatch spacing (m).\n\n\n\nMachineConstants.MIN_HATCH_SPACING = 6e-05\n\nMinimum hatch spacing (m).\n\n\n\nMachineConstants.MAX_HATCH_SPACING = 0.0002\n\nMaximum hatch spacing (m).\n\n\n\nMachineConstants.DEFAULT_SLICING_STRIPE_WIDTH = 0.01\n\nDefault slicing stripe width (m).\n\n\n\nMachineConstants.MIN_SLICING_STRIPE_WIDTH = 0.001\n\nMinimum slicing stripe width (m).\n\n\n\nMachineConstants.MAX_SLICING_STRIPE_WIDTH = 0.1\n\nMaximum slicing stripe width (m).\n\n\n\nMachineConstants.HEAT_SOURCE_MODEL_NAME_GAUSSIAN = 'gaussian'\n\nHeat source model name for a Gaussian heat source.\n\n\n\nMachineConstants.HEAT_SOURCE_MODEL_NAME_RING = 'ring'\n\nHeat source model name for a Ring Mode heat source.\n\n\n\nMachineConstants.DEFAULT_HEAT_SOURCE_MODEL_NAME = 'gaussian'\n\nDefault heat source model type used in simulations.\n\n\n\nMachineConstants.AVAILABLE_HEAT_SOURCE_MODELS: list[str]\n\nList of available heat source model types: [HEAT_SOURCE_MODEL_NAME_GAUSSIAN, HEAT_SOURCE_MODEL_NAME_RING]\n\n\n\nMachineConstants.DEFAULT_RING_MODE_INDEX = 0\n\nDefault ring mode index (only applicable for ring heat source).\n\n\n\nMachineConstants.MIN_RING_MODE_INDEX = 0\n\nMinimum ring mode index.\n\n\n\nMachineConstants.MAX_RING_MODE_INDEX = 6\n\nMaximum ring mode index.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DSummary.html#microstructure3dsummary","title":"Microstructure3DSummary","text":"Microstructure3DSummary\n\n\n\nclass ansys.additive.core.microstructure_3d.Microstructure3DSummary(input: Microstructure3DInput, result: ansys.api.additive.v0.additive_domain_pb2.Microstructure3DResult, logs: str, user_data_path: str, status: ansys.additive.core.simulation.SimulationStatus = SimulationStatus.COMPLETED)\n\nBases: ansys.additive.core.simulation.SimulationSummaryBase\n\nProvides the summary of a 3D microstructure simulation."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DSummary.html#overview","title":"Microstructure3DSummary > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nSimulation input.\n\ngrain_3d_vtk\n\nPath to the VTK file containing the 3D grain structure data.\n\nxy_average_grain_size\n\nAverage grain size (µm) for the XY plane.\n\nxz_average_grain_size\n\nAverage grain size (µm) for the XZ plane.\n\nyz_average_grain_size\n\nAverage grain size (µm) for the YZ plane.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DSummary.html#import-detail","title":"Microstructure3DSummary > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DSummary.html#property-detail","title":"Microstructure3DSummary > Property detail","text":"Property detail\n\n\n\nproperty Microstructure3DSummary.input\n\nSimulation input.\n\nFor more information, see the Microstructure3DInput class.\n\n\n\nproperty Microstructure3DSummary.grain_3d_vtk: str\n\nPath to the VTK file containing the 3D grain structure data.\n\nThe VTK file contains these scalar data sets” GrainNumber, Phi0_(deg),\nPhi1_(deg), Phi2_(deg), and Temperatures.\n\n\n\nproperty Microstructure3DSummary.xy_average_grain_size: float\n\nAverage grain size (µm) for the XY plane.\n\n\n\nproperty Microstructure3DSummary.xz_average_grain_size: float\n\nAverage grain size (µm) for the XZ plane.\n\n\n\nproperty Microstructure3DSummary.yz_average_grain_size: float\n\nAverage grain size (µm) for the YZ plane."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DSummary.html#method-detail","title":"Microstructure3DSummary > Method detail","text":"Method detail\n\n\n\nMicrostructure3DSummary.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnection.html#serverconnection","title":"ServerConnection","text":"ServerConnection\n\n\n\nclass ansys.additive.core.server_connection.server_connection.ServerConnection(channel: grpc.Channel | None = None, addr: str | None = None, product_version: str = DEFAULT_PRODUCT_VERSION, log: logging.Logger = None, linux_install_path: os.PathLike | None = None)\n\nProvides connection to Additive server.\n\nIf neither channel nor addr are provided, an attempt is\nmade to start an Additive server and connect to it. Starting a server\nin a cloud environment requires\nPyPIM to be available.\nTo start a server when running on localhost, the Additive option of the\nStructures package of the Ansys unified installation must be installed.\n\nParameters\n\nchannel: grpc.Channel, None\n\ngRPC channel connected to server.\n\naddr: str, None\n\nIPv4 address of server of the form host:port.\n\nproduct_version: str\n\nVersion of the Ansys product installation in the form \"YYR\", where YY\nis the two-digit year and R is the release number. For example, the release\n2024 R1 would be specified as 241. This parameter is only applicable in\nPyPIM-enabled\ncloud environments and on localhost.\n\nlog: logging.Logger, None\n\nLog to write connection messages to.\n\nlinux_install_path: os.PathLike, None default: None\n\nPath to the Ansys installation directory on Linux. This parameter is only\nrequired when Ansys has not been installed in the default location. Example:\n/usr/shared/ansys_inc. Note that the path should not include the product\nversion."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnection.html#overview","title":"ServerConnection > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndisconnect\n\nClean up server connection.\n\nstatus\n\nReturn the server connection status.\n\nready\n\nReturn whether the server is ready.\n\nProperties\n\n\n\n\n\nchannel_str\n\nGRPC channel target.\n\nmaterials_stub\n\nMaterials service stub.\n\nsimulation_stub\n\nSimulation service stub.\n\noperations_stub\n\nOperations service stub.\n\nsettings_stub\n\nSettings service stub.\n\nSpecial methods\n\n\n\n\n\n__del__\n\nDisconnect from server."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnection.html#import-detail","title":"ServerConnection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnection.html#property-detail","title":"ServerConnection > Property detail","text":"Property detail\n\n\n\nproperty ServerConnection.channel_str: str\n\nGRPC channel target.\n\nThe form is generally \"ip:port\". For example, \"127.0.0.1:50052\".\n\n\n\nproperty ServerConnection.materials_stub: ansys.api.additive.v0.additive_materials_pb2_grpc.MaterialsServiceStub\n\nMaterials service stub.\n\n\n\nproperty ServerConnection.simulation_stub: ansys.api.additive.v0.additive_simulation_pb2_grpc.SimulationServiceStub\n\nSimulation service stub.\n\n\n\nproperty ServerConnection.operations_stub: google.longrunning.operations_pb2_grpc.OperationsStub\n\nOperations service stub.\n\n\n\nproperty ServerConnection.settings_stub: ansys.api.additive.v0.additive_settings_pb2_grpc.SettingsServiceStub\n\nSettings service stub."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnection.html#method-detail","title":"ServerConnection > Method detail","text":"Method detail\n\n\n\nServerConnection.__del__() -> None\n\nDisconnect from server.\n\n\n\nServerConnection.disconnect()\n\nClean up server connection.\n\n\n\nServerConnection.status() -> ServerConnectionStatus\n\nReturn the server connection status.\n\n\n\nServerConnection.ready(retries: int = 5) -> bool\n\nReturn whether the server is ready.\n\nParameters\n\nretries: int\n\nNumber of times to retry before giving up. An linearly increasing delay\nis used between each retry.\n\nReturns\n\nbool:\n\nTrue means server is ready. False means the number of retries was exceeded\nwithout receiving a response from the server.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/CircleEquivalenceColumnNames.html#circleequivalencecolumnnames","title":"CircleEquivalenceColumnNames","text":"CircleEquivalenceColumnNames\n\n\n\nclass ansys.additive.core.microstructure.CircleEquivalenceColumnNames\n\nProvides column names for the circle equivalence data frame."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/CircleEquivalenceColumnNames.html#overview","title":"CircleEquivalenceColumnNames > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nGRAIN_NUMBER\n\nGrain number.\n\nAREA_FRACTION\n\nArea fraction for grain.\n\nDIAMETER\n\nGrain diameter (µm).\n\nORIENTATION_ANGLE\n\nOrientation angle (degrees)."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/CircleEquivalenceColumnNames.html#import-detail","title":"CircleEquivalenceColumnNames > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/CircleEquivalenceColumnNames.html#attribute-detail","title":"CircleEquivalenceColumnNames > Attribute detail","text":"Attribute detail\n\n\n\nCircleEquivalenceColumnNames.GRAIN_NUMBER = 'grain_number'\n\nGrain number.\n\n\n\nCircleEquivalenceColumnNames.AREA_FRACTION = 'area_fraction'\n\nArea fraction for grain.\n\n\n\nCircleEquivalenceColumnNames.DIAMETER = 'diameter_um'\n\nGrain diameter (µm).\n\n\n\nCircleEquivalenceColumnNames.ORIENTATION_ANGLE = 'orientation_angle'\n\nOrientation angle (degrees).\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/index.html#the-microstructure_3dpy-module","title":"The microstructure_3d.py module","text":"The microstructure_3d.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/index.html#summary","title":"The microstructure_3d.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMicrostructure3DInput\n\nProvides input parameters for 3D microstructure simulation.\n\nMicrostructure3DSummary\n\nProvides the summary of a 3D microstructure simulation.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/index.html#description","title":"The microstructure_3d.py module > Description","text":"Description\n\nProvides input and result summary containers for microstructure 3D simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/LocalServer.html#localserver","title":"LocalServer","text":"LocalServer\n\n\n\nclass ansys.additive.core.server_connection.local_server.LocalServer\n\nProvides startup utilities for a local Additive server."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/LocalServer.html#overview","title":"LocalServer > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nlaunch\n\nLaunch a local gRPC server for the Additive service.\n\nfind_open_port\n\nFind an open port on the local host."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/LocalServer.html#import-detail","title":"LocalServer > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/LocalServer.html#method-detail","title":"LocalServer > Method detail","text":"Method detail\n\n\n\nstatic LocalServer.launch(port: int, cwd: str = USER_DATA_PATH, product_version: str = DEFAULT_PRODUCT_VERSION, linux_install_path: os.PathLike | None = None) -> subprocess.Popen\n\nLaunch a local gRPC server for the Additive service.\n\nParameters\n\nport: int\n\nPort number to use for gRPC connections.\n\ncwd: str\n\nCurrent working directory to use for the server process.\n\nproduct_version: str\n\nVersion of the Ansys installation to use, of the form \"YYR\", where\nYY is the two digit year and R is the release for\nthat year. For example, Ansys 2024 R1 would be \"241\".\n\nlinux_install_path: os.PathLike, None default: None\n\nPath to the Ansys installation directory on Linux. This parameter is only\nrequired when Ansys has not been installed in the default location. Example:\n/usr/shared/ansys_inc. Note that the path does not include the product\nversion.\n\nReturns\n\nprocess: subprocess.Popen\n\nServer process. To stop the server, call the kill() method on the returned object.\n\n\n\nstatic LocalServer.find_open_port() -> int\n\nFind an open port on the local host.\n\nReturns\n\nport: python:int\n\nOpen port number.\n\nThis port may be taken by the time you try to use it.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/additive/Additive.html#additive","title":"Additive","text":"Additive\n\n\n\nclass ansys.additive.core.additive.Additive(channel: grpc.Channel | None = None, host: str | None = None, port: int = DEFAULT_ADDITIVE_SERVICE_PORT, nsims_per_server: int = 1, product_version: str = DEFAULT_PRODUCT_VERSION, log_level: str = '', log_file: str = '', enable_beta_features: bool = False, linux_install_path: os.PathLike | None = None)\n\nProvides the client interface to one or more Additive services.\n\nParameters\n\nchannel: grpc.Channel, default: None\n\nServer connection. If provided, it is assumed that the\ngrpc.Channel object is connected to the server.\nAlso, if provided, the host and port parameters are ignored.\n\nhost: str, default: None\n\nHost name or IPv4 address of the server. This parameter is ignored if the\nserver_channels or channel parameters is other than None.\n\nport: int, default: 50052\n\nPort number to use when connecting to the server.\n\nnsims_per_server: int, default: 1\n\nNumber of simultaneous simulations to run on the server. Each simulation\nrequires a license checkout. If a license is not available, the simulation\nfails.\n\nproduct_version: str\n\nVersion of the Ansys product installation in the form \"YYR\", where YY\nis the two-digit year and R is the release number. For example, the release\n2024 R1 would be specified as 241. This parameter is only applicable in\nPyPIM-enabled cloud environments and on localhost. Using an empty string\nor None uses the default product version.\n\nlog_level: str, default: “”\n\nMinimum severity level of messages to log. Valid values are “DEBUG”, “INFO”,\n“WARNING”, “ERROR”, and “CRITICAL”. The default value equates to “WARNING”.\n\nlog_file: str, default: “”\n\nFile name to write log messages to.\n\nenable_beta_features: bool, default: False\n\nFlag indicating if beta features are enabled.\n\nlinux_install_path: os.PathLike, None, default: None\n\nPath to the Ansys installation directory on Linux. This parameter is only\nrequired when Ansys has not been installed in the default location. Example:\n/usr/shared/ansys_inc. Note that the path should not include the product\nversion.\n\nExamples\n\nConnect to a list of servers. Multiple connections to the same host are permitted.\n\n>>> additive = Additive(server_connections=[\"localhost:50052\", \"localhost:50052\", \"myserver:50052\"])\n\nConnect to a single server using the host name and port number.\n\n>>> additive = Additive(host=\"additive.ansys.com\", port=12345)\n\nStart and connect to a server on localhost or in a\nPyPIM-enabled cloud environment. Allow two simultaneous\nsimulations on the server.\n\n>>> additive = Additive(nsims_per_server=2)\n\nStart a single server on localhost or in a PyPIM-enabled cloud environment.\nUse version 2024 R1 of the Ansys product installation.\n\n>>> additive = Additive(product_version=\"241\")\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/additive/Additive.html#overview","title":"Additive > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nabout\n\nReturn information about the client and server.\n\napply_server_settings\n\nApply settings to each server.\n\nlist_server_settings\n\nGet a dictionary of settings for the server.\n\nsimulate\n\nExecute additive simulations.\n\nsimulate_async\n\nExecute additive simulations asynchronously. This method does not block while the\n\nmaterials_list\n\nGet a list of material names used in additive simulations.\n\nmaterial\n\nGet a material for use in an additive simulation.\n\nadd_material\n\nAdd a custom material to the library for use in additive simulations.\n\nremove_material\n\nRemove a material from the server.\n\ntune_material\n\nTune a custom material for use with additive simulations.\n\ntune_material_async\n\nTune a custom material for use with additive simulations asynchronously.\n\nsimulate_study\n\nRun the simulations in a parametric study.\n\nsimulate_study_async\n\nRun the simulations in a parametric study asynchronously.\n\ndownload_server_logs\n\nDownload server logs to a specified directory.\n\nProperties\n\n\n\n\n\nenable_beta_features\n\nFlag indicating if beta features are enabled.\n\nconnected\n\nReturn True if the client is connected to a server.\n\nAttributes\n\n\n\n\n\nDEFAULT_ADDITIVE_SERVICE_PORT\n\n\n\nStatic methods\n\n\n\n\n\nload_material\n\nLoad a custom material definition for the current session. The resulting"},{"objectID":"Home","href":"api/ansys/additive/core/additive/Additive.html#import-detail","title":"Additive > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/additive/Additive.html#property-detail","title":"Additive > Property detail","text":"Property detail\n\n\n\nproperty Additive.enable_beta_features: bool\n\nFlag indicating if beta features are enabled.\n\n\n\nproperty Additive.connected: bool\n\nReturn True if the client is connected to a server."},{"objectID":"Home","href":"api/ansys/additive/core/additive/Additive.html#attribute-detail","title":"Additive > Attribute detail","text":"Attribute detail\n\n\n\nAdditive.DEFAULT_ADDITIVE_SERVICE_PORT = 50052\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/additive/Additive.html#method-detail","title":"Additive > Method detail","text":"Method detail\n\n\n\nAdditive.about() -> str\n\nReturn information about the client and server.\n\nReturns\n\npython:str\n\nInformation about the client and server.\n\n\n\nAdditive.apply_server_settings(settings: dict[str, str]) -> list[str]\n\nApply settings to each server.\n\nCurrent settings include:\n- NumConcurrentSims: number of concurrent simulations per server.\n\nParameters\n\nsettings: dict[str, str]\n\nDictionary of settings to apply to the server.\n\nReturns\n\npython:list[python:str]\n\nList of messages from the server.\n\n\n\nAdditive.list_server_settings() -> dict[str, str]\n\nGet a dictionary of settings for the server.\n\n\n\nAdditive.simulate(inputs: ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput | ansys.additive.core.thermal_history.ThermalHistoryInput | ansys.additive.core.microstructure_3d.Microstructure3DInput | list, progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> ansys.additive.core.single_bead.SingleBeadSummary | ansys.additive.core.porosity.PorositySummary | ansys.additive.core.microstructure.MicrostructureSummary | ansys.additive.core.thermal_history.ThermalHistorySummary | ansys.additive.core.microstructure_3d.Microstructure3DSummary | ansys.additive.core.simulation_error.SimulationError | list\n\nExecute additive simulations.\n\nParameters\n\ninputs: SingleBeadInput, PorosityInput, MicrostructureInput, ThermalHistoryInput, Microstructure3DInput, list\n\nParameters to use for simulations. A list of inputs may be provided to run multiple\nsimulations.\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, and inputs contains a single\nsimulation input, a default progress handler will be assigned.\n\nReturns\n\nSingleBeadSummary, PorositySummary, MicrostructureSummary, ThermalHistorySummary,\n\n\n\nMicrostructure3DSummary, SimulationError, python:list\n\nOne or more summaries of simulation results. If a list of inputs is provided, a\nlist is returned.\n\n\n\nAdditive.simulate_async(inputs: ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput | ansys.additive.core.thermal_history.ThermalHistoryInput | ansys.additive.core.microstructure_3d.Microstructure3DInput | list, progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> ansys.additive.core.simulation_task_manager.SimulationTaskManager\n\nExecute additive simulations asynchronously. This method does not block while the\nsimulations are running on the server. This class stores handles of type\ngoogle.longrunning.Operation to the remote tasks that can be used to communicate with\nthe server for status updates.\n\nParameters\n\ninputs: SingleBeadInput, PorosityInput, MicrostructureInput, ThermalHistoryInput, Microstructure3DInput, list\n\nParameters to use for simulations. A list of inputs may be provided to run multiple\nsimulations.\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, and inputs contains a single\nsimulation input, a default progress handler will be assigned.\n\nReturns\n\nSimulationTaskManager\n\nA SimulationTaskManager to handle all tasks sent to the server by this function call.\n\n\n\nAdditive.materials_list() -> list[str]\n\nGet a list of material names used in additive simulations.\n\nReturns\n\npython:list[python:str]\n\nNames of available additive materials.\n\n\n\nAdditive.material(name: str) -> ansys.additive.core.material.AdditiveMaterial\n\nGet a material for use in an additive simulation.\n\nParameters\n\nname: str\n\nName of material.\n\nReturns\n\nAdditiveMaterial\n\nRequested material definition.\n\n\n\nstatic Additive.load_material(parameters_file: str, thermal_lookup_file: str, characteristic_width_lookup_file: str) -> ansys.additive.core.material.AdditiveMaterial\n\nLoad a custom material definition for the current session. The resulting\nAdditiveMaterial object will not be saved to the library.\n\nParameters\n\nparameters_file: str\n\nName of the JSON file containing material parameters. For more information, see\nCreate Material Configuration File (.json)\nin the Additive Manufacturing Beta Features documentation.\n\nthermal_lookup_file: str\n\nName of the CSV file containing the lookup table for thermal dependent properties.\nFor more information, see Create Material Lookup File (.csv)\nin the Additive Manufacturing Beta Features documentation.\n\ncharacteristic_width_lookup_file: str\n\nName of the CSV file containing the lookup table for characteristic melt pool width. For\nmore information, see\nFind Characteristic Width Values and Generate Characteristic Width File (.csv)\nin the Additive Manufacturing Beta Features documentation.\n\nReturns\n\nAdditiveMaterial\n\nA material definition for use in additive simulations.\n\n\n\nAdditive.add_material(parameters_file: str, thermal_lookup_file: str, characteristic_width_lookup_file: str) -> ansys.additive.core.material.AdditiveMaterial | None\n\nAdd a custom material to the library for use in additive simulations.\n\nParameters\n\nparameters_file: str\n\nName of the JSON file containing material parameters. For more information, see\nCreate Material Configuration File (.json)\nin the Additive Manufacturing Beta Features documentation.\n\nthermal_lookup_file: str\n\nName of the CSV file containing the lookup table for temperature-dependent properties.\nFor more information, see Create Material Lookup File (.csv)\nin the Additive Manufacturing Beta Features documentation.\n\ncharacteristic_width_lookup_file: str\n\nName of the CSV file containing the lookup table for characteristic melt pool width. For\nmore information, see\nFind Characteristic Width Values and Generate Characteristic Width File (.csv)\nin the Additive Manufacturing Beta Features documentation.\n\nReturns\n\nAdditiveMaterial\n\nA definition of the material that was added to the library.\n\n\n\nAdditive.remove_material(name: str)\n\nRemove a material from the server.\n\nParameters\n\nname: str\n\nName of the material to remove.\n\n\n\nAdditive.tune_material(input: ansys.additive.core.material_tuning.MaterialTuningInput, out_dir: str = USER_DATA_PATH, progress_handler: ansys.additive.core.progress_handler.IProgressHandler = None) -> ansys.additive.core.material_tuning.MaterialTuningSummary | None\n\nTune a custom material for use with additive simulations.\n\nThis method performs the same function as the Material Tuning Tool\ndescribed in\nFind Simulation Parameters to Match Simulation to Experiments.\nIt is used for one step in the material tuning process. The other steps\nare described in\nChapter 2: Material Tuning Tool (Beta) to Create User Defined Materials.\n\nParameters\n\ninput: MaterialTuningInput\n\nInput parameters for material tuning.\n\nout_dir: str, default: USER_DATA_PATH\n\nFolder path for output files.\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, no progress updates are provided.\n\nReturns\n\nMaterialTuningSummary, python:None\n\nSummary of material tuning or None if the tuning failed.\n\n\n\nAdditive.tune_material_async(input: ansys.additive.core.material_tuning.MaterialTuningInput, out_dir: str = USER_DATA_PATH) -> ansys.additive.core.simulation_task.SimulationTask\n\nTune a custom material for use with additive simulations asynchronously.\n\nThis method performs the same function as the Material Tuning Tool\ndescribed in\nFind Simulation Parameters to Match Simulation to Experiments.\nIt is used for one step in the material tuning process. The other steps\nare described in\nChapter 2: Material Tuning Tool (Beta) to Create User Defined Materials.\n\nParameters\n\ninput: MaterialTuningInput\n\nInput parameters for material tuning.\n\nout_dir: str, default: USER_DATA_PATH\n\nFolder path for output files.\n\nReturns\n\nSimulationTask\n\nAn asynchronous simulation task.\n\n\n\nAdditive.simulate_study(study: ansys.additive.core.parametric_study.ParametricStudy, simulation_ids: list[str] | None = None, types: list[ansys.additive.core.simulation.SimulationType] | None = None, priority: int | None = None, iteration: int = None)\n\nRun the simulations in a parametric study.\n\nParameters\n\nstudy\n\nParametricStudy\n\nParametric study to run.\n\nsimulation_ids\n\npython:list[python:str], default: python:None\n\nList of simulation IDs to run. If this value is None,\nall simulations with a status of Pending are run.\n\ntypes\n\npython:list[SimulationType], default: python:None\n\nType of simulations to run. If this value is None,\nall simulation types are run.\n\npriority\n\npython:int, default: python:None\n\nPriority of simulations to run. If this value is None,\nall priorities are run.\n\niteration\n\npython:int, default: python:None\n\nIteration number of simulations to run. The default is None,\nall iterations are run.\n\nprogress_handler\n\nIProgressHandler, python:None, default: python:None\n\nHandler for progress updates. If None, a ParametricStudyProcessHandler will be used.\n\n\n\nAdditive.simulate_study_async(study: ansys.additive.core.parametric_study.ParametricStudy, simulation_ids: list[str] | None = None, types: list[ansys.additive.core.simulation.SimulationType] | None = None, priority: int | None = None, iteration: int | None = None, progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> ansys.additive.core.simulation_task_manager.SimulationTaskManager\n\nRun the simulations in a parametric study asynchronously.\n\nParameters\n\nstudy\n\nParametricStudy\n\nParametric study to run.\n\nsimulation_ids\n\npython:list[python:str], default: python:None\n\nList of simulation IDs to run. If this value is None,\nall simulations with a status of Pending are run.\n\ntypes\n\npython:list[SimulationType], default: python:None\n\nType of simulations to run. If this value is None,\nall simulation types are run.\n\npriority\n\npython:int, default: python:None\n\nPriority of simulations to run. If this value is None,\nall priorities are run.\n\niteration\n\npython:int, default: python:None\n\nIteration number of simulations to run. The default is None,\nall iterations are run.\n\nprogress_handler\n\nIProgressHandler, python:None, default: python:None\n\nHandler for progress updates.\n\nNotes\n\nThe caller of this method is responsible for updating the study with the results of the simulations.\nSee SimulationTaskManager.summaries() and ParametricStudy.update().\n\n\n\nAdditive.download_server_logs(log_dir: str | os.PathLike) -> str\n\nDownload server logs to a specified directory.\n\nParameters\n\nlog_dir\n\npython:str\n\nDirectory to save the logs to.\n\nReturns\n\npython:str\n\nPath to the downloaded logs.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/additive/index.html#the-additivepy-module","title":"The additive.py module","text":"The additive.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/additive/index.html#summary","title":"The additive.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAdditive\n\nProvides the client interface to one or more Additive services.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/additive/index.html#description","title":"The additive.py module > Description","text":"Description\n\nProvides a client for interacting with the Additive service.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/index.html#the-progress_handlerpy-module","title":"The progress_handler.py module","text":"The progress_handler.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/index.html#summary","title":"The progress_handler.py module > Summary","text":"Summary\n\nInterfaces\n\n\n\n\n\nIProgressHandler\n\nInterface for simulation progress updates.\n\nClasses\n\n\n\n\n\nProgress\n\nProgress information.\n\nDefaultSingleSimulationProgressHandler\n\nCreates a progress bar for a single simulation.\n\nEnums\n\n\n\n\n\nProgressState\n\nSimulation progress status.\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/index.html#description","title":"The progress_handler.py module > Description","text":"Description\n\nProvides progress updates.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistorySummary.html#thermalhistorysummary","title":"ThermalHistorySummary","text":"ThermalHistorySummary\n\n\n\nclass ansys.additive.core.thermal_history.ThermalHistorySummary(input: ThermalHistoryInput, coax_ave_output_folder: str, logs: str, status: ansys.additive.core.simulation.SimulationStatus = SimulationStatus.COMPLETED)\n\nBases: ansys.additive.core.simulation.SimulationSummaryBase\n\nSummary of a thermal history simulation."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistorySummary.html#overview","title":"ThermalHistorySummary > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nSimulation input.\n\ncoax_ave_output_folder\n\nPath to the folder containing the coaxial average sensor results."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistorySummary.html#import-detail","title":"ThermalHistorySummary > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistorySummary.html#property-detail","title":"ThermalHistorySummary > Property detail","text":"Property detail\n\n\n\nproperty ThermalHistorySummary.input: ThermalHistoryInput\n\nSimulation input.\n\nFor more information, see the ThermalHistoryInput class.\n\n\n\nproperty ThermalHistorySummary.coax_ave_output_folder: str\n\nPath to the folder containing the coaxial average sensor results.\n\nResults consist of VTK files, one per deposit layer, containing the thermal\nhistory of the scan pattern.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/Progress.html#progress","title":"Progress","text":"Progress\n\n\n\nclass ansys.additive.core.progress_handler.Progress(/, **data: Any)\n\nBases: pydantic.BaseModel\n\nProgress information."},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/Progress.html#overview","title":"Progress > Overview","text":"Overview\n\nConstructors\n\n\n\n\n\nfrom_proto_msg\n\nCreate a Progress object from a progress protobuf message.\n\nfrom_operation_metadata\n\nCreate a Progress object from an operation metadata (long-running operations) protobuf message.\n\nAttributes\n\n\n\n\n\nsim_id\n\n\n\nstate\n\n\n\npercent_complete\n\n\n\nmessage\n\n\n\ncontext\n\n\n\nSpecial methods\n\n\n\n\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/Progress.html#import-detail","title":"Progress > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/Progress.html#attribute-detail","title":"Progress > Attribute detail","text":"Attribute detail\n\n\n\nProgress.sim_id: str\n\n\n\n\n\nProgress.state: ProgressState\n\n\n\n\n\nProgress.percent_complete: int\n\n\n\n\n\nProgress.message: str\n\n\n\n\n\nProgress.context: str\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/Progress.html#method-detail","title":"Progress > Method detail","text":"Method detail\n\n\n\nclassmethod Progress.from_proto_msg(sim_id: str, progress: ansys.api.additive.v0.additive_domain_pb2.Progress)\n\nCreate a Progress object from a progress protobuf message.\n\n\n\nclassmethod Progress.from_operation_metadata(metadata: ansys.api.additive.v0.additive_operations_pb2.OperationMetadata)\n\nCreate a Progress object from an operation metadata (long-running operations) protobuf message.\n\n\n\nProgress.__str__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/index.html#the-examples-package","title":"The examples package","text":"The examples package\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/index.html#summary","title":"The examples package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\ndownloads\n\nProvides functions for downloading sample datasets from the PyAdditive repository.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/index.html#description","title":"The examples package > Description","text":"Description\n\nProvides utilities for use with PyAdditive examples.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/MachineType.html#machinetype","title":"MachineType","text":"MachineType\n\n\n\nclass ansys.additive.core.geometry_file.MachineType\n\nBases: enum.IntEnum\n\nMachine type values."},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/MachineType.html#overview","title":"MachineType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\n\n\nADDITIVE_INDUSTRIES\n\n\n\nSLM\n\n\n\nRENISHAW\n\n\n\nEOS\n\n\n\nTRUMPF\n\n\n\nHB3D\n\n\n\nSISMA\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/MachineType.html#import-detail","title":"MachineType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/MachineType.html#attribute-detail","title":"MachineType > Attribute detail","text":"Attribute detail\n\n\n\nMachineType.NONE\n\n\n\n\n\nMachineType.ADDITIVE_INDUSTRIES\n\n\n\n\n\nMachineType.SLM\n\n\n\n\n\nMachineType.RENISHAW\n\n\n\n\n\nMachineType.EOS\n\n\n\n\n\nMachineType.TRUMPF\n\n\n\n\n\nMachineType.HB3D\n\n\n\n\n\nMachineType.SISMA\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/CharacteristicWidthDataPoint.html#characteristicwidthdatapoint","title":"CharacteristicWidthDataPoint","text":"CharacteristicWidthDataPoint\n\n\n\nclass ansys.additive.core.material.CharacteristicWidthDataPoint(*, laser_power: float = 0, scan_speed: float = 0, characteristic_width: float = 0)\n\nProvides the container for a characteristic width data point.\n\nAdditive material definitions include a file containing a characteristic width\nlookup table, allowing a given laser speed and power to be correlated to a\ncharacteristic melt pool width. This class represents a single row in the lookup\ntable."},{"objectID":"Home","href":"api/ansys/additive/core/material/CharacteristicWidthDataPoint.html#overview","title":"CharacteristicWidthDataPoint > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncharacteristic_width\n\nCharacteristic melt pool width for a given laser power and scan\n\nlaser_power\n\nLaser power (W).\n\nscan_speed\n\nLaser scan speed (m/s).\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/CharacteristicWidthDataPoint.html#import-detail","title":"CharacteristicWidthDataPoint > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/material/CharacteristicWidthDataPoint.html#property-detail","title":"CharacteristicWidthDataPoint > Property detail","text":"Property detail\n\n\n\nproperty CharacteristicWidthDataPoint.characteristic_width: float\n\nCharacteristic melt pool width for a given laser power and scan\nspeed (m).\n\n\n\nproperty CharacteristicWidthDataPoint.laser_power: float\n\nLaser power (W).\n\n\n\nproperty CharacteristicWidthDataPoint.scan_speed: float\n\nLaser scan speed (m/s)."},{"objectID":"Home","href":"api/ansys/additive/core/material/CharacteristicWidthDataPoint.html#method-detail","title":"CharacteristicWidthDataPoint > Method detail","text":"Method detail\n\n\n\nCharacteristicWidthDataPoint.__repr__()\n\n\n\n\n\nCharacteristicWidthDataPoint.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Computation times","href":"sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n72:08.587 total execution time for 8 files from all galleries:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_05_advanced_parametric_study.py (../../examples/05_advanced_parametric_study.py)\n\n61:25.741\n\n0.0\n\nsphx_glr_examples_gallery_examples_00_additive_single_bead.py (../../examples/00_additive_single_bead.py)\n\n03:08.902\n\n0.0\n\nsphx_glr_examples_gallery_examples_07_additive_thermal_history.py (../../examples/07_additive_thermal_history.py)\n\n03:06.758\n\n0.0\n\nsphx_glr_examples_gallery_examples_04_custom_material_tuning.py (../../examples/04_custom_material_tuning.py)\n\n02:03.111\n\n0.0\n\nsphx_glr_examples_gallery_examples_01_additive_porosity.py (../../examples/01_additive_porosity.py)\n\n01:13.949\n\n0.0\n\nsphx_glr_examples_gallery_examples_02_additive_2d_microstructure.py (../../examples/02_additive_2d_microstructure.py)\n\n00:45.633\n\n0.0\n\nsphx_glr_examples_gallery_examples_06_additive_3d_microstructure.py (../../examples/06_additive_3d_microstructure.py)\n\n00:24.172\n\n0.0\n\nsphx_glr_examples_gallery_examples_03_using_a_custom_material.py (../../examples/03_using_a_custom_material.py)\n\n00:00.321\n\n0.0\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#porosity-analysis","title":"Porosity analysis","text":"Porosity analysis\n\nThis example shows how to use PyAdditive to determine\nporosity for a given material and machine parameter combinations.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#perform-required-import-and-connect","title":"Porosity analysis > Perform required import and connect","text":"Perform required import and connect\n\nPerform the required import and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#select-material","title":"Porosity analysis > Select material","text":"Select material\n\nSelect a material. You can use the materials_list() method to\nobtain a list of available materials.\n\nYou can obtain the parameters for a single material by passing a name\nfrom the materials list to the material() method."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#specify-machine-parameters","title":"Porosity analysis > Specify machine parameters","text":"Specify machine parameters\n\nSpecify machine parameters by first creating an AdditiveMachine object\nand then assigning the desired values. All values are in SI units (m, kg, s, K)\nunless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#set-laser-power-and-scan-speed","title":"Porosity analysis > Set laser power and scan speed","text":"Set laser power and scan speed\n\nSet the laser power and scan speed."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#specify-inputs-for-porosity-simulation","title":"Porosity analysis > Specify inputs for porosity simulation","text":"Specify inputs for porosity simulation\n\nCreate a PorosityInput object containing the desired simulation parameters."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#run-simulation","title":"Porosity analysis > Run simulation","text":"Run simulation\n\nUse the simulate() method of the additive object to run the simulation.\nThe returned object is either a PorositySummary object\ncontaining the input and the relative density of the simulated sample or a\nSimulationError object."},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#print-relative-density","title":"Porosity analysis > Print relative density","text":"Print relative density"},{"objectID":"Home","href":"examples/gallery_examples/01_additive_porosity.html#print-the-simulation-logs","title":"Porosity analysis > Print the simulation logs","text":"Print the simulation logs\n\nTo print the simulation logs, use the logs() property.\n\nTotal running time of the script: (1 minutes 13.949 seconds)\n\n\n\nDownload Jupyter notebook: 01_additive_porosity.ipynb\n\nDownload Python source code: 01_additive_porosity.py\n\nDownload zipped: 01_additive_porosity.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/misc/index.html#the-miscpy-module","title":"The misc.py module","text":"The misc.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/misc/index.html#summary","title":"The misc.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nshort_uuid\n\nGenerate a short UUID."},{"objectID":"Home","href":"api/ansys/additive/core/misc/index.html#description","title":"The misc.py module > Description","text":"Description\n\nProvides miscellaneous utility functions."},{"objectID":"Home","href":"api/ansys/additive/core/misc/index.html#module-detail","title":"The misc.py module > Module detail","text":"Module detail\n\n\n\nmisc.short_uuid(nchars: int = 12) -> str\n\nGenerate a short UUID.\n\nParameters\n\nnchars\n\npython:int, default 12\n\nNumber of characters in the UUID. Only applies if nchars is greater\nthan 6. Using the default, the probability of a collision is 1.23e-17\nfor 1 billion rounds.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_requests/index.html#the-simulation_requestspy-module","title":"The simulation_requests.py module","text":"The simulation_requests.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_requests/index.html#summary","title":"The simulation_requests.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ncreate_request\n\nCreate a simulation request and set up any pre-requisites on a server, such as an STL file for a"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_requests/index.html#description","title":"The simulation_requests.py module > Description","text":"Description\n\nSet up methods for grpc simulation requests."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_requests/index.html#module-detail","title":"The simulation_requests.py module > Module detail","text":"Module detail\n\n\n\nsimulation_requests.create_request(simulation_input: ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput | ansys.additive.core.thermal_history.ThermalHistoryInput | ansys.additive.core.microstructure_3d.Microstructure3DInput, server: ansys.additive.core.server_connection.ServerConnection, progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> ansys.api.additive.v0.additive_simulation_pb2.SimulationRequest\n\nCreate a simulation request and set up any pre-requisites on a server, such as an STL file for a\nthermal history simulation.\n\nParameters\n\nsimulation_input: SingleBeadInput, PorosityInput, MicrostructureInput, ThermalHistoryInput, Microstructure3DInput\n\nParameters to use for simulation.\n\nserver: ServerConnection\n\nServer to use for the simulation.\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, no progress updates are provided.\n\nReturns\n\nA SimulationRequest\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#2d-microstructure-analysis","title":"2D Microstructure analysis","text":"2D Microstructure analysis\n\nThis example shows how to use PyAdditive to determine\nthe two-dimensional microstructure in the XY, XZ, and YZ\nplanes for a sample coupon with given material and\nmachine parameters.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#perform-required-import-and-connect","title":"2D Microstructure analysis > Perform required import and connect","text":"Perform required import and connect\n\nPerform the required import and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#select-material","title":"2D Microstructure analysis > Select material","text":"Select material\n\nSelect a material. You can use the materials_list() method to\nobtain a list of available materials.\n\nYou can obtain the parameters for a single material by passing a name\nfrom the materials list to the material() method."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#specify-machine-parameters","title":"2D Microstructure analysis > Specify machine parameters","text":"Specify machine parameters\n\nSpecify machine parameters by first creating an AdditiveMachine object\nand then assigning the desired values. All values are in SI units (m, kg, s, K)\nunless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#set-laser-power-and-scan-speed","title":"2D Microstructure analysis > Set laser power and scan speed","text":"Set laser power and scan speed\n\nSet the laser power and scan speed."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#specify-inputs-for-microstructure-simulation","title":"2D Microstructure analysis > Specify inputs for microstructure simulation","text":"Specify inputs for microstructure simulation\n\nMicrostructure simulation inputs can include thermal parameters.\nThermal parameters consist of cooling_rate, thermal_gradient,\nmelt_pool_width, and melt_pool_depth. If thermal parameters are not\nspecified, the thermal solver is used to obtain the parameters prior\nto running the microstructure solver."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#run-simulation","title":"2D Microstructure analysis > Run simulation","text":"Run simulation\n\nUse the simulate() method of the additive object to run the simulation.\nThe returned object is either a MicrostructureSummary object or a\nSimulationError object."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#plot-results","title":"2D Microstructure analysis > Plot results","text":"Plot results\n\nThe summary` object includes three VTK files, one for each of the\nXY, XZ, and YZ planes. Each VTK file contains data sets for grain orientation,\nboundaries, and number. In addition, the summary object\nincludes circle equivalence data and average grain size for each plane.\nSee MicrostructureSummary for details."},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#plot-2d-grain-visualizations","title":"2D Microstructure analysis > Plot 2D grain visualizations","text":"Plot 2D grain visualizations\n\nPlot the planar data, read VTK data in data set objects, and create a color\nmap to use with the boundary map.\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#plot-grain-statistics","title":"2D Microstructure analysis > Plot grain statistics","text":"Plot grain statistics\n\nAdd grain statistic plots to a figure, create a figure for grain statistics,\nand then plot the figure.\n\n"},{"objectID":"Home","href":"examples/gallery_examples/02_additive_2d_microstructure.html#print-the-simulation-logs","title":"2D Microstructure analysis > Print the simulation logs","text":"Print the simulation logs\n\nTo print the simulation logs, use the logs() property.\n\nTotal running time of the script: (0 minutes 45.633 seconds)\n\n\n\nDownload Jupyter notebook: 02_additive_2d_microstructure.ipynb\n\nDownload Python source code: 02_additive_2d_microstructure.py\n\nDownload zipped: 02_additive_2d_microstructure.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n72:08.587 total execution time for 8 files from examples/gallery_examples:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_05_advanced_parametric_study.py (05_advanced_parametric_study.py)\n\n61:25.741\n\n0.0\n\nsphx_glr_examples_gallery_examples_00_additive_single_bead.py (00_additive_single_bead.py)\n\n03:08.902\n\n0.0\n\nsphx_glr_examples_gallery_examples_07_additive_thermal_history.py (07_additive_thermal_history.py)\n\n03:06.758\n\n0.0\n\nsphx_glr_examples_gallery_examples_04_custom_material_tuning.py (04_custom_material_tuning.py)\n\n02:03.111\n\n0.0\n\nsphx_glr_examples_gallery_examples_01_additive_porosity.py (01_additive_porosity.py)\n\n01:13.949\n\n0.0\n\nsphx_glr_examples_gallery_examples_02_additive_2d_microstructure.py (02_additive_2d_microstructure.py)\n\n00:45.633\n\n0.0\n\nsphx_glr_examples_gallery_examples_06_additive_3d_microstructure.py (06_additive_3d_microstructure.py)\n\n00:24.172\n\n0.0\n\nsphx_glr_examples_gallery_examples_03_using_a_custom_material.py (03_using_a_custom_material.py)\n\n00:00.321\n\n0.0\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistoryInput.html#thermalhistoryinput","title":"ThermalHistoryInput","text":"ThermalHistoryInput\n\n\n\nclass ansys.additive.core.thermal_history.ThermalHistoryInput(*, machine: ansys.additive.core.machine.AdditiveMachine = None, material: ansys.additive.core.material.AdditiveMaterial = None, geometry: ansys.additive.core.geometry_file.StlFile | ansys.additive.core.geometry_file.BuildFile = None, coax_ave_sensor_inputs: CoaxialAverageSensorInputs = None)\n\nBases: ansys.additive.core.simulation.SimulationInputBase\n\nProvides input parameters for microstructure simulation."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistoryInput.html#overview","title":"ThermalHistoryInput > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmachine\n\nMachine parameters.\n\nmaterial\n\nMaterial parameters.\n\ngeometry\n\nPart geometry.\n\ncoax_ave_sensor_inputs\n\nCoaxial average sensor inputs.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistoryInput.html#import-detail","title":"ThermalHistoryInput > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistoryInput.html#property-detail","title":"ThermalHistoryInput > Property detail","text":"Property detail\n\n\n\nproperty ThermalHistoryInput.machine: ansys.additive.core.machine.AdditiveMachine\n\nMachine parameters.\n\n\n\nproperty ThermalHistoryInput.material: ansys.additive.core.material.AdditiveMaterial\n\nMaterial parameters.\n\n\n\nproperty ThermalHistoryInput.geometry: ansys.additive.core.geometry_file.StlFile | ansys.additive.core.geometry_file.BuildFile\n\nPart geometry.\n\n\n\nproperty ThermalHistoryInput.coax_ave_sensor_inputs: CoaxialAverageSensorInputs\n\nCoaxial average sensor inputs."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/ThermalHistoryInput.html#method-detail","title":"ThermalHistoryInput > Method detail","text":"Method detail\n\n\n\nThermalHistoryInput.__repr__()\n\n\n\n\n\nThermalHistoryInput.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/index.html#the-local_serverpy-module","title":"The local_server.py module","text":"The local_server.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/index.html#summary","title":"The local_server.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nLocalServer\n\nProvides startup utilities for a local Additive server.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/local_server/index.html#description","title":"The local_server.py module > Description","text":"Description\n\nProvides startup utilities for a local Additive server.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationSummaryBase.html#simulationsummarybase","title":"SimulationSummaryBase","text":"SimulationSummaryBase\n\n\n\nclass ansys.additive.core.simulation.SimulationSummaryBase(logs: str, status: SimulationStatus = SimulationStatus.COMPLETED)\n\nProvides a base class for simulation summaries."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationSummaryBase.html#overview","title":"SimulationSummaryBase > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlogs\n\nSimulation logs.\n\nstatus\n\nSimulation status."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationSummaryBase.html#import-detail","title":"SimulationSummaryBase > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationSummaryBase.html#property-detail","title":"SimulationSummaryBase > Property detail","text":"Property detail\n\n\n\nproperty SimulationSummaryBase.logs: str\n\nSimulation logs.\n\n\n\nproperty SimulationSummaryBase.status: SimulationStatus\n\nSimulation status.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/CoaxialAverageSensorInputs.html#coaxialaveragesensorinputs","title":"CoaxialAverageSensorInputs","text":"CoaxialAverageSensorInputs\n\n\n\nclass ansys.additive.core.thermal_history.CoaxialAverageSensorInputs(radius: float = MIN_SENSOR_RADIUS, z_heights: list[Range] = None)\n\nProvides descriptions for coaxial average sensors."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/CoaxialAverageSensorInputs.html#overview","title":"CoaxialAverageSensorInputs > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nradius\n\nRadius of the circular field of the view of the sensor (m).\n\nz_heights\n\nArray of ranges along the z axis of the geometry (m).\n\nAttributes\n\n\n\n\n\nMIN_SENSOR_RADIUS\n\nMinimum radius for the circular field of view of the sensor (m).\n\nMAX_SENSOR_RADIUS\n\nMaximum radius for the circular field of view of the sensor (m).\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/CoaxialAverageSensorInputs.html#import-detail","title":"CoaxialAverageSensorInputs > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/CoaxialAverageSensorInputs.html#property-detail","title":"CoaxialAverageSensorInputs > Property detail","text":"Property detail\n\n\n\nproperty CoaxialAverageSensorInputs.radius: float\n\nRadius of the circular field of the view of the sensor (m).\n\nValid values are from the MIN_SENSOR_RADIUS value to the\nMAX_SENSOR_RADIUS value.\n\n\n\nproperty CoaxialAverageSensorInputs.z_heights: list[Range]\n\nArray of ranges along the z axis of the geometry (m).\n\nThe simulated sensor follows the scan path for each deposit layer within each\nrange."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/CoaxialAverageSensorInputs.html#attribute-detail","title":"CoaxialAverageSensorInputs > Attribute detail","text":"Attribute detail\n\n\n\nCoaxialAverageSensorInputs.MIN_SENSOR_RADIUS = 5e-05\n\nMinimum radius for the circular field of view of the sensor (m).\n\n\n\nCoaxialAverageSensorInputs.MAX_SENSOR_RADIUS = 0.015\n\nMaximum radius for the circular field of view of the sensor (m)."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/CoaxialAverageSensorInputs.html#method-detail","title":"CoaxialAverageSensorInputs > Method detail","text":"Method detail\n\n\n\nCoaxialAverageSensorInputs.__repr__()\n\n\n\n\n\nCoaxialAverageSensorInputs.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/download/index.html#the-downloadpy-module","title":"The download.py module","text":"The download.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/download/index.html#summary","title":"The download.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ndownload_file\n\nDownload a file from the server to the localhost.\n\ndownload_logs\n\nDownload logs from the server to the localhost.\n\nhandle_download_file_response\n\nHandle server response."},{"objectID":"Home","href":"api/ansys/additive/core/download/index.html#description","title":"The download.py module > Description","text":"Description\n\nProvides a function for downloading files from the server to the client."},{"objectID":"Home","href":"api/ansys/additive/core/download/index.html#module-detail","title":"The download.py module > Module detail","text":"Module detail\n\n\n\ndownload.download_file(stub: ansys.api.additive.v0.additive_simulation_pb2_grpc.SimulationServiceStub, remote_file_name: str, local_folder: str, progress_handler: ansys.additive.core.progress_handler.IProgressHandler = None) -> str\n\nDownload a file from the server to the localhost.\n\nParameters\n\nstub: SimulationServiceStub\n\ngRPC stub for the simulation service.\n\nremote_file_name: str\n\nPath to file on the server.\n\nlocal_folder: str\n\nFolder on your localhost to write your file to.\n\nprogress_handler: ProgressLogger, None, default: None\n\nProgress update handler. If None, no progress will be provided.\n\nReturns\n\npython:str\n\nLocal path of downloaded file.\n\n\n\ndownload.download_logs(stub: ansys.api.additive.v0.additive_server_info_pb2_grpc.ServerInfoServiceStub, local_folder: str, progress_handler: ansys.additive.core.progress_handler.IProgressHandler = None) -> str\n\nDownload logs from the server to the localhost.\n\nParameters\n\nstub: ServerInfoServiceStub\n\ngRPC stub for the server information service.\n\nlocal_folder: str\n\nFolder on your localhost to write the server logs to.\n\nprogress_handler: ProgressLogger, None, default: None\n\nProgress update handler. If None, no progress will be provided.\n\nReturns\n\npython:str\n\nLocal path of downloaded file.\n\n\n\ndownload.handle_download_file_response(destination: str, download_file_response: any, progress_handler: ansys.additive.core.progress_handler.IProgressHandler = None) -> None\n\nHandle server response.\n\nParameters\n\ndestination: str\n\nDestination of the file.\n\ndownload_file_response: any\n\nDownload file response.\n\nprogress_handler: IProgressHandler, default: None\n\nProgress handler.\n\n\n\n"},{"objectID":"Contribute","href":"contributing.html#contribute","title":"Contribute","text":"Contribute\n\nOverall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys developer’s guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyAdditive."},{"objectID":"Contribute","href":"contributing.html#configure-your-development-environment","title":"Contribute > Configure your development environment","text":"Configure your development environment\n\nFor instructions on setting up your development environment, see\nref_getting_started, particularly the ref_install_in_developer_mode\nsection."},{"objectID":"Contribute","href":"contributing.html#post-issues","title":"Contribute > Post issues","text":"Post issues\n\nUse the PyAdditive Issues\npage to submit questions, report bugs, and request new features. When possible, you\nshould use these issue templates:\n\nBug, problem, error: For filing a bug report\n\nDocumentation error: For requesting modifications to the documentation\n\nAdding an example: For proposing a new example\n\nNew feature: For requesting enhancements to the code\n\nIf your issue does not fit into one of these template categories, you can click\nthe link for opening a blank issue.\n\nTo reach the project support team, email pyansys.core@ansys.com."},{"objectID":"Contribute","href":"contributing.html#view-documentation","title":"Contribute > View documentation","text":"View documentation\n\nDocumentation for the latest stable release of PyAdditive is hosted at\nPyAdditive Documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option\nfor switching from viewing the documentation for the latest stable release\nto viewing the documentation for the development version or previously\nreleased versions."},{"objectID":"Contribute","href":"contributing.html#adhere-to-code-style","title":"Contribute > Adhere to code style","text":"Adhere to code style\n\nPyAdditive follows the PEP8 standard as outlined in\nPEP 8 in\nthe PyAnsys Developer’s Guide\nand implements style checking using pre-commit.\n\nTo ensure your code meets minimum code styling standards, run these commands:\n\nYou can also install this as a git pre-commit hook by running this command:\n\nThis way, it’s not possible for you to push code that fails the style checks:\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorosityInput.html#porosityinput","title":"PorosityInput","text":"PorosityInput\n\n\n\nclass ansys.additive.core.porosity.PorosityInput(*, size_x: float = DEFAULT_SAMPLE_SIZE, size_y: float = DEFAULT_SAMPLE_SIZE, size_z: float = DEFAULT_SAMPLE_SIZE, machine: ansys.additive.core.machine.AdditiveMachine = None, material: ansys.additive.core.material.AdditiveMaterial = None)\n\nBases: ansys.additive.core.simulation.SimulationInputBase\n\nProvides input parameters for porosity simulation."},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorosityInput.html#overview","title":"PorosityInput > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsize_x\n\nSize (m) of the simulated sample in the x dimension.\n\nsize_y\n\nSize (m) of the simulated sample in the y dimension.\n\nsize_z\n\nSize (m) of the simulated sample in the z dimension.\n\nmachine\n\nMachine-related parameters.\n\nmaterial\n\nMaterial used during the simulation.\n\nAttributes\n\n\n\n\n\nDEFAULT_SAMPLE_SIZE\n\nDefault sample size in each dimension (m).\n\nMIN_SAMPLE_SIZE\n\nMinimum sample size in each dimension (m).\n\nMAX_SAMPLE_SIZE\n\nMaximum sample size in each dimension (m).\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorosityInput.html#import-detail","title":"PorosityInput > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorosityInput.html#property-detail","title":"PorosityInput > Property detail","text":"Property detail\n\n\n\nproperty PorosityInput.size_x: float\n\nSize (m) of the simulated sample in the x dimension.\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\n\n\n\nproperty PorosityInput.size_y: float\n\nSize (m) of the simulated sample in the y dimension.\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\n\n\n\nproperty PorosityInput.size_z: float\n\nSize (m) of the simulated sample in the z dimension.\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\n\n\n\nproperty PorosityInput.machine: ansys.additive.core.machine.AdditiveMachine\n\nMachine-related parameters.\n\n\n\nproperty PorosityInput.material: ansys.additive.core.material.AdditiveMaterial\n\nMaterial used during the simulation."},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorosityInput.html#attribute-detail","title":"PorosityInput > Attribute detail","text":"Attribute detail\n\n\n\nPorosityInput.DEFAULT_SAMPLE_SIZE = 0.003\n\nDefault sample size in each dimension (m).\n\n\n\nPorosityInput.MIN_SAMPLE_SIZE = 0.001\n\nMinimum sample size in each dimension (m).\n\n\n\nPorosityInput.MAX_SAMPLE_SIZE = 0.01\n\nMaximum sample size in each dimension (m)."},{"objectID":"Home","href":"api/ansys/additive/core/porosity/PorosityInput.html#method-detail","title":"PorosityInput > Method detail","text":"Method detail\n\n\n\nPorosityInput.__repr__()\n\n\n\n\n\nPorosityInput.__eq__(__o: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnectionStatus.html#serverconnectionstatus","title":"ServerConnectionStatus","text":"ServerConnectionStatus\n\n\n\nclass ansys.additive.core.server_connection.server_connection.ServerConnectionStatus\n\nProvides status information about a server.\n\nParameters\n\nconnected: bool\n\nTrue if server is connected.\n\nchannel_str: string, None\n\nHostname and port of server connection in the form host:port.\n\nmetadata: dict, None\n\nServer metadata."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnectionStatus.html#overview","title":"ServerConnectionStatus > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nconnected\n\nTrue if server is connected.\n\nchannel_str\n\nHostname and port of server connection in the form host:port.\n\nmetadata\n\nServer metadata.\n\nSpecial methods\n\n\n\n\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnectionStatus.html#import-detail","title":"ServerConnectionStatus > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnectionStatus.html#attribute-detail","title":"ServerConnectionStatus > Attribute detail","text":"Attribute detail\n\n\n\nServerConnectionStatus.connected: bool\n\nTrue if server is connected.\n\n\n\nServerConnectionStatus.channel_str: str = None\n\nHostname and port of server connection in the form host:port.\n\n\n\nServerConnectionStatus.metadata: dict = None\n\nServer metadata."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/ServerConnectionStatus.html#method-detail","title":"ServerConnectionStatus > Method detail","text":"Method detail\n\n\n\nServerConnectionStatus.__str__() -> ServerConnectionStatus.__str__.str\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/Logger.html#logger","title":"Logger","text":"Logger\n\n\n\nclass ansys.additive.core.logger.Logger(level=logging.DEBUG, to_file=False, to_stdout=True, filename=FILE_NAME)\n\nProvides the logger used for each PyAdditive session.\n\nThis class allows you to add handlers to the logger to output messages\nto a file or to the standard output (stdout).\n\nParameters\n\nlevel\n\ndefault\n\nDEBUG\n\nLogging level to filter the message severity allowed in the logger.\n\nto_file\n\nbool, default: python:False\n\nWhether to write log messages to a file.\n\nto_stdout\n\nbool, default: python:True\n\nWhether to write log messages to the standard output.\n\nfilename\n\nstr, default: obj:FILE_NAME\n\nName of the file to write log log messages to."},{"objectID":"Home","href":"api/ansys/additive/core/logger/Logger.html#overview","title":"Logger > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nlog_to_file\n\nAdd a file handler to the logger.\n\nlog_to_stdout\n\nAdd the standard output handler to the logger.\n\nadd_handling_uncaught_expections\n\nRedirect the output of an exception to a logger.\n\nsetLevel\n\nSet the logging level for the logger.\n\nAttributes\n\n\n\n\n\nfile_handler\n\n\n\nstdout_handler\n\n\n\nlogger\n\n\n\ndebug\n\n\n\ninfo\n\n\n\nwarning\n\n\n\nerror\n\n\n\ncritical\n\n\n\nlog\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/Logger.html#import-detail","title":"Logger > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/logger/Logger.html#attribute-detail","title":"Logger > Attribute detail","text":"Attribute detail\n\n\n\nLogger.file_handler = None\n\n\n\n\n\nLogger.stdout_handler = None\n\n\n\n\n\nLogger.logger\n\n\n\n\n\nLogger.debug\n\n\n\n\n\nLogger.info\n\n\n\n\n\nLogger.warning\n\n\n\n\n\nLogger.error\n\n\n\n\n\nLogger.critical\n\n\n\n\n\nLogger.log\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/Logger.html#method-detail","title":"Logger > Method detail","text":"Method detail\n\n\n\nLogger.log_to_file(filename=FILE_NAME, level=LOG_LEVEL)\n\nAdd a file handler to the logger.\n\nParameters\n\nfilename\n\nstr, default: obj:FILE_NAME\n\nName of the file to write log messages to.\n\nlevel\n\ndefault\n\nDEBUG\n\nLogging level to filter the message severity allowed in the logger.\n\n\n\nLogger.log_to_stdout(level=LOG_LEVEL)\n\nAdd the standard output handler to the logger.\n\nParameters\n\nlevel\n\ndefault\n\nDEBUG\n\nLogging level to filter the message severity allowed in the logger.\n\n\n\nLogger.add_handling_uncaught_expections(logger)\n\nRedirect the output of an exception to a logger.\n\nParameters\n\nlogger\n\npython:str\n\nName of the logger.\n\n\n\nLogger.setLevel(level: str | int) -> None\n\nSet the logging level for the logger.\n\nParameters\n\nlevel\n\npython:str or python:int\n\nLogging level to filter the message severity allowed in the logger.\nIf int, it must be one of the levels defined in the logging module.\nValid string values are \"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\",\nand \"CRITICAL\".\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/ColumnNames.html#columnnames","title":"ColumnNames","text":"ColumnNames\n\n\n\nclass ansys.additive.core.parametric_study.constants.ColumnNames\n\nProvides column names for the parametric study data frame.\n\nValues are stored internally as a Pandas DataFrame.\nColumn name definitions follow."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/ColumnNames.html#overview","title":"ColumnNames > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nITERATION\n\nOptional iteration number, useful for tracking the sequence of\n\nPRIORITY\n\nPriority value used to determine execution order.\n\nTYPE\n\nType of simulation.\n\nID\n\nUnique identifier for the simulation.\n\nSTATUS\n\nStatus of the simulation.\n\nMATERIAL\n\nName of material used during simulation.\n\nHEATER_TEMPERATURE\n\nHeater temperature (C).\n\nLAYER_THICKNESS\n\nPowder deposition layer thickness (m).\n\nBEAM_DIAMETER\n\nLaser beam diameter (m).\n\nLASER_POWER\n\nLaser power (W).\n\nSCAN_SPEED\n\nLaser scan speed (m/s).\n\nPV_RATIO\n\nRatio of laser power to scan speed (J/m).\n\nSTART_ANGLE\n\nHatch scan angle for first layer (degrees).\n\nROTATION_ANGLE\n\nHatch rotation angle for subsequent layers (degrees).\n\nHATCH_SPACING\n\nHatch spacing (m).\n\nSTRIPE_WIDTH\n\nStripe width (m).\n\nHEAT_SOURCE\n\nType of heat source used in the simulation.\n\nRING_MODE_INDEX\n\nSet of prescribed coefficients used for ring mode simulations.\n\nENERGY_DENSITY\n\nLaser power divided by build rate (J/m^3).\n\nSINGLE_BEAD_LENGTH\n\nLength of single bead to simulate (m).\n\nSB_THERMAL_HISTORY_FLAG\n\nFlag indicating whether to output single bead thermal history.\n\nSB_THERMAL_HISTORY_INTERVAL\n\nInterval at which to output single bead thermal history in number of time steps.\n\nBUILD_RATE\n\nLayer thickness * scan speed * hatch spacing (m^3/s).\n\nMELT_POOL_WIDTH\n\nMedian melt pool width measured at the top of the powder layer (m).\n\nMELT_POOL_DEPTH\n\nMedian melt pool depth measured from the top of the powder layer (m).\n\nMELT_POOL_LENGTH\n\nMedian melt pool length measured at the top of the powder layer (m).\n\nMELT_POOL_LENGTH_OVER_WIDTH\n\nRatio of MELT_POOL_LENGTH to MELT_POOL_WIDTH.\n\nMELT_POOL_REFERENCE_WIDTH\n\nMedian melt pool width measured at the top of the base plate (m).\n\nMELT_POOL_REFERENCE_DEPTH\n\nMedian melt pool depth measured from the top of the base plate (m).\n\nMELT_POOL_REFERENCE_DEPTH_OVER_WIDTH\n\nRatio of MELT_POOL_REFERENCE_DEPTH to MELT_POOL_REFERENCE_WIDTH.\n\nPOROSITY_SIZE_X\n\nX dimension size of porosity sample to simulate (m).\n\nPOROSITY_SIZE_Y\n\nY dimension size of Porosity sample to simulate (m).\n\nPOROSITY_SIZE_Z\n\nZ dimension size of Porosity sample to simulate (m).\n\nRELATIVE_DENSITY\n\nRelative density of simulated porosity sample.\n\nMICRO_MIN_X\n\nMinimum X dimension position of microstructure sample (m).\n\nMICRO_MIN_Y\n\nMinimum Y dimension position of microstructure sample (m).\n\nMICRO_MIN_Z\n\nMinimum Z dimension position of microstructure sample (m).\n\nMICRO_SIZE_X\n\nX dimension size of microstructure sample to simulate (m).\n\nMICRO_SIZE_Y\n\nY dimension size of microstructure sample to simulate (m).\n\nMICRO_SIZE_Z\n\nZ dimension size of microstructure sample to simulate (m).\n\nMICRO_SENSOR_DIM\n\nSensor dimension used in microstructure simulations (m).\n\nCOOLING_RATE\n\nUser-provided cooling rate used in microstructure simulations (K/s).\n\nTHERMAL_GRADIENT\n\nUser-provided thermal gradient used in microstructure simulations (K/m).\n\nMICRO_MELT_POOL_WIDTH\n\nUser-provided melt pool width used in microstructure simulation (m).\n\nMICRO_MELT_POOL_DEPTH\n\nUser-provided melt pool depth used in microstructure simulation (m).\n\nRANDOM_SEED\n\nUser-provided random seed used in microstructure simulation.\n\nXY_AVERAGE_GRAIN_SIZE\n\nAverage microstructure grain size in the XY plane (microns).\n\nXZ_AVERAGE_GRAIN_SIZE\n\nAverage microstructure grain size in the XZ plane (microns).\n\nYZ_AVERAGE_GRAIN_SIZE\n\nAverage microstructure grain size in the YZ plane (microns).\n\nERROR_MESSAGE\n\nError message if simulation failed."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/ColumnNames.html#import-detail","title":"ColumnNames > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/ColumnNames.html#attribute-detail","title":"ColumnNames > Attribute detail","text":"Attribute detail\n\n\n\nColumnNames.ITERATION = 'Iteration'\n\nOptional iteration number, useful for tracking the sequence of\nsimulation groups.\n\n\n\nColumnNames.PRIORITY = 'Priority'\n\nPriority value used to determine execution order.\n\n\n\nColumnNames.TYPE = 'Type'\n\nType of simulation.\n\n\n\nColumnNames.ID = 'ID'\n\nUnique identifier for the simulation.\n\n\n\nColumnNames.STATUS = 'Status'\n\nStatus of the simulation.\n\n\n\nColumnNames.MATERIAL = 'Material'\n\nName of material used during simulation.\n\n\n\nColumnNames.HEATER_TEMPERATURE = 'Heater Temp (C)'\n\nHeater temperature (C).\n\n\n\nColumnNames.LAYER_THICKNESS = 'Layer Thickness (m)'\n\nPowder deposition layer thickness (m).\n\n\n\nColumnNames.BEAM_DIAMETER = 'Beam Diameter (m)'\n\nLaser beam diameter (m).\n\n\n\nColumnNames.LASER_POWER = 'Laser Power (W)'\n\nLaser power (W).\n\n\n\nColumnNames.SCAN_SPEED = 'Scan Speed (m/s)'\n\nLaser scan speed (m/s).\n\n\n\nColumnNames.PV_RATIO = 'Laser Power/Scan Speed (J/m)'\n\nRatio of laser power to scan speed (J/m).\n\n\n\nColumnNames.START_ANGLE = 'Start Angle (degrees)'\n\nHatch scan angle for first layer (degrees).\n\n\n\nColumnNames.ROTATION_ANGLE = 'Rotation Angle (degrees)'\n\nHatch rotation angle for subsequent layers (degrees).\n\n\n\nColumnNames.HATCH_SPACING = 'Hatch Spacing (m)'\n\nHatch spacing (m).\n\n\n\nColumnNames.STRIPE_WIDTH = 'Stripe Width (m)'\n\nStripe width (m).\n\n\n\nColumnNames.HEAT_SOURCE = 'Heat Source'\n\nType of heat source used in the simulation.\n\n\n\nColumnNames.RING_MODE_INDEX = 'Ring Mode Index'\n\nSet of prescribed coefficients used for ring mode simulations.\n\n\n\nColumnNames.ENERGY_DENSITY = 'Energy Density (J/m^3)'\n\nLaser power divided by build rate (J/m^3).\n\n\n\nColumnNames.SINGLE_BEAD_LENGTH = 'Single Bead Length (m)'\n\nLength of single bead to simulate (m).\n\n\n\nColumnNames.SB_THERMAL_HISTORY_FLAG = 'Single Bead Thermal History Flag'\n\nFlag indicating whether to output single bead thermal history.\n\n\n\nColumnNames.SB_THERMAL_HISTORY_INTERVAL = 'Single Bead Thermal History Interval (steps)'\n\nInterval at which to output single bead thermal history in number of time steps.\n\n\n\nColumnNames.BUILD_RATE = 'Build Rate (m^3/s)'\n\nLayer thickness * scan speed * hatch spacing (m^3/s).\n\n\n\nColumnNames.MELT_POOL_WIDTH = 'Melt Pool Width (m)'\n\nMedian melt pool width measured at the top of the powder layer (m).\n\n\n\nColumnNames.MELT_POOL_DEPTH = 'Melt Pool Depth (m)'\n\nMedian melt pool depth measured from the top of the powder layer (m).\n\n\n\nColumnNames.MELT_POOL_LENGTH = 'Melt Pool Length (m)'\n\nMedian melt pool length measured at the top of the powder layer (m).\n\n\n\nColumnNames.MELT_POOL_LENGTH_OVER_WIDTH = 'Melt Pool Length/Width'\n\nRatio of MELT_POOL_LENGTH to MELT_POOL_WIDTH.\n\n\n\nColumnNames.MELT_POOL_REFERENCE_WIDTH = 'Melt Pool Ref Width (m)'\n\nMedian melt pool width measured at the top of the base plate (m).\n\n\n\nColumnNames.MELT_POOL_REFERENCE_DEPTH = 'Melt Pool Ref Depth (m)'\n\nMedian melt pool depth measured from the top of the base plate (m).\n\n\n\nColumnNames.MELT_POOL_REFERENCE_DEPTH_OVER_WIDTH = 'Melt Pool Ref Depth/Width'\n\nRatio of MELT_POOL_REFERENCE_DEPTH to MELT_POOL_REFERENCE_WIDTH.\n\n\n\nColumnNames.POROSITY_SIZE_X = 'Porosity Size X (m)'\n\nX dimension size of porosity sample to simulate (m).\n\n\n\nColumnNames.POROSITY_SIZE_Y = 'Porosity Size Y (m)'\n\nY dimension size of Porosity sample to simulate (m).\n\n\n\nColumnNames.POROSITY_SIZE_Z = 'Porosity Size Z (m)'\n\nZ dimension size of Porosity sample to simulate (m).\n\n\n\nColumnNames.RELATIVE_DENSITY = 'Relative Density'\n\nRelative density of simulated porosity sample.\n\n\n\nColumnNames.MICRO_MIN_X = 'Micro Min X (m)'\n\nMinimum X dimension position of microstructure sample (m).\n\n\n\nColumnNames.MICRO_MIN_Y = 'Micro Min Y (m)'\n\nMinimum Y dimension position of microstructure sample (m).\n\n\n\nColumnNames.MICRO_MIN_Z = 'Micro Min Z (m)'\n\nMinimum Z dimension position of microstructure sample (m).\n\n\n\nColumnNames.MICRO_SIZE_X = 'Micro Size X (m)'\n\nX dimension size of microstructure sample to simulate (m).\n\n\n\nColumnNames.MICRO_SIZE_Y = 'Micro Size Y (m)'\n\nY dimension size of microstructure sample to simulate (m).\n\n\n\nColumnNames.MICRO_SIZE_Z = 'Micro Size Z (m)'\n\nZ dimension size of microstructure sample to simulate (m).\n\n\n\nColumnNames.MICRO_SENSOR_DIM = 'Micro Sensor Dim (m)'\n\nSensor dimension used in microstructure simulations (m).\n\n\n\nColumnNames.COOLING_RATE = 'Cooling Rate (K/s)'\n\nUser-provided cooling rate used in microstructure simulations (K/s).\n\n\n\nColumnNames.THERMAL_GRADIENT = 'Thermal Gradient (K/m)'\n\nUser-provided thermal gradient used in microstructure simulations (K/m).\n\n\n\nColumnNames.MICRO_MELT_POOL_WIDTH = 'Micro Melt Pool Width (m)'\n\nUser-provided melt pool width used in microstructure simulation (m).\n\n\n\nColumnNames.MICRO_MELT_POOL_DEPTH = 'Micro Melt Pool Depth (m)'\n\nUser-provided melt pool depth used in microstructure simulation (m).\n\n\n\nColumnNames.RANDOM_SEED = 'Random Seed'\n\nUser-provided random seed used in microstructure simulation.\n\n\n\nColumnNames.XY_AVERAGE_GRAIN_SIZE = 'XY Average Grain Size (microns)'\n\nAverage microstructure grain size in the XY plane (microns).\n\n\n\nColumnNames.XZ_AVERAGE_GRAIN_SIZE = 'XZ Average Grain Size (microns)'\n\nAverage microstructure grain size in the XZ plane (microns).\n\n\n\nColumnNames.YZ_AVERAGE_GRAIN_SIZE = 'YZ Average Grain Size (microns)'\n\nAverage microstructure grain size in the YZ plane (microns).\n\n\n\nColumnNames.ERROR_MESSAGE = 'Error Message'\n\nError message if simulation failed.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationInputBase.html#simulationinputbase","title":"SimulationInputBase","text":"SimulationInputBase\n\n\n\nclass ansys.additive.core.simulation.SimulationInputBase\n\nProvides a base class for simulation inputs."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationInputBase.html#overview","title":"SimulationInputBase > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nReturn a unique identifier for this simulation."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationInputBase.html#import-detail","title":"SimulationInputBase > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationInputBase.html#property-detail","title":"SimulationInputBase > Property detail","text":"Property detail\n\n\n\nproperty SimulationInputBase.id: str\n\nReturn a unique identifier for this simulation.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/index.html#the-server_connection-package","title":"The server_connection package","text":"The server_connection package\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/index.html#summary","title":"The server_connection package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nconstants\n\nConstants used for server connections.\n\nlocal_server\n\nProvides startup utilities for a local Additive server.\n\nnetwork_utils\n\nProvides network connection utility functions.\n\nserver_connection\n\nProvides definitions and untilities for connecting to the Additive server.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/index.html#description","title":"The server_connection package > Description","text":"Description\n\nServer connection definition and utilities.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/network_utils/index.html#the-network_utilspy-module","title":"The network_utils.py module","text":"The network_utils.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/network_utils/index.html#summary","title":"The network_utils.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ncheck_valid_ip\n\nCheck for valid IP address.\n\ncheck_valid_port\n\nCheck for valid port number.\n\ncreate_channel\n\nCreate an insecure gRPC channel.\n\nConstants\n\n\n\n\n\nMAX_RCV_MSG_LEN\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/network_utils/index.html#description","title":"The network_utils.py module > Description","text":"Description\n\nProvides network connection utility functions."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/network_utils/index.html#module-detail","title":"The network_utils.py module > Module detail","text":"Module detail\n\n\n\nnetwork_utils.check_valid_ip(ip)\n\nCheck for valid IP address.\n\n\n\nnetwork_utils.check_valid_port(port, lower_bound=1024, high_bound=65535)\n\nCheck for valid port number.\n\n\n\nnetwork_utils.create_channel(target: str, max_rcv_msg_len: int = MAX_RCV_MSG_LEN)\n\nCreate an insecure gRPC channel.\n\nParameters\n\ntarget: str\n\nIP address of the host to connect to, of the form host:port.\n\nmax_rcv_msg_len: int\n\nSize, in bytes, of the buffer used to receive messages. Default is\nMAX_RCV_MSG_LEN.\n\nReturns\n\nchannel: grpc.Channel\n\nInsecure gRPC channel.\n\n\n\nnetwork_utils.MAX_RCV_MSG_LEN = 268435456\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/SimulationTask.html#simulationtask","title":"SimulationTask","text":"SimulationTask\n\n\n\nclass ansys.additive.core.simulation_task.SimulationTask(server_connection: ansys.additive.core.server_connection.ServerConnection, long_running_operation: google.longrunning.operations_pb2.Operation, simulation_input: ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput | ansys.additive.core.thermal_history.ThermalHistoryInput | ansys.additive.core.microstructure_3d.Microstructure3DInput | ansys.additive.core.material_tuning.MaterialTuningInput, user_data_path: str)\n\nProvides a simulation task.\n\nParameters\n\nserver_connection: ServerConnection\n\nThe client connection to the Additive server.\n\nlong_running_operation: Operation\n\nThe long-running operation representing the simulation on the server.\n\nsimulation_input: SingleBeadInput | PorosityInput | MicrostructureInput | ThermalHistoryInput | Microstructure3DInput | MaterialTuningInput\n\nThe simulation input.\n\nuser_data_path: str\n\nThe path to the user data directory."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/SimulationTask.html#overview","title":"SimulationTask > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nstatus\n\nFetch status from the server to update progress and results.\n\nwait\n\nWait for simulation to finish while updating progress.\n\ncancel\n\nCancel a running simulation.\n\nProperties\n\n\n\n\n\nsimulation_id\n\nGet the simulation id associated with this task.\n\nsummary\n\nThe summary of the completed simulation.\n\ndone\n\nCheck if the task is completed."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/SimulationTask.html#import-detail","title":"SimulationTask > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/SimulationTask.html#property-detail","title":"SimulationTask > Property detail","text":"Property detail\n\n\n\nproperty SimulationTask.simulation_id: str\n\nGet the simulation id associated with this task.\n\n\n\nproperty SimulationTask.summary: ansys.additive.core.single_bead.SingleBeadSummary | ansys.additive.core.porosity.PorositySummary | ansys.additive.core.microstructure.MicrostructureSummary | ansys.additive.core.microstructure_3d.Microstructure3DSummary | ansys.additive.core.thermal_history.ThermalHistorySummary | ansys.additive.core.material_tuning.MaterialTuningSummary | ansys.additive.core.simulation_error.SimulationError | None\n\nThe summary of the completed simulation.\n\nNone if simulation is not completed.\n\n\n\nproperty SimulationTask.done: bool\n\nCheck if the task is completed."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task/SimulationTask.html#method-detail","title":"SimulationTask > Method detail","text":"Method detail\n\n\n\nSimulationTask.status() -> ansys.additive.core.progress_handler.Progress\n\nFetch status from the server to update progress and results.\n\nParameters\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, no progress updates are provided.\n\n\n\nSimulationTask.wait(*, progress_update_interval: int = 5, progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> None\n\nWait for simulation to finish while updating progress.\n\nParameters\n\nprogress_update_interval: int, default: 5\n\nA timeout value (in seconds) to give to the looped WaitOperation() calls to return an\nupdated message for a progress update.\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, no progress updates are provided.\n\n\n\nSimulationTask.cancel() -> None\n\nCancel a running simulation.\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#using-a-custom-material","title":"Using a custom material","text":"Using a custom material\n\nThis example shows how to use a custom material in PyAdditive simulations.\nFor background information and file formats, see\nMaterial Tuning Tool (Beta) to Create User Defined Materials\nin the Additive Manufacturing Beta Features documentation.\nTo prevent wasted time, before executing this example, carefully review\nthe steps described in this PyAdditive documentation.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#perform-required-import-and-connect","title":"Using a custom material > Perform required import and connect","text":"Perform required import and connect\n\nPerform the required import and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#download-custom-material","title":"Using a custom material > Download custom material","text":"Download custom material\n\nDownload an example of a custom material. Typically, you would have the\nfiles defining your custom material stored locally."},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#load-custom-material-files","title":"Using a custom material > Load custom material files","text":"Load custom material files\n\nUse the load_material() method on the additive object to\nload custom material defnition files. The method returns an AdditiveMaterial\nobject that you can use in simulations. The AdditiveMaterial object\nexists only in the current Python session and is not saved."},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#use-the-custom-material-in-a-simulation","title":"Using a custom material > Use the custom material in a simulation","text":"Use the custom material in a simulation\n\nOnce the custom material has been loaded, you can assign it to a simulation input\nobject."},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#add-a-custom-material-to-the-material-library","title":"Using a custom material > Add a custom material to the material library","text":"Add a custom material to the material library\n\nYou can add a custom material to the material library for use in future\nPython sessions. The add_material() method is similar to the\nload_material() method, except that it saves the\nmaterial to the server."},{"objectID":"Home","href":"examples/gallery_examples/03_using_a_custom_material.html#remove-the-custom-material-from-the-material-library","title":"Using a custom material > Remove the custom material from the material library","text":"Remove the custom material from the material library\n\nYou can remove a custom material from the material library using the\nremove_material() method. Ansys-supplied materials cannot be removed\nand will raise an error if you try to remove them.\n\nTotal running time of the script: (0 minutes 0.321 seconds)\n\n\n\nDownload Jupyter notebook: 03_using_a_custom_material.ipynb\n\nDownload Python source code: 03_using_a_custom_material.py\n\nDownload zipped: 03_using_a_custom_material.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/index.html#the-parametric_studypy-module","title":"The parametric_study.py module","text":"The parametric_study.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/index.html#summary","title":"The parametric_study.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nParametricStudy\n\nProvides data storage and utility methods for a parametric study.\n\nFunctions\n\n\n\n\n\nsave_on_return\n\nSave study file upon method return.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/index.html#description","title":"The parametric_study.py module > Description","text":"Description\n\nProvides data storage and utilities to perform a parametric study."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/index.html#module-detail","title":"The parametric_study.py module > Module detail","text":"Module detail\n\n\n\nparametric_study.save_on_return(func)\n\nSave study file upon method return.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/index.html#the-downloadspy-module","title":"The downloads.py module","text":"The downloads.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/index.html#summary","title":"The downloads.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMaterialTuningExampleInputFiles\n\nContainer for the example material tuning process inputs.\n\nCustomMaterialExampleFiles\n\nHolds the files associated with a custom material definition.\n\nFunctions\n\n\n\n\n\ndelete_downloads\n\nDelete all downloaded examples to free space or update the files.\n\ndecompress\n\nDecompress a ZIP file to the examples directory.\n\ndownload_10mm_cube\n\nDownload an STL file describing a 10-millimeter cube.\n\ndownload_small_wedge_slm_build_file\n\nDownload an SLM build file for a small wedge part.\n\ndownload_material_tuning_input\n\nDownload the input files for the material tuning example.\n\ndownload_custom_material\n\nDownload the files describing a custom material.\n\nConstants\n\n\n\n\n\nEXAMPLES_URI\n\nURI for the example data repository.\n\nPARTS_FOLDER\n\nFolder containing example parts.\n\nBUILD_FILES_FOLDER\n\nFolder containing example build files.\n\nMATERIAL_TUNING_FOLDER\n\nFolder containing example material tuning input files.\n\nCUSTOM_MATERIAL_FOLDER\n\nFolder containing example custom material data files.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/index.html#description","title":"The downloads.py module > Description","text":"Description\n\nProvides functions for downloading sample datasets from the PyAdditive repository."},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/index.html#module-detail","title":"The downloads.py module > Module detail","text":"Module detail\n\n\n\ndownloads.delete_downloads()\n\nDelete all downloaded examples to free space or update the files.\n\n\n\ndownloads.decompress(filename, subdir=None) -> str\n\nDecompress a ZIP file to the examples directory.\n\nParameters\n\nfilename\n\npython:str\n\nName of the file.\n\nsubdir\n\npython:str, python:None\n\nName of the subdirectory of the examples directory\nto extract the ZIP file contents to. The default is None.\n\nReturns\n\npython:str\n\nPath to the decompressed contents of the ZIP file.\n\n\n\ndownloads.download_10mm_cube()\n\nDownload an STL file describing a 10-millimeter cube.\n\n\n\ndownloads.download_small_wedge_slm_build_file()\n\nDownload an SLM build file for a small wedge part.\n\n\n\ndownloads.download_material_tuning_input() -> MaterialTuningExampleInputFiles\n\nDownload the input files for the material tuning example.\n\n\n\ndownloads.download_custom_material() -> CustomMaterialExampleFiles\n\nDownload the files describing a custom material.\n\n\n\ndownloads.EXAMPLES_URI = 'https://github.com/ansys/example-data/raw/master'\n\nURI for the example data repository.\n\n\n\ndownloads.PARTS_FOLDER = 'pyadditive/part-only'\n\nFolder containing example parts.\n\n\n\ndownloads.BUILD_FILES_FOLDER = 'pyadditive/buildfiles'\n\nFolder containing example build files.\n\n\n\ndownloads.MATERIAL_TUNING_FOLDER = 'pyadditive/material_tuning_input'\n\nFolder containing example material tuning input files.\n\n\n\ndownloads.CUSTOM_MATERIAL_FOLDER = 'pyadditive/custom_material_data'\n\nFolder containing example custom material data files.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/SimulationTaskManager.html#simulationtaskmanager","title":"SimulationTaskManager","text":"SimulationTaskManager\n\n\n\nclass ansys.additive.core.simulation_task_manager.SimulationTaskManager\n\nProvides a manager for simulation tasks."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/SimulationTaskManager.html#overview","title":"SimulationTaskManager > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_task\n\nAdd a task to this manager.\n\nstatus\n\nGet status of each operation stored in this manager.\n\nwait_all\n\nWait for all simulations to finish. A simple loop that waits for each task will wait for the\n\ncancel_all\n\nCancel all simulations belonging to this simulation task manager.\n\nsummaries\n\nGet a list of the summaries of completed simulations only.\n\nProperties\n\n\n\n\n\ntasks\n\nGet the list of tasks managed by this manager.\n\nsimulation_ids\n\nGet the list of the simulation ids managed by this manager.\n\ndone\n\nCheck if all tasks are done."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/SimulationTaskManager.html#import-detail","title":"SimulationTaskManager > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/SimulationTaskManager.html#property-detail","title":"SimulationTaskManager > Property detail","text":"Property detail\n\n\n\nproperty SimulationTaskManager.tasks: list[ansys.additive.core.simulation_task.SimulationTask]\n\nGet the list of tasks managed by this manager.\n\n\n\nproperty SimulationTaskManager.simulation_ids: list[str]\n\nGet the list of the simulation ids managed by this manager.\n\n\n\nproperty SimulationTaskManager.done: bool\n\nCheck if all tasks are done."},{"objectID":"Home","href":"api/ansys/additive/core/simulation_task_manager/SimulationTaskManager.html#method-detail","title":"SimulationTaskManager > Method detail","text":"Method detail\n\n\n\nSimulationTaskManager.add_task(task: ansys.additive.core.simulation_task.SimulationTask)\n\nAdd a task to this manager.\n\nParameters\n\ntask: SimulationTask\n\nThe simulation task holding the long-running operation and corresponding server.\n\n\n\nSimulationTaskManager.status(progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> list[tuple[str, ansys.additive.core.progress_handler.Progress]]\n\nGet status of each operation stored in this manager.\n\nParameters\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, no progress updates are provided.\n\nReturns\n\nList of tuples with each python:tuple containing the operation name and an instance of Progress\n\n\n\n\n\nSimulationTaskManager.wait_all(progress_handler: ansys.additive.core.progress_handler.IProgressHandler | None = None) -> None\n\nWait for all simulations to finish. A simple loop that waits for each task will wait for the\nsimulation that takes the longest. This works because wait returns immediately if operation is done.\n\nParameters\n\nprogress_handler: IProgressHandler, None, default: None\n\nHandler for progress updates. If None, no progress updates are provided.\n\n\n\nSimulationTaskManager.cancel_all() -> None\n\nCancel all simulations belonging to this simulation task manager.\n\n\n\nSimulationTaskManager.summaries()\n\nGet a list of the summaries of completed simulations only.\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#single-bead-analysis","title":"Single bead analysis","text":"Single bead analysis\n\nThis example shows how to use PyAdditive to determine\nmelt pool characteristics for a given material and machine\nparameter combinations.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#perform-required-imports-and-connect","title":"Single bead analysis > Perform required imports and connect","text":"Perform required imports and connect\n\nPerform the required imports and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#get-server-connection-information","title":"Single bead analysis > Get server connection information","text":"Get server connection information\n\nGet server connection information using the about() method."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#select-material","title":"Single bead analysis > Select material","text":"Select material\n\nSelect a material. You can use the materials_list() method to\nobtain a list of available materials.\n\nYou can obtain the parameters for a single material by passing a name\nfrom the materials list to the material() method."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#specify-machine-parameters","title":"Single bead analysis > Specify machine parameters","text":"Specify machine parameters\n\nSpecify machine parameters by first creating an AdditiveMachine object\nand then assigning the desired values. All values are in SI units (m, kg, s, K)\nunless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#set-laser-power-and-scan-speed","title":"Single bead analysis > Set laser power and scan speed","text":"Set laser power and scan speed\n\nSet the laser power and scan speed."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#specify-inputs-for-single-bead-simulation","title":"Single bead analysis > Specify inputs for single bead simulation","text":"Specify inputs for single bead simulation\n\nCreate a SingleBeadInput object containing the desired simulation parameters."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#run-simulation","title":"Single bead analysis > Run simulation","text":"Run simulation\n\nUse the simulate() method of the additive object to run the simulation.\nThe returned object is either a SingleBeadSummary object containing the input\nand a MeltPool or a SimulationError object."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#plot-melt-pool-statistics","title":"Single bead analysis > Plot melt pool statistics","text":"Plot melt pool statistics\n\nObtain a Pandas DataFrame instance containing the melt pool\nstatistics by using the data_frame() method of the melt_pool\nattribute of the summary object. The column names for the DataFrame\ninstance are described in the documentation for data_frame(). Use the\nplot() method to plot the melt pool dimensions as a function\nof bead length.\n\n"},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#list-melt-pool-statistics","title":"Single bead analysis > List melt pool statistics","text":"List melt pool statistics\n\nYou can show a table of the melt pool statistics by typing the name of the\ndata frame object and pressing enter. For brevity, the following code\nuses the head() method so that only the first few rows are shown.\nNote, if running this example as a Python script, no output is shown."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#save-melt-pool-statistics","title":"Single bead analysis > Save melt pool statistics","text":"Save melt pool statistics\n\nSave the melt pool statistics to a CSV file using the\nto_csv() method."},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#plot-thermal-history","title":"Single bead analysis > Plot thermal history","text":"Plot thermal history\n\nPlot the thermal history of the single bead simulation using the class\npyvista.Plotter. The plot shows the temperature\ndistribution in the melt pool at each time step.\n\n"},{"objectID":"Home","href":"examples/gallery_examples/00_additive_single_bead.html#print-the-simulation-logs","title":"Single bead analysis > Print the simulation logs","text":"Print the simulation logs\n\nTo print the simulation logs, use the logs() property.\n\nTotal running time of the script: (3 minutes 8.902 seconds)\n\n\n\nDownload Jupyter notebook: 00_additive_single_bead.ipynb\n\nDownload Python source code: 00_additive_single_bead.py\n\nDownload zipped: 00_additive_single_bead.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationType.html#simulationtype","title":"SimulationType","text":"SimulationType\n\n\n\nclass ansys.additive.core.simulation.SimulationType\n\nBases: str, enum.Enum\n\nProvides simulation types."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationType.html#overview","title":"SimulationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSINGLE_BEAD\n\nSingle bead simulation.\n\nPOROSITY\n\nPorosity simulation.\n\nMICROSTRUCTURE\n\nMicrostructure simulation."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationType.html#import-detail","title":"SimulationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationType.html#attribute-detail","title":"SimulationType > Attribute detail","text":"Attribute detail\n\n\n\nSimulationType.SINGLE_BEAD = 'SingleBead'\n\nSingle bead simulation.\n\n\n\nSimulationType.POROSITY = 'Porosity'\n\nPorosity simulation.\n\n\n\nSimulationType.MICROSTRUCTURE = 'Microstructure'\n\nMicrostructure simulation.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/MaterialTuningExampleInputFiles.html#materialtuningexampleinputfiles","title":"MaterialTuningExampleInputFiles","text":"MaterialTuningExampleInputFiles\n\n\n\nclass ansys.additive.core.examples.downloads.MaterialTuningExampleInputFiles(experiment_data_file: str, material_configuration_file: str, thermal_properties_lookup_file: str, characteristic_width_lookup_file: str)\n\nContainer for the example material tuning process inputs.\n\nParameters\n\nexperiment_data_file\n\npython:str\n\nPath to the experiment data file (CSV).\n\nmaterial_configuration_file\n\npython:str\n\nPath to the material configuration file (JSON).\n\nthermal_properties_lookup_file\n\npython:str\n\nPath to the thermal properties lookup file (CSV).\n\ncharacteristic_width_lookup_file\n\npython:str\n\nPath to the characteristic width lookup file (CSV)."},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/MaterialTuningExampleInputFiles.html#overview","title":"MaterialTuningExampleInputFiles > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nexperiment_data_file\n\nPath to the experiment data file (CSV).)\n\nmaterial_configuration_file\n\nPath to the material configuration file (JSON).\n\nthermal_properties_lookup_file\n\nPath to the thermal properties lookup file (CSV).\n\ncharacteristic_width_lookup_file\n\nPath to the characteristic width lookup file (CSV)."},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/MaterialTuningExampleInputFiles.html#import-detail","title":"MaterialTuningExampleInputFiles > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/MaterialTuningExampleInputFiles.html#property-detail","title":"MaterialTuningExampleInputFiles > Property detail","text":"Property detail\n\n\n\nproperty MaterialTuningExampleInputFiles.experiment_data_file\n\nPath to the experiment data file (CSV).)\n\n\n\nproperty MaterialTuningExampleInputFiles.material_configuration_file\n\nPath to the material configuration file (JSON).\n\n\n\nproperty MaterialTuningExampleInputFiles.thermal_properties_lookup_file\n\nPath to the thermal properties lookup file (CSV).\n\n\n\nproperty MaterialTuningExampleInputFiles.characteristic_width_lookup_file\n\nPath to the characteristic width lookup file (CSV).\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/04_custom_material_tuning.html#custom-material-tuning","title":"Custom material tuning","text":"Custom material tuning\n\nThis example shows how to tune a custom material for use with PyAdditive.\nFor background information and file formats, see\nMaterial Tuning Tool (Beta) to Create User Defined Materials\nin the Additive Manufacturing Beta Features documentation.\nTo prevent wasted time, before executing this example, carefully review\nthe steps described in this PyAdditive documentation.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"examples/gallery_examples/04_custom_material_tuning.html#perform-required-import-and-connect","title":"Custom material tuning > Perform required import and connect","text":"Perform required import and connect\n\nPerform the required import and connect to the Additive service."},{"objectID":"Home","href":"examples/gallery_examples/04_custom_material_tuning.html#specify-tuning-inputs","title":"Custom material tuning > Specify tuning inputs","text":"Specify tuning inputs\n\nThe MaterialTuningInput object contains the paths to the files needed to\ntune a material. The experiment_data_file file is a CSV file containing the\nresults of single bead experiments. The material_configuration_file file is a JSON\nfile containing the material parameters. The thermal_properties_lookup_file\nfile is a CSV file containing the temperature-dependent properties of the material.\nThe characteristic_width_lookup_file file is an optional CSV file containing\nthe melt pool characteristic width at various laser powers and scan speeds.\nIf the characteristic width lookup file is not specified, it is generated\nduring the tuning process."},{"objectID":"Home","href":"examples/gallery_examples/04_custom_material_tuning.html#perform-material-tuning","title":"Custom material tuning > Perform material tuning","text":"Perform material tuning\n\nUse the tune_material() method to perform material tuning."},{"objectID":"Home","href":"examples/gallery_examples/04_custom_material_tuning.html#review-results","title":"Custom material tuning > Review results","text":"Review results\n\nThe MaterialTuningSummary object contains the results of the material\ntuning process. These results are used in follow-on steps to calculate the\nmaterial parameters needed by PyAdditive. For more information, see the\nAdditive documentation referred to earlier.\n\nTotal running time of the script: (2 minutes 3.111 seconds)\n\n\n\nDownload Jupyter notebook: 04_custom_material_tuning.ipynb\n\nDownload Python source code: 04_custom_material_tuning.py\n\nDownload zipped: 04_custom_material_tuning.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/exceptions/index.html#the-exceptionspy-module","title":"The exceptions.py module","text":"The exceptions.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/exceptions/index.html#summary","title":"The exceptions.py module > Summary","text":"Summary\n\nExceptions\n\n\n\n\n\nBetaFeatureNotEnabledError\n\nRaised when a beta feature is not enabled.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/exceptions/index.html#description","title":"The exceptions.py module > Description","text":"Description\n\nProvides custom exceptions for the additive client.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/index.html#the-thermal_historypy-module","title":"The thermal_history.py module","text":"The thermal_history.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/index.html#summary","title":"The thermal_history.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nRange\n\nDefines a range of values.\n\nCoaxialAverageSensorInputs\n\nProvides descriptions for coaxial average sensors.\n\nThermalHistoryInput\n\nProvides input parameters for microstructure simulation.\n\nThermalHistorySummary\n\nSummary of a thermal history simulation.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/index.html#description","title":"The thermal_history.py module > Description","text":"Description\n\nProvides input and result summary containers for thermal history simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/index.html#the-porositypy-module","title":"The porosity.py module","text":"The porosity.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/index.html#summary","title":"The porosity.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPorosityInput\n\nProvides input parameters for porosity simulation.\n\nPorositySummary\n\nProvides a summary of a porosity simulation.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/porosity/index.html#description","title":"The porosity.py module > Description","text":"Description\n\nProvides input and result summary containers for porosity simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/index.html#the-simulationpy-module","title":"The simulation.py module","text":"The simulation.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/index.html#summary","title":"The simulation.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSimulationInputBase\n\nProvides a base class for simulation inputs.\n\nSimulationSummaryBase\n\nProvides a base class for simulation summaries.\n\nEnums\n\n\n\n\n\nSimulationType\n\nProvides simulation types.\n\nSimulationStatus\n\nProvides simulation status values.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/index.html#description","title":"The simulation.py module > Description","text":"Description\n\nProvides common definitions and classes for simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/index.html#the-materialpy-module","title":"The material.py module","text":"The material.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/index.html#summary","title":"The material.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCharacteristicWidthDataPoint\n\nProvides the container for a characteristic width data point.\n\nThermalPropertiesDataPoint\n\nProvides the container for temperature-dependent properties.\n\nAdditiveMaterial\n\nProvides the container for material properties used during additive manufacturing simulations.\n\nConstants\n\n\n\n\n\nRESERVED_MATERIAL_NAMES\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/index.html#description","title":"The material.py module > Description","text":"Description\n\nProvides a container for material parameters."},{"objectID":"Home","href":"api/ansys/additive/core/material/index.html#module-detail","title":"The material.py module > Module detail","text":"Module detail\n\n\n\nmaterial.RESERVED_MATERIAL_NAMES = ['17-4PH', '316L', 'Al357', 'AlSi10Mg', 'CoCr', 'IN625', 'IN718', 'Ti64']\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationStatus.html#simulationstatus","title":"SimulationStatus","text":"SimulationStatus\n\n\n\nclass ansys.additive.core.simulation.SimulationStatus\n\nBases: str, enum.Enum\n\nProvides simulation status values."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationStatus.html#overview","title":"SimulationStatus > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCOMPLETED\n\nSimulation completed successfully.\n\nWARNING\n\nSimulation completed with warnings.\n\nERROR\n\nSimulation errored before completion.\n\nCANCELLED\n\nSimulation was cancelled.\n\nRUNNING\n\nSimulation is running.\n\nPENDING\n\nSimulation is queued and waiting to run.\n\nNEW\n\nSimulation is created but not yet queued to run.\n\nSKIP\n\nDo not run this simulation, only applies to parametric studies."},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationStatus.html#import-detail","title":"SimulationStatus > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/simulation/SimulationStatus.html#attribute-detail","title":"SimulationStatus > Attribute detail","text":"Attribute detail\n\n\n\nSimulationStatus.COMPLETED = 'Completed'\n\nSimulation completed successfully.\n\n\n\nSimulationStatus.WARNING = 'Warning'\n\nSimulation completed with warnings.\n\n\n\nSimulationStatus.ERROR = 'Error'\n\nSimulation errored before completion.\n\n\n\nSimulationStatus.CANCELLED = 'Cancelled'\n\nSimulation was cancelled.\n\n\n\nSimulationStatus.RUNNING = 'Running'\n\nSimulation is running.\n\n\n\nSimulationStatus.PENDING = 'Pending'\n\nSimulation is queued and waiting to run.\n\n\n\nSimulationStatus.NEW = 'New'\n\nSimulation is created but not yet queued to run.\n\n\n\nSimulationStatus.SKIP = 'Skip'\n\nDo not run this simulation, only applies to parametric studies.\n\n\n\n"},{"objectID":"Home","href":"index.html#pyadditive-documentation--0210b5","title":"PyAdditive documentation  0.21.0b5","text":"PyAdditive documentation  0.21.0b5\n\nPyAdditive provides a Python API to interact with the Ansys Additive server.\nThe Additive server is included in the Additive option of the Structures package\nof the Ansys release.\n\nGetting started \n\nStep-by-step guidelines on how to set up your environment to work with\nPyAdditive.\n\nref_getting_started\n\nAPI reference \n\nA detailed guide describing the PyAdditive API. This guide documents\nall the methods and properties for each interface, class, and\nenumerations of each PyAdditive module.\n\napi/index\n\nGallery of examples \n\nLearn how to use PyAdditive for creating custom applications and\nautomating your existing Additive workflows. This guide contains a\ngallery of examples showing how to integrate PyAdditive with other\npopular tools in the Python ecosystem.\n\nexamples/gallery_examples/index\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/index.html#the-server_connectionpy-module","title":"The server_connection.py module","text":"The server_connection.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/index.html#summary","title":"The server_connection.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nServerConnectionStatus\n\nProvides status information about a server.\n\nServerConnection\n\nProvides connection to Additive server.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/server_connection/index.html#description","title":"The server_connection.py module > Description","text":"Description\n\nProvides definitions and untilities for connecting to the Additive server.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/index.html#the-geometry_filepy-module","title":"The geometry_file.py module","text":"The geometry_file.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/index.html#summary","title":"The geometry_file.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBuildFile\n\nProvides the build file description.\n\nStlFile\n\nContainer for the STL file definition.\n\nEnums\n\n\n\n\n\nMachineType\n\nMachine type values.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/index.html#description","title":"The geometry_file.py module > Description","text":"Description\n\nProvides a container for part geometry files.\n\n\n\n"},{"objectID":"Home","href":"examples/gallery_examples/index.html#examples","title":"Examples","text":"Examples\n\nEnd-to-end examples show how you can use PyAdditve. You can download\nthese examples as Python files or Jupyter notebooks and run them locally.\n\n\n\nsphx_glr_examples_gallery_examples_00_additive_single_bead.py\n\nsphx_glr_examples_gallery_examples_01_additive_porosity.py\n\nsphx_glr_examples_gallery_examples_02_additive_2d_microstructure.py\n\nsphx_glr_examples_gallery_examples_03_using_a_custom_material.py\n\nsphx_glr_examples_gallery_examples_04_custom_material_tuning.py\n\nsphx_glr_examples_gallery_examples_05_advanced_parametric_study.py\n\nsphx_glr_examples_gallery_examples_06_additive_3d_microstructure.py\n\nsphx_glr_examples_gallery_examples_07_additive_thermal_history.py\n\n\n\nGallery generated by Sphinx-Gallery\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureInput.html#microstructureinput","title":"MicrostructureInput","text":"MicrostructureInput\n\n\n\nclass ansys.additive.core.microstructure.MicrostructureInput(*, sample_min_x: float = DEFAULT_POSITION_COORDINATE, sample_min_y: float = DEFAULT_POSITION_COORDINATE, sample_min_z: float = DEFAULT_POSITION_COORDINATE, sample_size_x: float = DEFAULT_SAMPLE_SIZE, sample_size_y: float = DEFAULT_SAMPLE_SIZE, sample_size_z: float = DEFAULT_SAMPLE_SIZE, sensor_dimension: float = DEFAULT_SENSOR_DIMENSION, use_provided_thermal_parameters: bool = DEFAULT_USE_PROVIDED_THERMAL_PARAMETERS, cooling_rate: float = DEFAULT_COOLING_RATE, thermal_gradient: float = DEFAULT_THERMAL_GRADIENT, melt_pool_width: float = DEFAULT_MELT_POOL_WIDTH, melt_pool_depth: float = DEFAULT_MELT_POOL_DEPTH, random_seed: int = DEFAULT_RANDOM_SEED, machine: ansys.additive.core.machine.AdditiveMachine = None, material: ansys.additive.core.material.AdditiveMaterial = None)\n\nBases: ansys.additive.core.simulation.SimulationInputBase\n\nProvides input parameters for microstructure simulation.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureInput.html#overview","title":"MicrostructureInput > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsample_min_x\n\nMinimum x coordinate of the geometry sample (m).\n\nsample_min_y\n\nMinimum y coordinate of the geometry sample (m).\n\nsample_min_z\n\nMinimum z coordinate of the geometry sample (m).\n\nuse_provided_thermal_parameters\n\nFlag indicating if the cooling_rate, thermal_gradient, melt_pool_depth, and melt_pool_width parameters have been provided by the user.\n\ncooling_rate\n\nMaterial cooling rate (K/s).\n\nthermal_gradient\n\nMaterial thermal gradient (K/m).\n\nmelt_pool_width\n\nMelt pool width (m).\n\nmelt_pool_depth\n\nMelt pool depth (m).\n\nmachine\n\nMachine-related parameters.\n\nmaterial\n\nMaterial used during simulation.\n\nsample_size_x\n\nSize of the geometry sample in the x direction (m).\n\nsample_size_y\n\nSize of the geometry sample in the y direction (m).\n\nsample_size_z\n\nSize of the geometry sample in the z direction (m).\n\nsensor_dimension\n\nDimension of the sensor (m).\n\nrandom_seed\n\nRandom seed for the simulation.\n\nAttributes\n\n\n\n\n\nDEFAULT_POSITION_COORDINATE\n\nDefault X, Y, Z, position coordinate (m).\n\nMIN_POSITION_COORDINATE\n\nMinimum X, Y, Z, position coordinate (m).\n\nMAX_POSITION_COORDINATE\n\nMaximum X, Y, Z, position coordinate (m).\n\nDEFAULT_SAMPLE_SIZE\n\nDefault sample size in each dimension (m).\n\nMIN_SAMPLE_SIZE\n\nMinimum sample size in each dimension (m).\n\nMAX_SAMPLE_SIZE\n\nMaximum sample size in each dimension (m).\n\nDEFAULT_SENSOR_DIMENSION\n\nDefault sensor dimension (m).\n\nMIN_SENSOR_DIMENSION\n\nMinimum sensor dimension (m).\n\nMAX_SENSOR_DIMENSION\n\nMaximum sensor dimension (m).\n\nMIN_XY_SIZE_CUSHION\n\nMinimum cushion between sensor dimension and sample size in the X and Y dimensions (m).\n\nMIN_Z_SIZE_CUSHION\n\nMinimum cushion between sensor dimension and sample size in the Z dimension (m).\n\nDEFAULT_USE_PROVIDED_THERMAL_PARAMETERS\n\nDefault flag value indicating whether to use user-provided thermal parameters.\n\nDEFAULT_COOLING_RATE\n\nDefault cooling rate (K/s).\n\nMIN_COOLING_RATE\n\nMinimum cooling rate (K/s).\n\nMAX_COOLING_RATE\n\nMaximum cooling rate (K/s).\n\nDEFAULT_THERMAL_GRADIENT\n\nDefault thermal gradient (K/m).\n\nMIN_THERMAL_GRADIENT\n\nMinimum thermal gradient (K/m).\n\nMAX_THERMAL_GRADIENT\n\nMaximum thermal gradient (K/m).\n\nDEFAULT_MELT_POOL_WIDTH\n\nDefault melt pool width (m).\n\nMIN_MELT_POOL_WIDTH\n\nMinimum melt pool width (m).\n\nMAX_MELT_POOL_WIDTH\n\nMaximum melt pool width (m).\n\nDEFAULT_MELT_POOL_DEPTH\n\nDefault melt pool depth (m).\n\nMIN_MELT_POOL_DEPTH\n\nMinimum melt pool depth (m).\n\nMAX_MELT_POOL_DEPTH\n\nMaximum melt pool depth (m).\n\nDEFAULT_RANDOM_SEED\n\nThe default random seed, which indicates that a random seed was not provided.\n\nMIN_RANDOM_SEED\n\nMinimum random seed.\n\nMAX_RANDOM_SEED\n\nMaximum random seed.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureInput.html#import-detail","title":"MicrostructureInput > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureInput.html#property-detail","title":"MicrostructureInput > Property detail","text":"Property detail\n\n\n\nproperty MicrostructureInput.sample_min_x: float\n\nMinimum x coordinate of the geometry sample (m).\n\nValid values are from the MIN_POSITION_COORDINATE value to\nthe MAX_POSITION_COORDINATE value.\n\n\n\nproperty MicrostructureInput.sample_min_y: float\n\nMinimum y coordinate of the geometry sample (m).\n\nValid values are from the MIN_POSITION_COORDINATE value to the\nMAX_POSITION_COORDINATE value.\n\n\n\nproperty MicrostructureInput.sample_min_z: float\n\nMinimum z coordinate of the geometry sample (m).\n\nValid values are from the MIN_POSITION_COORDINATE value to the\nMAX_POSITION_COORDINATE value.\n\n\n\nproperty MicrostructureInput.use_provided_thermal_parameters: bool\n\nFlag indicating if the cooling_rate, thermal_gradient, melt_pool_depth, and melt_pool_width parameters have been provided by the user.\n\nIf the value is False, these values\nwill be calculated. Default is False.\n\n\n\nproperty MicrostructureInput.cooling_rate: float\n\nMaterial cooling rate (K/s).\n\nValid values are from the MIN_COOLING_RATE value to the\nMAX_COOLING_RATE value.\n\n\n\nproperty MicrostructureInput.thermal_gradient: float\n\nMaterial thermal gradient (K/m).\n\nValid values are from the MIN_THERMAL_GRADIENT value to the\nMAX_THERMAL_GRADIENT value.\n\n\n\nproperty MicrostructureInput.melt_pool_width: float\n\nMelt pool width (m).\n\nThis is the width of the melt pool measured at the top of the powder layer.\n\nValid values are from the MIN_MELT_POOL_WIDTH value to the\nMAX_MELT_POOL_WIDTH value.\n\n\n\nproperty MicrostructureInput.melt_pool_depth: float\n\nMelt pool depth (m).\n\nThis is the depth of the melt pool as measured from the top of the powder layer.\n\nValid values are from the MIN_MELT_POOL_DEPTH value to the\nMAX_MELT_POOL_DEPTH value.\n\n\n\nproperty MicrostructureInput.machine\n\nMachine-related parameters.\n\n\n\nproperty MicrostructureInput.material\n\nMaterial used during simulation.\n\n\n\nproperty MicrostructureInput.sample_size_x: float\n\nSize of the geometry sample in the x direction (m).\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\nWhen setting the```sample_size_x`` parameter, the value must be greater than the\nsensor_dimension value plus the MIN_XY_SIZE_CUSHION value.\n\n\n\nproperty MicrostructureInput.sample_size_y: float\n\nSize of the geometry sample in the y direction (m).\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\nWhen setting the sample_size_y parameter, the value must be greater than the\nsensor_dimension value plus the MIN_XY_SIZE_CUSHION value.\n\n\n\nproperty MicrostructureInput.sample_size_z: float\n\nSize of the geometry sample in the z direction (m).\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\nWhen setting the sample_size_y parameter, the value must be greater than the\nsensor_dimension value plus the MIN_XY_SIZE_CUSHION value.\n\n\n\nproperty MicrostructureInput.sensor_dimension: float\n\nDimension of the sensor (m).\n\nValid values are from the MIN_SENSOR_DIMENSION value to the\nMAX_SENSOR_DIMENSION value.\n\n\n\nproperty MicrostructureInput.random_seed: int\n\nRandom seed for the simulation.\n\nValid values are from the MIN_RANDOM_SEED value to the\nMAX_RANDOM_SEED value."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureInput.html#attribute-detail","title":"MicrostructureInput > Attribute detail","text":"Attribute detail\n\n\n\nMicrostructureInput.DEFAULT_POSITION_COORDINATE = 0\n\nDefault X, Y, Z, position coordinate (m).\n\n\n\nMicrostructureInput.MIN_POSITION_COORDINATE = 0\n\nMinimum X, Y, Z, position coordinate (m).\n\n\n\nMicrostructureInput.MAX_POSITION_COORDINATE = 10\n\nMaximum X, Y, Z, position coordinate (m).\n\n\n\nMicrostructureInput.DEFAULT_SAMPLE_SIZE = 0.0015\n\nDefault sample size in each dimension (m).\n\n\n\nMicrostructureInput.MIN_SAMPLE_SIZE = 0.001\n\nMinimum sample size in each dimension (m).\n\n\n\nMicrostructureInput.MAX_SAMPLE_SIZE = 0.01\n\nMaximum sample size in each dimension (m).\n\n\n\nMicrostructureInput.DEFAULT_SENSOR_DIMENSION = 0.0005\n\nDefault sensor dimension (m).\n\n\n\nMicrostructureInput.MIN_SENSOR_DIMENSION = 0.0001\n\nMinimum sensor dimension (m).\n\n\n\nMicrostructureInput.MAX_SENSOR_DIMENSION = 0.001\n\nMaximum sensor dimension (m).\n\n\n\nMicrostructureInput.MIN_XY_SIZE_CUSHION = 0.0005\n\nMinimum cushion between sensor dimension and sample size in the X and Y dimensions (m).\n\n\n\nMicrostructureInput.MIN_Z_SIZE_CUSHION = 0.001\n\nMinimum cushion between sensor dimension and sample size in the Z dimension (m).\n\n\n\nMicrostructureInput.DEFAULT_USE_PROVIDED_THERMAL_PARAMETERS = False\n\nDefault flag value indicating whether to use user-provided thermal parameters.\n\n\n\nMicrostructureInput.DEFAULT_COOLING_RATE = 1000000.0\n\nDefault cooling rate (K/s).\n\n\n\nMicrostructureInput.MIN_COOLING_RATE = 100000.0\n\nMinimum cooling rate (K/s).\n\n\n\nMicrostructureInput.MAX_COOLING_RATE = 10000000.0\n\nMaximum cooling rate (K/s).\n\n\n\nMicrostructureInput.DEFAULT_THERMAL_GRADIENT = 10000000.0\n\nDefault thermal gradient (K/m).\n\n\n\nMicrostructureInput.MIN_THERMAL_GRADIENT = 100000.0\n\nMinimum thermal gradient (K/m).\n\n\n\nMicrostructureInput.MAX_THERMAL_GRADIENT = 100000000.0\n\nMaximum thermal gradient (K/m).\n\n\n\nMicrostructureInput.DEFAULT_MELT_POOL_WIDTH = 0.00015\n\nDefault melt pool width (m).\n\n\n\nMicrostructureInput.MIN_MELT_POOL_WIDTH = 7.5e-05\n\nMinimum melt pool width (m).\n\n\n\nMicrostructureInput.MAX_MELT_POOL_WIDTH = 0.0008\n\nMaximum melt pool width (m).\n\n\n\nMicrostructureInput.DEFAULT_MELT_POOL_DEPTH = 0.0001\n\nDefault melt pool depth (m).\n\n\n\nMicrostructureInput.MIN_MELT_POOL_DEPTH = 1.5e-05\n\nMinimum melt pool depth (m).\n\n\n\nMicrostructureInput.MAX_MELT_POOL_DEPTH = 0.0008\n\nMaximum melt pool depth (m).\n\n\n\nMicrostructureInput.DEFAULT_RANDOM_SEED = 0\n\nThe default random seed, which indicates that a random seed was not provided.\n\n\n\nMicrostructureInput.MIN_RANDOM_SEED = 1\n\nMinimum random seed.\n\n\n\nMicrostructureInput.MAX_RANDOM_SEED = 4294967295\n\nMaximum random seed."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureInput.html#method-detail","title":"MicrostructureInput > Method detail","text":"Method detail\n\n\n\nMicrostructureInput.__repr__()\n\n\n\n\n\nMicrostructureInput.__eq__(__o: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"getting-started/index.html#getting-started","title":"Getting started","text":"Getting started\n\nPyAdditive is a Python client library for the Ansys Additive server. The Ansys\nAdditive server is distributed with the Additive option of the Structures package\nin the Ansys unified installation.\n\nThe simulations described in this documentation require an Additive Suite license. To obtain a license,\ncontact your Ansys sales representative or contact Ansys."},{"objectID":"Home","href":"getting-started/index.html#compatibility","title":"Getting started > Compatibility","text":"Compatibility\n\nTo use all the features of PyAdditive, you must have a compatible version of Ansys installed.\nThe following table lists the compatibility between PyAdditive and Ansys releases.\n\n\n\n\n\nPyAdditive Version\n\nAnsys Release Version\n\n0.20.x\n\n2025 R2\n\n0.19.x\n\n2025 R1\n\n0.18.x\n\n2024 R2\n\n0.17.x\n\n2024 R1"},{"objectID":"Home","href":"getting-started/index.html#starting-a-session","title":"Getting started > Starting a session","text":"Starting a session\n\nThere are multiple ways to start a session with the PyAdditive client.\n\n"},{"objectID":"Home","href":"getting-started/index.html#starting-a-local-session","title":"Getting started > Starting a local session","text":"Starting a local session\n\nInstantiating an Additive object starts the local installation of the Additive server."},{"objectID":"Home","href":"getting-started/index.html#starting-a-remote-session","title":"Getting started > Starting a remote session","text":"Starting a remote session\n\nYou can start a remote session by specifying the host name and port of the server."},{"objectID":"Home","href":"getting-started/index.html#alternative-startup-methods","title":"Getting started > Alternative startup methods","text":"Alternative startup methods\n\nFor additional session startup methods, see the documentation for the\nAdditive class."},{"objectID":"Home","href":"getting-started/index.html#run-simulations","title":"Getting started > Run simulations","text":"Run simulations\n\nFor examples of the types of simulations possible with PyAdditive, see\nExamples."},{"objectID":"Home","href":"getting-started/index.html#user-installation","title":"Getting started > User installation","text":"User installation\n\nThere are multiple sources for installing the latest stable version of\nPyAdditive. These include pip and GitHub.\n\nPublic PyPI\n\n\n\nAnsys PyPI\n\n\n\nGitHub\n\n\n\n"},{"objectID":"Home","href":"getting-started/index.html#developer-installation","title":"Getting started > Developer installation","text":"Developer installation\n\nDeveloper installation is specifically intended for project maintainers.\nThis specialized installation is tailored to equip developers with the essential\ntools and resources required for effective contribution to the project’s\ndevelopment and maintenance. The developer installation assumes a certain level\nof technical expertise and familiarity with the project’s codebase, rendering it\nmost suitable for individuals actively engaged in its continuous development and\nmaintenance.\n\nStart by cloning the repository:\n\nMove inside the project and create a new Python environment:\n\nWindows\n\nCMD\n\n\n\nPowerShell\n\n\n\nLinux/UNIX\n\n\n\nActivate previous environment:\n\nWindows\n\nCMD\n\n\n\nPowerShell\n\n\n\nLinux/UNIX\n\n\n\nInstall the required build system tools:\n\nVerify your development installation:\n\nInstall the project in editable mode. This means that any changes you make to\nthe package’s source code immediately reflect in your project without requiring you\nto reinstall it.\n\nWhen finished, you can exit the virtual environment:"},{"objectID":"Home","href":"getting-started/index.html#install-in-offline-mode","title":"Getting started > Install in offline mode","text":"Install in offline mode\n\nIf you lack an internet connection on your installation machine, you should install\nPyAdditive by downloading the wheelhouse archive from the\nReleases page for your\ncorresponding machine architecture.\n\nEach wheelhouse archive contains all the Python wheels necessary to install PyAdditive from scratch on Windows,\nLinux, and MacOS. You can unzip and install the wheelhouse archive on an isolated\nsystem with a fresh Python installation or in a virtual environment.\n\nFor example, on Linux with Python 3.12, unzip then install the wheelhouse archive with these commands:\n\nIf you’re on Windows, unzip the wheelhouse archive to a wheelhouse directory and\nthen install using the preceding pip command.\n\nConsider using a virtual environment for the installation."},{"objectID":"Home","href":"getting-started/index.html#testing","title":"Getting started > Testing","text":"Testing\n\nThis project takes advantage of tox. This tool automates common\ndevelopment tasks (similar to Makefile), but it is oriented towards Python\ndevelopment."},{"objectID":"Home","href":"getting-started/index.html#using-tox","title":"Getting started > Using tox","text":"Using tox\n\nWhile Makefile has rules, tox has environments. In fact, tox creates its\nown virtual environment so that anything being tested is isolated from the project to\nguarantee the project’s integrity.\n\nThe following commands are provided:\n\ntox -e style: Checks for coding style quality.\n\ntox -e py: Checks for and runs unit tests.\n\ntox -e py-coverage: Checks for and runs unit tests, generating code coverage reports.\n\ntox -e doc: Checks for building the documentation successfully."},{"objectID":"Home","href":"getting-started/index.html#raw-testing","title":"Getting started > Raw testing","text":"Raw testing\n\nIf required, from the command line, you can call style commands like ruff\nand call unit testing commands like pytest. However,\nthis does not guarantee that your project is being tested in an isolated\nenvironment, which is the reason why tools like tox exist.\n\nTo run unit tests without using tox, first install the tests dependencies.\n\nThen, run this command from the root folder of the project:"},{"objectID":"Home","href":"getting-started/index.html#debugging-with-visual-studio-code","title":"Getting started > Debugging with Visual Studio Code","text":"Debugging with Visual Studio Code\n\nSupport for Python debugging is built into Visual Studio Code. However,\nto stop on break points in unit tests, you must\ncomment out the addopts line in pyproject.toml. The coverage flags\nfor pytest prevent the debugger from stopping at breakpoints. Restore\nthe addopts line when you are finished debugging."},{"objectID":"Home","href":"getting-started/index.html#system-testing-on-localhost","title":"Getting started > System testing on localhost","text":"System testing on localhost\n\nSystem testing can be done on localhost using the startup method\ndescribed in ref_starting_a_local_session within a Python script\nor Jupyter notebook. The examples folder of the PyAdditive\nrepository contains script files that can be used for testing or\nconverted to Jupyter notebooks using\nJupytext.\n\nTo test with a notebook, you need to install and run\nJupyterLab:\n\nThe URL for opening JupyterLab in your browser is http://localhost:8888/lab. Note that the port number may\nbe different, but the port number is listed in the JupyterLab startup messages."},{"objectID":"Home","href":"getting-started/index.html#adhere-to-code-style","title":"Getting started > Adhere to code style","text":"Adhere to code style\n\nPyAdditive follows the PEP8 standard as outlined in\nPEP 8 in\nthe PyAnsys Developer’s Guide and implements style checking using\npre-commit.\n\nTo ensure your code meets minimum code styling standards, run these commands:\n\nYou can also install this as a pre-commit hook by running this command:"},{"objectID":"Home","href":"getting-started/index.html#documentation","title":"Getting started > Documentation","text":"Documentation\n\nFor building documentation, you can run the usual rules provided in the\nSphinx Makefile, such as:\n\nHowever, the recommended way of checking documentation integrity is to use tox:"},{"objectID":"Home","href":"getting-started/index.html#distributing","title":"Getting started > Distributing","text":"Distributing\n\nIf you would like to create either source or wheel files, start by installing\nthe building requirements and then executing the build module:"},{"objectID":"Home","href":"getting-started/index.html#releasing","title":"Getting started > Releasing","text":"Releasing\n\nThe Additive server is only released with the Ansys unified installation. In between Ansys releases, updates\nto PyAdditive are released as beta versions with version numbers X.Y.0bZ,\nwhere X is the major release, Y is the minor release, and Z is the beta release number. Using beta\nreleases prevents users of pypi.org from inadvertently getting updates that won’t work with the released version of\nthe server. When a new version of Ansys is released, PyAdditive is released with a version number of X.Y.0.\n\nTo create a release of PyAdditive, follow the Releasing and publishing\ninstructions in the PyAnsys Developer’s guide.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/StlFile.html#stlfile","title":"StlFile","text":"StlFile\n\n\n\nclass ansys.additive.core.geometry_file.StlFile(path: str)\n\nContainer for the STL file definition."},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/StlFile.html#overview","title":"StlFile > Overview","text":"Overview\n\nProperties\n\n\n\n\n\npath\n\nPath of the STL file.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/StlFile.html#import-detail","title":"StlFile > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/StlFile.html#property-detail","title":"StlFile > Property detail","text":"Property detail\n\n\n\nproperty StlFile.path: str\n\nPath of the STL file."},{"objectID":"Home","href":"api/ansys/additive/core/geometry_file/StlFile.html#method-detail","title":"StlFile > Method detail","text":"Method detail\n\n\n\nStlFile.__repr__()\n\n\n\n\n\nStlFile.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/ThermalPropertiesDataPoint.html#thermalpropertiesdatapoint","title":"ThermalPropertiesDataPoint","text":"ThermalPropertiesDataPoint\n\n\n\nclass ansys.additive.core.material.ThermalPropertiesDataPoint(*, density: float = 0, density_ratio: float = 0, specific_heat: float = 0, specific_heat_ratio: float = 0, temperature: float = 0, thermal_conductivity: float = 0, thermal_conductivity_ratio: float = 0)\n\nProvides the container for temperature-dependent properties.\n\nAdditive material definitions include a file containing a lookup table describing\nthe material’s thermal properties at different temperatures. This class represents a\nsingle row in the lookup table.\n\nUnits are SI (m, kg, s, K) unless otherwise noted."},{"objectID":"Home","href":"api/ansys/additive/core/material/ThermalPropertiesDataPoint.html#overview","title":"ThermalPropertiesDataPoint > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndensity\n\nDensity (kg/m^3).\n\ndensity_ratio\n\nDensity ratio.\n\nspecific_heat\n\nSpecific heat (J/kg/K).\n\nspecific_heat_ratio\n\nSpecific heat ratio.\n\ntemperature\n\nTemperature (K).\n\nthermal_conductivity\n\nThermal conductivity (W/m/K).\n\nthermal_conductivity_ratio\n\nThermal conductivity ratio.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material/ThermalPropertiesDataPoint.html#import-detail","title":"ThermalPropertiesDataPoint > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/material/ThermalPropertiesDataPoint.html#property-detail","title":"ThermalPropertiesDataPoint > Property detail","text":"Property detail\n\n\n\nproperty ThermalPropertiesDataPoint.density: float\n\nDensity (kg/m^3).\n\n\n\nproperty ThermalPropertiesDataPoint.density_ratio: float\n\nDensity ratio.\n\n\n\nproperty ThermalPropertiesDataPoint.specific_heat: float\n\nSpecific heat (J/kg/K).\n\n\n\nproperty ThermalPropertiesDataPoint.specific_heat_ratio: float\n\nSpecific heat ratio.\n\n\n\nproperty ThermalPropertiesDataPoint.temperature: float\n\nTemperature (K).\n\n\n\nproperty ThermalPropertiesDataPoint.thermal_conductivity: float\n\nThermal conductivity (W/m/K).\n\n\n\nproperty ThermalPropertiesDataPoint.thermal_conductivity_ratio: float\n\nThermal conductivity ratio."},{"objectID":"Home","href":"api/ansys/additive/core/material/ThermalPropertiesDataPoint.html#method-detail","title":"ThermalPropertiesDataPoint > Method detail","text":"Method detail\n\n\n\nThermalPropertiesDataPoint.__repr__()\n\n\n\n\n\nThermalPropertiesDataPoint.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/ProgressState.html#progressstate","title":"ProgressState","text":"ProgressState\n\n\n\nclass ansys.additive.core.progress_handler.ProgressState\n\nBases: enum.IntEnum\n\nSimulation progress status."},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/ProgressState.html#overview","title":"ProgressState > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNEW\n\nSimulation created and not yet queued to run.\n\nWAITING\n\nSimulation is queued and waiting to start.\n\nRUNNING\n\nSimulation is running.\n\nCOMPLETED\n\nSimulation has completed.\n\nERROR\n\nSimulation has errored.\n\nCANCELLED\n\nSimulation has been cancelled.\n\nWARNING\n\nSimulation completed with warnings."},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/ProgressState.html#import-detail","title":"ProgressState > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/progress_handler/ProgressState.html#attribute-detail","title":"ProgressState > Attribute detail","text":"Attribute detail\n\n\n\nProgressState.NEW\n\nSimulation created and not yet queued to run.\n\n\n\nProgressState.WAITING\n\nSimulation is queued and waiting to start.\n\n\n\nProgressState.RUNNING\n\nSimulation is running.\n\n\n\nProgressState.COMPLETED\n\nSimulation has completed.\n\n\n\nProgressState.ERROR\n\nSimulation has errored.\n\n\n\nProgressState.CANCELLED\n\nSimulation has been cancelled.\n\n\n\nProgressState.WARNING\n\nSimulation completed with warnings.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/index.html#the-ansysadditivecore-library","title":"The ansys.additive.core library","text":"The ansys.additive.core library\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/index.html#summary","title":"The ansys.additive.core library > Summary","text":"Summary\n\nSubpackages\n\n\n\n\n\nexamples\n\nProvides utilities for use with PyAdditive examples.\n\nparametric_study\n\nProvides data storage and utility methods for a parametric study.\n\nserver_connection\n\nServer connection definition and utilities.\n\nSubmodules\n\n\n\n\n\nadditive\n\nProvides a client for interacting with the Additive service.\n\nconversions\n\nUnit conversion constants and functions.\n\ndownload\n\nProvides a function for downloading files from the server to the client.\n\nexceptions\n\nProvides custom exceptions for the additive client.\n\ngeometry_file\n\nProvides a container for part geometry files.\n\nlogger\n\nProvides a general framework for logging in PyAdditive.\n\nmachine\n\nProvides a container for machine parameters.\n\nmaterial\n\nProvides a container for material parameters.\n\nmaterial_tuning\n\nProvides input and result summary containers for material tuning.\n\nmicrostructure\n\nProvides input and result summary containers for microstructure simulations.\n\nmicrostructure_3d\n\nProvides input and result summary containers for microstructure 3D simulations.\n\nmisc\n\nProvides miscellaneous utility functions.\n\nporosity\n\nProvides input and result summary containers for porosity simulations.\n\nprogress_handler\n\nProvides progress updates.\n\nsimulation\n\nProvides common definitions and classes for simulations.\n\nsimulation_error\n\nProvides simulation error information.\n\nsimulation_requests\n\nSet up methods for grpc simulation requests.\n\nsimulation_task\n\nContainer for a simulation task.\n\nsimulation_task_manager\n\nManages simulation tasks.\n\nsingle_bead\n\nProvides input and result summary containers for single bead simulations.\n\nthermal_history\n\nProvides input and result summary containers for thermal history simulations.\n\nAttributes\n\n\n\n\n\n__version__\n\n\n\nConstants\n\n\n\n\n\nUSER_DATA_PATH\n\nStorage path for user data.\n\nEXAMPLES_PATH\n\nStorage path for example data.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/index.html#description","title":"The ansys.additive.core library > Description","text":"Description\n\nPython client for the Ansys Additive service."},{"objectID":"Home","href":"api/ansys/additive/core/index.html#module-detail","title":"The ansys.additive.core library > Module detail","text":"Module detail\n\n\n\ncore.USER_DATA_PATH\n\nStorage path for user data.\n\n\n\ncore.EXAMPLES_PATH\n\nStorage path for example data.\n\n\n\ncore.__version__\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DInput.html#microstructure3dinput","title":"Microstructure3DInput","text":"Microstructure3DInput\n\n\n\nclass ansys.additive.core.microstructure_3d.Microstructure3DInput(*, sample_min_x: float = DEFAULT_POSITION_COORDINATE, sample_min_y: float = DEFAULT_POSITION_COORDINATE, sample_min_z: float = DEFAULT_POSITION_COORDINATE, sample_size_x: float = DEFAULT_SAMPLE_SIZE, sample_size_y: float = DEFAULT_SAMPLE_SIZE, sample_size_z: float = DEFAULT_SAMPLE_SIZE, calculate_initial_microstructure: bool = DEFAULT_RUN_INITIAL_MICROSTRUCTURE, use_transient_bulk_nucleation: bool = DEFAULT_USE_TRANSIENT_BULK_NUCLEATION, max_bulk_nucleation_density: int = DEFAULT_MAX_NUCLEATION_DENSITY_BULK, num_initial_random_nuclei: int = DEFAULT_NUMBER_OF_RANDOM_NUCLEI, machine: ansys.additive.core.machine.AdditiveMachine = None, material: ansys.additive.core.material.AdditiveMaterial = None)\n\nBases: ansys.additive.core.simulation.SimulationInputBase\n\nProvides input parameters for 3D microstructure simulation.\n\nUnits are SI (m, kg, s, K) unless otherwise noted.\n\nBeta Features Disclaimer\n\n3D microstructure simulation is a beta feature and requires enable_beta_features=True\nwhen creating the Additive client.\n\nBeta features are considered unreleased and have not been fully tested nor\nfully validated. The results are not guaranteed by Ansys, Inc. (Ansys) to be\ncorrect. You assume the risk of using beta features.\n\nAt its discretion, Ansys may release, change, or withdraw beta features\nin future revisions.\n\nBeta features are not subject to the Ansys Class 3 error reporting system.\nAnsys makes no commitment to resolve defects reported against beta features;\nhowever, your feedback will help us improve the quality of the product.\n\nAnsys does not guarantee that database and/or input files used with beta\nfeatures will run successfully from version to version of the software, nor\nwith the final released version of the features. You may need to modify the\ndatabase and/or input files before running them on other versions.\n\nDocumentation for beta features is called beta documentation, and it may\nnot be written to the same standard as documentation for released features.\nBeta documentation may not be complete at the time of product release.\nAt its discretion, Ansys may add, change, or delete beta documentation\nat any time."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DInput.html#overview","title":"Microstructure3DInput > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsample_min_x\n\nMinimum x coordinate of the geometry sample (m).\n\nsample_min_y\n\nMinimum y coordinate of the geometry sample (m).\n\nsample_min_z\n\nMinimum z coordinate of the geometry sample (m).\n\nsample_size_x\n\nSize of the geometry sample in the x direction (m).\n\nsample_size_y\n\nSize of the geometry sample in the y direction (m).\n\nsample_size_z\n\nSize of the geometry sample in the z direction (m).\n\ncalculate_initial_microstructure\n\nFlag indicating if the initial microstructure conditions solver is to run.\n\nuse_transient_bulk_nucleation\n\nFlag indicating if nucleation is allowed in the bulk region of the meltpool.\n\nmax_bulk_nucleation_density\n\nMaximum nucleation density in the bulk (grains/m^3).\n\nnum_initial_random_nuclei\n\nNumber of random nuclei to use for the microstructure initial conditions.\n\nmachine\n\nMachine-related parameters.\n\nmaterial\n\nMaterial used during simulation.\n\nAttributes\n\n\n\n\n\nDEFAULT_POSITION_COORDINATE\n\nDefault X, Y, Z, position coordinate (m).\n\nMIN_POSITION_COORDINATE\n\nMinimum X, Y, Z, position coordinate (m).\n\nMAX_POSITION_COORDINATE\n\nMaximum X, Y, Z, position coordinate (m).\n\nDEFAULT_SAMPLE_SIZE\n\nDefault sample size in each dimension (m).\n\nMIN_SAMPLE_SIZE\n\nMinimum sample size in each dimension (m).\n\nMAX_SAMPLE_SIZE\n\nMaximum sample size in each dimension (m).\n\nDEFAULT_RUN_INITIAL_MICROSTRUCTURE\n\nDefault flag value indicating whether to run the initial microstructure conditions solver.\n\nDEFAULT_USE_TRANSIENT_BULK_NUCLEATION\n\nDefault flag value indicating whether to use transient bulk nucleation rather than initial microstructure conditions.\n\nDEFAULT_NUMBER_OF_RANDOM_NUCLEI\n\nDefault number of random nuclei to use in the initial microstructure conditions solver.\n\nDEFAULT_MAX_NUCLEATION_DENSITY_BULK\n\nDefault maximum nucleation density in the bulk (grains/m^3).\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DInput.html#import-detail","title":"Microstructure3DInput > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DInput.html#property-detail","title":"Microstructure3DInput > Property detail","text":"Property detail\n\n\n\nproperty Microstructure3DInput.sample_min_x: float\n\nMinimum x coordinate of the geometry sample (m).\n\nValid values are from the MIN_POSITION_COORDINATE value to\nthe MAX_POSITION_COORDINATE value.\n\n\n\nproperty Microstructure3DInput.sample_min_y: float\n\nMinimum y coordinate of the geometry sample (m).\n\nValid values are from the MIN_POSITION_COORDINATE value to the\nMAX_POSITION_COORDINATE value.\n\n\n\nproperty Microstructure3DInput.sample_min_z: float\n\nMinimum z coordinate of the geometry sample (m).\n\nValid values are from the MIN_POSITION_COORDINATE value to the\nMAX_POSITION_COORDINATE value.\n\n\n\nproperty Microstructure3DInput.sample_size_x: float\n\nSize of the geometry sample in the x direction (m).\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\n\n\n\nproperty Microstructure3DInput.sample_size_y: float\n\nSize of the geometry sample in the y direction (m).\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\n\n\n\nproperty Microstructure3DInput.sample_size_z: float\n\nSize of the geometry sample in the z direction (m).\n\nValid values are from the MIN_SAMPLE_SIZE value to the\nMAX_SAMPLE_SIZE value.\n\n\n\nproperty Microstructure3DInput.calculate_initial_microstructure: bool\n\nFlag indicating if the initial microstructure conditions solver is to run.\n\nIf True, initial condition grain identifiers and Euler angles are calculated.\nIf False, the initial microstructure conditions solver is not be run.\n\n\n\nproperty Microstructure3DInput.use_transient_bulk_nucleation: bool\n\nFlag indicating if nucleation is allowed in the bulk region of the meltpool.\n\nNucleation rate is controlled by bulk nucleation density.\nIf True, bulk nucleation is enabled. if False, bulk\nnucleation is disabled.\n\n\n\nproperty Microstructure3DInput.max_bulk_nucleation_density: int\n\nMaximum nucleation density in the bulk (grains/m^3).\n\nIf use_transient_bulk_nucleation=False, this value is ignored.\n\n\n\nproperty Microstructure3DInput.num_initial_random_nuclei: int\n\nNumber of random nuclei to use for the microstructure initial conditions.\n\nThis value is used by the initial microstructure conditions solver.\nIf use_transient_bulk_nucleation=True, this value is ignored.\n\n\n\nproperty Microstructure3DInput.machine\n\nMachine-related parameters.\n\n\n\nproperty Microstructure3DInput.material\n\nMaterial used during simulation."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DInput.html#attribute-detail","title":"Microstructure3DInput > Attribute detail","text":"Attribute detail\n\n\n\nMicrostructure3DInput.DEFAULT_POSITION_COORDINATE = 0\n\nDefault X, Y, Z, position coordinate (m).\n\n\n\nMicrostructure3DInput.MIN_POSITION_COORDINATE = 0\n\nMinimum X, Y, Z, position coordinate (m).\n\n\n\nMicrostructure3DInput.MAX_POSITION_COORDINATE = 10\n\nMaximum X, Y, Z, position coordinate (m).\n\n\n\nMicrostructure3DInput.DEFAULT_SAMPLE_SIZE = 0.0001\n\nDefault sample size in each dimension (m).\n\n\n\nMicrostructure3DInput.MIN_SAMPLE_SIZE = 1.5e-05\n\nMinimum sample size in each dimension (m).\n\n\n\nMicrostructure3DInput.MAX_SAMPLE_SIZE = 0.0005\n\nMaximum sample size in each dimension (m).\n\n\n\nMicrostructure3DInput.DEFAULT_RUN_INITIAL_MICROSTRUCTURE = True\n\nDefault flag value indicating whether to run the initial microstructure conditions solver.\n\n\n\nMicrostructure3DInput.DEFAULT_USE_TRANSIENT_BULK_NUCLEATION = True\n\nDefault flag value indicating whether to use transient bulk nucleation rather than initial microstructure conditions.\n\n\n\nMicrostructure3DInput.DEFAULT_NUMBER_OF_RANDOM_NUCLEI = 8000\n\nDefault number of random nuclei to use in the initial microstructure conditions solver.\n\n\n\nMicrostructure3DInput.DEFAULT_MAX_NUCLEATION_DENSITY_BULK = 0\n\nDefault maximum nucleation density in the bulk (grains/m^3)."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure_3d/Microstructure3DInput.html#method-detail","title":"Microstructure3DInput > Method detail","text":"Method detail\n\n\n\nMicrostructure3DInput.__repr__()\n\n\n\n\n\nMicrostructure3DInput.__eq__(__o: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/index.html#the-microstructurepy-module","title":"The microstructure.py module","text":"The microstructure.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/index.html#summary","title":"The microstructure.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMicrostructureInput\n\nProvides input parameters for microstructure simulation.\n\nCircleEquivalenceColumnNames\n\nProvides column names for the circle equivalence data frame.\n\nMicrostructureSummary\n\nProvides the summary of a microstructure simulation.\n\nMicrostructure2DResult\n\nProvides the results of a 2D microstructure simulation.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/index.html#description","title":"The microstructure.py module > Description","text":"Description\n\nProvides input and result summary containers for microstructure simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureSummary.html#microstructuresummary","title":"MicrostructureSummary","text":"MicrostructureSummary\n\n\n\nclass ansys.additive.core.microstructure.MicrostructureSummary(input: MicrostructureInput, result: ansys.api.additive.v0.additive_domain_pb2.MicrostructureResult, logs: str, user_data_path: str, status: ansys.additive.core.simulation.SimulationStatus = SimulationStatus.COMPLETED)\n\nBases: ansys.additive.core.simulation.SimulationSummaryBase\n\nProvides the summary of a microstructure simulation."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureSummary.html#overview","title":"MicrostructureSummary > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nSimulation input.\n\nxy_vtk\n\nPath to the VTK file containing the 2D grain structure data in the XY plane.\n\nxz_vtk\n\nPath to the VTK file containing the 2D grain structure data in the XZ plane.\n\nyz_vtk\n\nPath to the VTK file containing the 2D grain structure data in the YZ plane.\n\nxy_circle_equivalence\n\nCircle equivalence data for the XY plane.\n\nxz_circle_equivalence\n\nCircle equivalence data for the XZ plane.\n\nyz_circle_equivalence\n\nCircle equivalence data for the YZ plane.\n\nxy_average_grain_size\n\nAverage grain size (µm) for the XY plane.\n\nxz_average_grain_size\n\nAverage grain size (µm) for the XZ plane.\n\nyz_average_grain_size\n\nAverage grain size (µm) for the YZ plane.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureSummary.html#import-detail","title":"MicrostructureSummary > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureSummary.html#property-detail","title":"MicrostructureSummary > Property detail","text":"Property detail\n\n\n\nproperty MicrostructureSummary.input\n\nSimulation input.\n\nFor more information, see the MicrostructureInput class.\n\n\n\nproperty MicrostructureSummary.xy_vtk: str\n\nPath to the VTK file containing the 2D grain structure data in the XY plane.\n\nThe VTK file contains these scalar data sets: GrainBoundaries, Orientation_(deg), and\nGrainNumber.\n\n\n\nproperty MicrostructureSummary.xz_vtk: str\n\nPath to the VTK file containing the 2D grain structure data in the XZ plane.\n\nThe VTK file contains these scalar data sets: GrainBoundaries,\nOrientation_(deg), and GrainNumber.\n\n\n\nproperty MicrostructureSummary.yz_vtk: str\n\nPath to the VTK file containing the 2D grain structure data in the YZ plane.\n\nThe VTK file contains these scalar data sets: GrainBoundaries,\nOrientation_(deg), and GrainNumber.\n\n\n\nproperty MicrostructureSummary.xy_circle_equivalence: pandas.DataFrame\n\nCircle equivalence data for the XY plane.\n\nFor data frame column names, see the CircleEquivalenceColumnNames class.\n\n\n\nproperty MicrostructureSummary.xz_circle_equivalence: pandas.DataFrame\n\nCircle equivalence data for the XZ plane.\n\nFor data frame column names, see the CircleEquivalenceColumnNames class.\n\n\n\nproperty MicrostructureSummary.yz_circle_equivalence: pandas.DataFrame\n\nCircle equivalence data for the YZ plane.\n\nFor data frame column names, see the CircleEquivalenceColumnNames class.\n\n\n\nproperty MicrostructureSummary.xy_average_grain_size: float\n\nAverage grain size (µm) for the XY plane.\n\n\n\nproperty MicrostructureSummary.xz_average_grain_size: float\n\nAverage grain size (µm) for the XZ plane.\n\n\n\nproperty MicrostructureSummary.yz_average_grain_size: float\n\nAverage grain size (µm) for the YZ plane."},{"objectID":"Home","href":"api/ansys/additive/core/microstructure/MicrostructureSummary.html#method-detail","title":"MicrostructureSummary > Method detail","text":"Method detail\n\n\n\nMicrostructureSummary.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/machine/index.html#the-machinepy-module","title":"The machine.py module","text":"The machine.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/machine/index.html#summary","title":"The machine.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMachineConstants\n\nProvides constants for additive manufacturing machine settings.\n\nAdditiveMachine\n\nProvides the additive manufacturing machine settings used during simulations.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/machine/index.html#description","title":"The machine.py module > Description","text":"Description\n\nProvides a container for machine parameters.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadSummary.html#singlebeadsummary","title":"SingleBeadSummary","text":"SingleBeadSummary\n\n\n\nclass ansys.additive.core.single_bead.SingleBeadSummary(input: SingleBeadInput, msg: ansys.api.additive.v0.additive_domain_pb2.MeltPool, logs: str, thermal_history_output: str | None = None, status: ansys.additive.core.simulation.SimulationStatus = SimulationStatus.COMPLETED)\n\nBases: ansys.additive.core.simulation.SimulationSummaryBase\n\nProvides a summary of a single bead simulation."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadSummary.html#overview","title":"SingleBeadSummary > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ninput\n\nSimulation input.\n\nmelt_pool\n\nResulting melt pool.\n\nAttributes\n\n\n\n\n\nTHERMAL_HISTORY_OUTPUT_ZIP\n\n\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadSummary.html#import-detail","title":"SingleBeadSummary > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadSummary.html#property-detail","title":"SingleBeadSummary > Property detail","text":"Property detail\n\n\n\nproperty SingleBeadSummary.input: SingleBeadInput\n\nSimulation input.\n\n\n\nproperty SingleBeadSummary.melt_pool: MeltPool\n\nResulting melt pool."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadSummary.html#attribute-detail","title":"SingleBeadSummary > Attribute detail","text":"Attribute detail\n\n\n\nSingleBeadSummary.THERMAL_HISTORY_OUTPUT_ZIP = 'gridfullthermal.zip'\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/SingleBeadSummary.html#method-detail","title":"SingleBeadSummary > Method detail","text":"Method detail\n\n\n\nSingleBeadSummary.__repr__()\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/index.html#the-single_beadpy-module","title":"The single_bead.py module","text":"The single_bead.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/index.html#summary","title":"The single_bead.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSingleBeadInput\n\nProvides input parameters for a single bead simulation.\n\nMeltPoolColumnNames\n\nProvides column names for the melt pool data frame.\n\nMeltPool\n\nContains the melt pool size dimensions for each time step during a single bead simulation.\n\nSingleBeadSummary\n\nProvides a summary of a single bead simulation.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/index.html#description","title":"The single_bead.py module > Description","text":"Description\n\nProvides input and result summary containers for single bead simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/machine/AdditiveMachine.html#additivemachine","title":"AdditiveMachine","text":"AdditiveMachine\n\n\n\nclass ansys.additive.core.machine.AdditiveMachine(*, laser_power: float = MachineConstants.DEFAULT_LASER_POWER, scan_speed: float = MachineConstants.DEFAULT_SCAN_SPEED, heater_temperature: float = MachineConstants.DEFAULT_HEATER_TEMP, layer_thickness: float = MachineConstants.DEFAULT_LAYER_THICKNESS, beam_diameter: float = MachineConstants.DEFAULT_BEAM_DIAMETER, starting_layer_angle: float = MachineConstants.DEFAULT_STARTING_LAYER_ANGLE, layer_rotation_angle: float = MachineConstants.DEFAULT_LAYER_ROTATION_ANGLE, hatch_spacing: float = MachineConstants.DEFAULT_HATCH_SPACING, slicing_stripe_width: float = MachineConstants.DEFAULT_SLICING_STRIPE_WIDTH, heat_source_model: str = MachineConstants.DEFAULT_HEAT_SOURCE_MODEL_NAME, ring_mode_index: int = MachineConstants.DEFAULT_RING_MODE_INDEX)\n\nProvides the additive manufacturing machine settings used during simulations.\n\nUnits are SI (m, kg, s, or K) unless otherwise noted. Exceptions include angles,\nwhich are (degrees), and the heater temperature, which is (degrees) Celsius."},{"objectID":"Home","href":"api/ansys/additive/core/machine/AdditiveMachine.html#overview","title":"AdditiveMachine > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlaser_power\n\nScanning laser power (W).\n\nscan_speed\n\nLaser scanning speed (m/s).\n\nheater_temperature\n\nTemperature (°C) of the machine build chamber heater.\n\nlayer_thickness\n\nThickness (m) of the powder layer deposited with each pass of the\n\nbeam_diameter\n\nWidth (m) of the laser on the powder or substrate surface defined\n\nstarting_layer_angle\n\nAngle (°) to scan the first layer at.\n\nlayer_rotation_angle\n\nAngle (°) to change the scan vector orientation from layer to layer.\n\nhatch_spacing\n\nDistance (m) between adjacent scan vectors, or hatches, when\n\nslicing_stripe_width\n\nWidth (m) of a stripe, which is a section of scan lines within a\n\nheat_source_model\n\nType of heat source model used in simulations.\n\nring_mode_index\n\nRing mode coefficient set index.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/machine/AdditiveMachine.html#import-detail","title":"AdditiveMachine > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/machine/AdditiveMachine.html#property-detail","title":"AdditiveMachine > Property detail","text":"Property detail\n\n\n\nproperty AdditiveMachine.laser_power: float\n\nScanning laser power (W).\n\nValid values are from 50 to 700 Watts.\n\n\n\nproperty AdditiveMachine.scan_speed: float\n\nLaser scanning speed (m/s).\n\nValid values are from 0.35 to 2.5 m/s.\n\n\n\nproperty AdditiveMachine.heater_temperature: float\n\nTemperature (°C) of the machine build chamber heater.\n\nValid values are from 20 to 500 °C.\n\n\n\nproperty AdditiveMachine.layer_thickness: float\n\nThickness (m) of the powder layer deposited with each pass of the\nrecoater blade.\n\nValid values are from 1e-5 to 1e-4 m (10 to 100 µm).\n\n\n\nproperty AdditiveMachine.beam_diameter: float\n\nWidth (m) of the laser on the powder or substrate surface defined\nusing the D4σ beam diameter definition.\n\nUsually this value is provided by the machine manufacturer. It is sometimes\ncalled the laser spot diameter.\n\nValid values are from 2e-5 to 1.4e-4 m (20 and 140 µm).\n\n\n\nproperty AdditiveMachine.starting_layer_angle: float\n\nAngle (°) to scan the first layer at.\n\nThe angle is measured counterclockwise from the X axis, such that a value of 90°\nresults in scan lines parallel to the Y axis.\n\nValid values are from 0 to 180°.\n\n\n\nproperty AdditiveMachine.layer_rotation_angle: float\n\nAngle (°) to change the scan vector orientation from layer to layer.\n\nValid values are from 0 to 180°.\n\n\n\nproperty AdditiveMachine.hatch_spacing: float\n\nDistance (m) between adjacent scan vectors, or hatches, when\nrastering back and forth with the laser.\n\nHatch spacing should allow for a slight overlap of scan vector tracks such that\nsome of the material re-melts to ensure full coverage of solid material.\n\nValid values are from 6e-5 to 2e-4 m (0.06 and 0.2 mm).\n\n\n\nproperty AdditiveMachine.slicing_stripe_width: float\n\nWidth (m) of a stripe, which is a section of scan lines within a\nlayer.\n\nValid values are from 0.001 to 0.1 m (1 and 100 mm).\n\n\n\nproperty AdditiveMachine.heat_source_model: str\n\nType of heat source model used in simulations.\nThe heat source model defines how the laser beam is modeled in the simulation.\n\nValid values are “gaussian” and “ring”.\n\n\n\nproperty AdditiveMachine.ring_mode_index: int\n\nRing mode coefficient set index.\n\nValid values are from MachineConstants.MIN_RING_MODE_INDEX to MachineConstants.MAX_RING_MODE_INDEX."},{"objectID":"Home","href":"api/ansys/additive/core/machine/AdditiveMachine.html#method-detail","title":"AdditiveMachine > Method detail","text":"Method detail\n\n\n\nAdditiveMachine.__repr__()\n\n\n\n\n\nAdditiveMachine.__eq__(__o: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningInput.html#materialtuninginput","title":"MaterialTuningInput","text":"MaterialTuningInput\n\n\n\nclass ansys.additive.core.material_tuning.MaterialTuningInput(*, experiment_data_file: str, material_configuration_file: str, thermal_properties_lookup_file: str, characteristic_width_lookup_file: str = None, allowable_error: float = 0.05, max_iterations: int = 15, base_plate_temperature: float = 353.15)\n\nBases: ansys.additive.core.simulation.SimulationInputBase\n\nProvides input parameters for tuning a custom material.\n\nParameters\n\nexperiment_data_file: str\n\nName of the CSV file containing the experimental results data.\n\nmaterial_configuration_file: str\n\nName of the JSON file containing the material parameters.\n\nthermal_properties_lookup_file: str\n\nName of the CSV file containing a lookup table for thermal-dependent properties.\n\ncharacteristic_width_lookup_file: str, None\n\nName of the CSV file containing a lookup table for the characteristic melt pool\nwidth at a given temperature. The default is None, in which case the characteristic\nwidth is calculated. However, a value must be provided for the base_plate_temperature\nparameter.\n\nallowable_error: float, 0.05\n\nMaximum allowable error between experimental and simulated results.\nThe default is 0.05, which is 5 percent.\n\nmax_iterations: int, 15\n\nMaximum number of iterations to perform when trying to match\nsimulation results to an experiment if the allowable error is not met.\n\nbase_plate_temperature: float, 353.15\n\nTemperature of the base plate in Kelvin. This is only required if the\nvalue for the characteristic_width_lookup_file parameter is None.\nThis value is ignored otherwise. The default is 353.15 K, which is 80 C."},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningInput.html#overview","title":"MaterialTuningInput > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nallowable_error\n\n\n\nmax_iterations\n\n\n\nexperiment_data_file\n\n\n\nmaterial_configuration_file\n\n\n\nthermal_properties_lookup_file\n\n\n\ncharacteristic_width_lookup_file\n\n\n\nbase_plate_temperature\n\n\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningInput.html#import-detail","title":"MaterialTuningInput > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningInput.html#attribute-detail","title":"MaterialTuningInput > Attribute detail","text":"Attribute detail\n\n\n\nMaterialTuningInput.allowable_error = 0.05\n\n\n\n\n\nMaterialTuningInput.max_iterations = 15\n\n\n\n\n\nMaterialTuningInput.experiment_data_file\n\n\n\n\n\nMaterialTuningInput.material_configuration_file\n\n\n\n\n\nMaterialTuningInput.thermal_properties_lookup_file\n\n\n\n\n\nMaterialTuningInput.characteristic_width_lookup_file = None\n\n\n\n\n\nMaterialTuningInput.base_plate_temperature = 353.15\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/material_tuning/MaterialTuningInput.html#method-detail","title":"MaterialTuningInput > Method detail","text":"Method detail\n\n\n\nMaterialTuningInput.__repr__()\n\n\n\n\n\nMaterialTuningInput.__eq__(other: object) -> bool\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/index.html#the-loggerpy-module","title":"The logger.py module","text":"The logger.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/index.html#summary","title":"The logger.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPyAdditivePercentStyle\n\nProvides a common messaging style for the PyAdditiveFormatter class.\n\nPyAdditiveFormatter\n\nProvides a Formatter class for overwriting default format styles.\n\nLogger\n\nProvides the logger used for each PyAdditive session.\n\nFunctions\n\n\n\n\n\nis_notebook\n\nCheck if the code is running in a Jupyter notebook.\n\naddfile_handler\n\nAdd a file handler to the input.\n\nadd_stdout_handler\n\nAdd a standout handler to the logger.\n\nConstants\n\n\n\n\n\nLOG_LEVEL\n\n\n\nFILE_NAME\n\n\n\nSTDOUT_MSG_FORMAT\n\n\n\nFILE_MSG_FORMAT\n\n\n\nDATE_FORMAT\n\n\n\nLOG\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/logger/index.html#description","title":"The logger.py module > Description","text":"Description\n\nProvides a general framework for logging in PyAdditive."},{"objectID":"Home","href":"api/ansys/additive/core/logger/index.html#logger-usage","title":"The logger.py module > Logger usage","text":"Logger usage"},{"objectID":"Home","href":"api/ansys/additive/core/logger/index.html#global-logger","title":"The logger.py module > Global logger","text":"Global logger\n\nThere is a global logger named PyAdditive_global that is created when\nansys.additive.core.__init__ is called. If you want to use this global\nlogger, you must call it at the top of your module:\n\nYou can rename this logger to avoid conflicts with other loggers (if any):\n\nThe default logging level of LOG is WARNING.\nYou can change this level and output lower-level messages with\nthis code:\n\nAlternatively, you can ensure that all the handlers are set to the input log\nlevel with this code:\n\nThis logger does not log to a file by default. If you want, you can\nadd a file handler with this code:"},{"objectID":"Home","href":"api/ansys/additive/core/logger/index.html#module-detail","title":"The logger.py module > Module detail","text":"Module detail\n\n\n\nlogger.is_notebook() -> bool\n\nCheck if the code is running in a Jupyter notebook.\n\nReturns:\n\nbool: True if running in a Jupyter notebook, False otherwise.\n\n\n\nlogger.addfile_handler(logger, filename=FILE_NAME, level=LOG_LEVEL)\n\nAdd a file handler to the input.\n\nParameters\n\nlogger\n\nlogging.Logger\n\nLogger to add the file handler to.\n\nfilename\n\nstr, default: obj:FILE_NAME\n\nName of the output file.\n\nlevel\n\ndefault\n\nDEBUG\n\nLogging level to filter the message severity allowed in the logger.\n\nReturns\n\nLogger\n\nLogger or logging.Logger object.\n\n\n\nlogger.add_stdout_handler(logger, level=LOG_LEVEL)\n\nAdd a standout handler to the logger.\n\nParameters\n\nlogger\n\nlogging.Logger\n\nLogger to add the file handler to.\n\nlevel\n\ndefault\n\nDEBUG\n\nLogging level to filter the message severity allowed in the logger.\n\nReturns\n\nLogger\n\nLogger or logging.Logger object.\n\n\n\nlogger.LOG_LEVEL = 10\n\n\n\n\n\nlogger.FILE_NAME = 'pyadditive.log'\n\n\n\n\n\nlogger.STDOUT_MSG_FORMAT = '%(asctime)s - %(levelname)s - %(module)s - %(funcName)s - %(message)s'\n\n\n\n\n\nlogger.FILE_MSG_FORMAT = '%(asctime)s - %(levelname)s - %(module)s - %(funcName)s - %(message)s'\n\n\n\n\n\nlogger.DATE_FORMAT = '%Y-%m-%d %H:%M:%S'\n\n\n\n\n\nlogger.LOG\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPoolColumnNames.html#meltpoolcolumnnames","title":"MeltPoolColumnNames","text":"MeltPoolColumnNames\n\n\n\nclass ansys.additive.core.single_bead.MeltPoolColumnNames\n\nProvides column names for the melt pool data frame."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPoolColumnNames.html#overview","title":"MeltPoolColumnNames > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nWIDTH\n\nWidth of melt pool (m).\n\nDEPTH\n\nDepth of melt pool (m).\n\nLENGTH\n\nLength of melt pool (m).\n\nREFERENCE_WIDTH\n\nWidth of melt pool at the surface of the base plate (m).\n\nREFERENCE_DEPTH\n\nDepth of melt pool measured from the surface of the base plate (m)."},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPoolColumnNames.html#import-detail","title":"MeltPoolColumnNames > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/single_bead/MeltPoolColumnNames.html#attribute-detail","title":"MeltPoolColumnNames > Attribute detail","text":"Attribute detail\n\n\n\nMeltPoolColumnNames.WIDTH = 'width'\n\nWidth of melt pool (m).\n\n\n\nMeltPoolColumnNames.DEPTH = 'depth'\n\nDepth of melt pool (m).\n\n\n\nMeltPoolColumnNames.LENGTH = 'length'\n\nLength of melt pool (m).\n\n\n\nMeltPoolColumnNames.REFERENCE_WIDTH = 'reference_width'\n\nWidth of melt pool at the surface of the base plate (m).\n\n\n\nMeltPoolColumnNames.REFERENCE_DEPTH = 'reference_depth'\n\nDepth of melt pool measured from the surface of the base plate (m).\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/constants/index.html#the-constantspy-module","title":"The constants.py module","text":"The constants.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/constants/index.html#summary","title":"The constants.py module > Summary","text":"Summary\n\nConstants\n\n\n\n\n\nLOCALHOST\n\nIP address for localhost.\n\nPYPIM_PRODUCT_NAME\n\nProduct name for the Additive server in a PyPIM environment.\n\nDEFAULT_PRODUCT_VERSION\n\nDefault Ansys product version to use for the Additive server.\n\nADDITIVE_SERVER_EXE_NAME\n\nName of the Additive server executable.\n\nADDITIVE_SERVER_SUBDIR\n\nSubdirectory for the Additive server in the Ansys installation directory."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/constants/index.html#description","title":"The constants.py module > Description","text":"Description\n\nConstants used for server connections."},{"objectID":"Home","href":"api/ansys/additive/core/server_connection/constants/index.html#module-detail","title":"The constants.py module > Module detail","text":"Module detail\n\n\n\nconstants.LOCALHOST = '127.0.0.1'\n\nIP address for localhost.\n\n\n\nconstants.PYPIM_PRODUCT_NAME = 'additive'\n\nProduct name for the Additive server in a PyPIM environment.\n\n\n\nconstants.DEFAULT_PRODUCT_VERSION = '261'\n\nDefault Ansys product version to use for the Additive server.\n\n\n\nconstants.ADDITIVE_SERVER_EXE_NAME = 'additiveserver'\n\nName of the Additive server executable.\n\n\n\nconstants.ADDITIVE_SERVER_SUBDIR\n\nSubdirectory for the Additive server in the Ansys installation directory.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/ParametricStudy.html#parametricstudy","title":"ParametricStudy","text":"ParametricStudy\n\n\n\nclass ansys.additive.core.parametric_study.parametric_study.ParametricStudy(file_name: str | os.PathLike, material_name: str)\n\nProvides data storage and utility methods for a parametric study."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/ParametricStudy.html#overview","title":"ParametricStudy > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nimport_csv_study\n\nImport a parametric study from a CSV file.\n\ndata_frame\n\nReturn a DataFrame containing the study simulations.\n\nsave\n\nSave the parametric study to a file.\n\nreset_simulation_status\n\nReset the status of any Pending or Running simulations to New.\n\nclear_errors\n\nClear the error messages for the specified simulations.\n\nadd_summaries\n\nAdd summaries of executed simulations to the parametric study.\n\ngenerate_single_bead_permutations\n\nAdd single bead permutations to the parametric study.\n\ngenerate_porosity_permutations\n\nAdd porosity permutations to the parametric study.\n\ngenerate_microstructure_permutations\n\nAdd microstructure permutations to the parametric study.\n\nupdate\n\nUpdate the results of simulations in the parametric study.\n\nadd_inputs\n\nAdd new simulations to the parametric study.\n\nremove\n\nRemove simulations from the parametric study.\n\nset_simulation_status\n\nSet the status of simulations in the parametric study.\n\nset_priority\n\nSet the priority of simulations in the parametric study.\n\nset_iteration\n\nSet the iteration number of simulations in the parametric study.\n\nclear\n\nRemove all permutations from the parametric study.\n\nsimulation_inputs\n\nGet a list of simulation inputs from the parametric study.\n\nfilter_data_frame\n\nApply filters to the parametric study and return the filtered data frame.\n\nProperties\n\n\n\n\n\nformat_version\n\nVersion of the parametric study file format.\n\nfile_name\n\nName of the file where the parametric study is stored.\n\nmaterial_name\n\nName of material used in the parametric study.\n\nStatic methods\n\n\n\n\n\nload\n\nLoad a parametric study from a file.\n\nupdate_format\n\nUpdate a parametric study to the latest format version."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/ParametricStudy.html#import-detail","title":"ParametricStudy > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/ParametricStudy.html#property-detail","title":"ParametricStudy > Property detail","text":"Property detail\n\n\n\nproperty ParametricStudy.format_version: int\n\nVersion of the parametric study file format.\n\n\n\nproperty ParametricStudy.file_name: os.PathLike\n\nName of the file where the parametric study is stored.\n\n\n\nproperty ParametricStudy.material_name: str | None\n\nName of material used in the parametric study."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study/ParametricStudy.html#method-detail","title":"ParametricStudy > Method detail","text":"Method detail\n\n\n\nParametricStudy.import_csv_study(file_name: str | os.PathLike) -> list[str]\n\nImport a parametric study from a CSV file.\n\nParameters\n\nfile_name: str, os.PathLike\n\nName of the csv file containing the simulation parameters.\n\nFor the column names used in the returned data frame, see\n\n\n\nthe :class:`ColumnNames <constants.ColumnNames>` class.\n\n\n\nReturns\n\npython:list[python:str]\n\nList of error messages of any simulations that have invalid\ninput parameters.\n\n\n\nParametricStudy.data_frame() -> pandas.DataFrame\n\nReturn a DataFrame containing the study simulations.\n\nFor the column names used in the returned data frame, see\nthe ColumnNames class.\n\nUpdating the returned data frame does not update this parametric study.\n\n\n\nParametricStudy.save(file_name: str | os.PathLike)\n\nSave the parametric study to a file.\n\nParameters\n\nfile_name\n\npython:str, os.PathLike\n\nName of the file to save the parametric study to.\n\n\n\nstatic ParametricStudy.load(file_name: str | os.PathLike) -> ParametricStudy\n\nLoad a parametric study from a file.\n\nParameters\n\nfile_name\n\npython:str, os.PathLike\n\nName of the parametric study file to load. This file is overwritten\nwhen the parametric study is updated. To prevent this behavior, update\nthe file_name attribute of the returned parametric study after\ncalling load().\n\nReturns\n\nParametricStudy\n\nLoaded parametric study.\n\n\n\nParametricStudy.reset_simulation_status()\n\nReset the status of any Pending or Running simulations to New.\n\n\n\nParametricStudy.clear_errors(simulation_ids: list[str] | None = None)\n\nClear the error messages for the specified simulations.\n\nParameters\n\nsimulation_ids\n\npython:list[python:str], default: python:None\n\nList of simulation IDs to clear the error messages for. If this value\nis None, all error messages are cleared.\n\n\n\nParametricStudy.add_summaries(summaries: list[ansys.additive.core.single_bead.SingleBeadSummary | ansys.additive.core.porosity.PorositySummary | ansys.additive.core.microstructure.MicrostructureSummary], iteration: int = DEFAULT_ITERATION) -> int\n\nAdd summaries of executed simulations to the parametric study.\n\nSimulation summaries are created using the Additive.simulate() method.\nThis method adds new simulations to the parametric study. To update existing\nsimulations, use the update() method.\n\nA summary that matches an existing simulation will overwrite the results for\nthat simulation.\n\nParameters\n\nsummaries\n\npython:list[SingleBeadSummary, PorositySummary, MicrostructureSummary]\n\nList of simulation result summaries to add to the parametric study.\n\niteration\n\npython:int, default: DEFAULT_ITERATION\n\nIteration number for the new simulations.\n\nReturns\n\npython:int\n\nNumber of new simulations added to the parametric study.\n\n\n\nParametricStudy.generate_single_bead_permutations(laser_powers: list[float], scan_speeds: list[float], bead_length: float = SingleBeadInput.DEFAULT_BEAD_LENGTH, layer_thicknesses: list[float] | None = None, heater_temperatures: list[float] | None = None, beam_diameters: list[float] | None = None, min_pv_ratio: float | None = None, max_pv_ratio: float | None = None, iteration: int = DEFAULT_ITERATION, priority: int = DEFAULT_PRIORITY, thermal_history_interval: int = SingleBeadInput.DEFAULT_THERMAL_HISTORY_INTERVAL, output_thermal_history: bool = SingleBeadInput.DEFAULT_OUTPUT_THERMAL_HISTORY, heat_source: str = MachineConstants.DEFAULT_HEAT_SOURCE_MODEL_NAME, ring_mode_index: int = MachineConstants.DEFAULT_RING_MODE_INDEX) -> int\n\nAdd single bead permutations to the parametric study.\n\nParameters\n\nlaser_powers\n\npython:list[python:float]\n\nLaser powers (W) to use for single bead simulations. Valid values\nare from MIN_LASER_POWER\nto MAX_LASER_POWER.\n\nscan_speeds\n\npython:list[python:float]\n\nScan speeds (m/s) to use for single bead simulations. Valid values are\nfrom MIN_SCAN_SPEED to\nMAX_SCAN_SPEED.\n\nbead_length\n\npython:float, default: DEFAULT_BEAD_LENGTH\n\nLength of the bead (m). Valid values are from MIN_BEAD_LENGTH\nto MAX_BEAD_LENGTH.\n\nlayer_thicknesses\n\npython:list[python:float], default: python:None\n\nLayer thicknesses (m) to use for single bead simulations.\nIf this value is None, DEFAULT_LAYER_THICKNESS\nis used. Valid values are from MIN_LAYER_THICKNESS\nto MAX_LAYER_THICKNESS.\n\nheater_temperatures\n\npython:list[python:float], default: python:None\n\nHeater temperatures (C) to use for single bead simulations.\nIf this value is None, DEFAULT_HEATER_TEMP\nis used. Valid values are from MIN_HEATER_TEMP\nto MAX_HEATER_TEMP.\n\nbeam_diameters\n\npython:list[python:float], default: python:None\n\nBeam diameters (m) to use for single bead simulations.\nIf this value is None, DEFAULT_BEAM_DIAMETER\nis used. Valid values are from MIN_BEAM_DIAMETER\nto MAX_BEAM_DIAMETER.\n\nmin_pv_ratio\n\npython:float, default: python:None\n\nThe P/V ratio is defined as the ratio of laser power (w) to the velocity of the laser beam, which\nis the scan speed (m/s). Parameter combinations with ratios less than this value are not included.\n\nmax_pv_ratio\n\npython:float, default: python:None\n\nThe P/V ratio is defined as the ratio of laser power (w) to the velocity of the laser beam, which\nis the scan speed (m/s). Parameter combinations with ratios greater than this value are not included.\n\niteration\n\npython:int, default: DEFAULT_ITERATION\n\nIteration number for this set of simulations.\n\npriority\n\npython:int, default: DEFAULT_PRIORITY\n\nPriority for this set of simulations.\n\nthermal_history_interval\n\npython:int, default: DEFAULT_THERMAL_HISTORY_INTERVAL\n\nInterval (in number of time steps) at which to record the thermal history.\nIf this value is None, DEFAULT_THERMAL_HISTORY_INTERVAL\nis used. Valid values are from MIN_THERMAL_HISTORY_INTERVAL\nto MAX_THERMAL_HISTORY_INTERVAL.\n\noutput_thermal_history\n\nbool, default: DEFAULT_OUTPUT_THERMAL_HISTORY\n\nWhether to output the thermal history data.\n\nheat_source\n\npython:str, default: DEFAULT_HEAT_SOURCE_MODEL_NAME\n\nHeat source model name to use for simulations. Available models are listed in\nAVAILABLE_HEAT_SOURCE_MODELS.\n\nring_mode_index\n\npython:int, default: DEFAULT_RING_MODE_INDEX\n\nRing mode index to use. See https://www.nlight.net/articles-content/ring-beams-change-the-game-for-powder-bed-fusion-nedmx for more information.\nThis parameter is only applicable if the heat_source parameter is set to HEAT_SOURCE_MODEL_NAME_RING.\nValid values are from MIN_RING_MODE_INDEX\nto MAX_RING_MODE_INDEX.\n\nReturns\n\npython:int\n\nNumber of single bead permutations added to the parametric study.\n\n\n\nParametricStudy.generate_porosity_permutations(laser_powers: list[float], scan_speeds: list[float], size_x: float = PorosityInput.DEFAULT_SAMPLE_SIZE, size_y: float = PorosityInput.DEFAULT_SAMPLE_SIZE, size_z: float = PorosityInput.DEFAULT_SAMPLE_SIZE, layer_thicknesses: list[float] | None = None, heater_temperatures: list[float] | None = None, beam_diameters: list[float] | None = None, start_angles: list[float] | None = None, rotation_angles: list[float] | None = None, hatch_spacings: list[float] | None = None, stripe_widths: list[float] | None = None, min_energy_density: float | None = None, max_energy_density: float | None = None, min_build_rate: float | None = None, max_build_rate: float | None = None, iteration: int = DEFAULT_ITERATION, priority: int = DEFAULT_PRIORITY, heat_source: str = MachineConstants.DEFAULT_HEAT_SOURCE_MODEL_NAME, ring_mode_index: int = MachineConstants.DEFAULT_RING_MODE_INDEX) -> int\n\nAdd porosity permutations to the parametric study.\n\nParameters\n\nlaser_powers\n\npython:list[python:float]\n\nLaser powers (W) to use for porosity simulations. Valid values\nare from MIN_LASER_POWER\nto MAX_LASER_POWER.\n\nscan_speeds\n\npython:list[python:float]\n\nScan speeds (m/s) to use for porosity simulations. Valid values are from\nMIN_SCAN_SPEED to\nMAX_SCAN_SPEED.\n\nsize_x\n\npython:float, default: DEFAULT_SAMPLE_SIZE\n\nSize (m) of the porosity sample in the x direction.\nValid values are from MIN_SAMPLE_SIZE\nto MAX_SAMPLE_SIZE.\n\nsize_y\n\npython:float, DEFAULT_SAMPLE_SIZE\n\nSize (m) of the porosity sample in the y direction.\nValid values are from MIN_SAMPLE_SIZE\nto MAX_SAMPLE_SIZE.\n\nsize_z\n\npython:float, DEFAULT_SAMPLE_SIZE\n\nSize (m) of the porosity sample in the z direction.\nValid values are from MIN_SAMPLE_SIZE\nto MAX_SAMPLE_SIZE.\n\nlayer_thicknesses\n\npython:list[python:float], default: python:None\n\nLayer thicknesses (m) to use for porosity simulations.\nIf this value is None,\nDEFAULT_LAYER_THICKNESS\nis used. Valid values are from MIN_LAYER_THICKNESS\nto MAX_LAYER_THICKNESS.\n\nheater_temperatures\n\npython:list[python:float], default: python:None\n\nHeater temperatures (C) to use for porosity simulations.\nIf this value is None, DEFAULT_HEATER_TEMP\nis used. Valid values are from MIN_HEATER_TEMP\nto MAX_HEATER_TEMP.\n\nbeam_diameters\n\npython:list[python:float], default: python:None\n\nBeam diameters (m) to use for porosity simulations.\nIf this value is None, DEFAULT_BEAM_DIAMETER\nis used. Valid values are from MIN_BEAM_DIAMETER\nto MAX_BEAM_DIAMETER.\n\nstart_angles\n\npython:list[python:float], default: python:None\n\nScan angles (deg) for the first layer to use for porosity simulations.\nIf this value is None,\nDEFAULT_STARTING_LAYER_ANGLE\nis used. Valid values are from MIN_STARTING_LAYER_ANGLE\nto MAX_STARTING_LAYER_ANGLE.\n\nrotation_angles\n\npython:list[python:float], default: python:None\n\nAngles (deg) by which the scan direction is rotated with each layer\nto use for porosity simulations. If this value is None,\nDEFAULT_LAYER_ROTATION_ANGLE\nis used. Valid values are from MIN_LAYER_ROTATION_ANGLE\nto MAX_LAYER_ROTATION_ANGLE.\n\nhatch_spacings\n\npython:list[python:float], default: python:None\n\nHatch spacings (m) to use for porosity simulations. If this value is None,\nDEFAULT_HATCH_SPACING is used.\nValid values are from MIN_HATCH_SPACING\nto MAX_HATCH_SPACING.\n\nstripe_widths\n\npython:list[python:float], default: python:None\n\nStripe widths (m) to use for porosity simulations. If this value is None,\nDEFAULT_SLICING_STRIPE_WIDTH\nis used. Valid values are from MIN_SLICING_STRIPE_WIDTH\nto MAX_SLICING_STRIPE_WIDTH.\n\nmin_energy_density\n\npython:float, default: python:None\n\nMinimum energy density (J/m^3) to use for porosity simulations. Energy density is\ndefined as laser power / (layer thickness * scan speed * hatch spacing).\nParameter combinations with an energy density below this value are not included.\n\nmax_energy_density\n\npython:float, default: python:None\n\nMaximum energy density (J/m^3) to use for porosity simulations. Energy density is\ndefined as laser power / (layer thickness * scan speed * hatch spacing).\nParameter combinations with an energy density above this value are not included.\n\nmin_build_rate\n\npython:float, default: python:None\n\nMinimum build rate (m^3/s) to use for porosity simulations. Parameter combinations\nwith a build rate below this value are not included. Build rate is defined as\nlayer thickness * scan speed * hatch spacing.\n\nmax_build_rate\n\npython:float, default: python:None\n\nMaximum build rate (m^3/s) to use for porosity simulations. Parameter combinations\nwith a build rate above this value are not included. Build rate is defined as\nlayer thickness * scan speed * hatch spacing.\n\niteration\n\npython:int, default: DEFAULT_ITERATION\n\nIteration number for this set of simulations.\n\npriority\n\npython:int, default: DEFAULT_PRIORITY\n\nPriority for this set of simulations.\n\nheat_source\n\npython:str, default: DEFAULT_HEAT_SOURCE_MODEL_NAME\n\nHeat source model name to use for simulations. Available models are listed in\nAVAILABLE_HEAT_SOURCE_MODELS.\n\nring_mode_index\n\npython:int, default: DEFAULT_RING_MODE_INDEX\n\nRing mode index to use. See https://www.nlight.net/articles-content/ring-beams-change-the-game-for-powder-bed-fusion-nedmx for more information.\nThis parameter is only applicable if the heat_source parameter is set to HEAT_SOURCE_MODEL_NAME_RING.\nValid values are from MIN_RING_MODE_INDEX\nto MAX_RING_MODE_INDEX.\n\nReturns\n\npython:int\n\nNumber of porosity permutations added to the parametric study.\n\n\n\nParametricStudy.generate_microstructure_permutations(laser_powers: list[float], scan_speeds: list[float], min_x: float = MicrostructureInput.DEFAULT_POSITION_COORDINATE, min_y: float = MicrostructureInput.DEFAULT_POSITION_COORDINATE, min_z: float = MicrostructureInput.DEFAULT_POSITION_COORDINATE, size_x: float = MicrostructureInput.DEFAULT_SAMPLE_SIZE, size_y: float = MicrostructureInput.DEFAULT_SAMPLE_SIZE, size_z: float = MicrostructureInput.DEFAULT_SAMPLE_SIZE, sensor_dimension: float = MicrostructureInput.DEFAULT_SENSOR_DIMENSION, layer_thicknesses: list[float] | None = None, heater_temperatures: list[float] | None = None, beam_diameters: list[float] | None = None, start_angles: list[float] | None = None, rotation_angles: list[float] | None = None, hatch_spacings: list[float] | None = None, stripe_widths: list[float] | None = None, min_energy_density: float | None = None, max_energy_density: float | None = None, min_build_rate: float | None = None, max_build_rate: float | None = None, cooling_rate: float | None = None, thermal_gradient: float | None = None, melt_pool_width: float | None = None, melt_pool_depth: float | None = None, random_seed: int | None = None, iteration: int = DEFAULT_ITERATION, priority: int = DEFAULT_PRIORITY, heat_source: str = MachineConstants.DEFAULT_HEAT_SOURCE_MODEL_NAME, ring_mode_index: int = MachineConstants.DEFAULT_RING_MODE_INDEX) -> int\n\nAdd microstructure permutations to the parametric study.\n\nParameters\n\nlaser_powers\n\npython:list[python:float]\n\nLaser powers (W) to use for microstructure simulations. Valid values\nare from MIN_LASER_POWER\nto MAX_LASER_POWER.\n\nscan_speeds\n\npython:list[python:float]\n\nScan speeds (m/s) to use for microstructure simulations. Valid values are from\nMIN_SCAN_SPEED to\nMAX_SCAN_SPEED.\n\nmin_x\n\npython:float, default: DEFAULT_POSITION_COORDINATE\n\nMinimum x coordinate (m) of the microstructure sample. Valid values are from\nMIN_POSITION_COORDINATE\nto MAX_POSITION_COORDINATE.\n\nmin_y\n\npython:float, default: DEFAULT_POSITION_COORDINATE\n\nMinimum y coordinate (m) of the microstructure sample. Valid values are from\nMIN_POSITION_COORDINATE\nto MAX_POSITION_COORDINATE.\n\nmin_z\n\npython:float, default: DEFAULT_POSITION_COORDINATE\n\nMinimum z coordinate (m) of the microstructure sample. Valid values are from\nMIN_POSITION_COORDINATE\nto MAX_POSITION_COORDINATE.\n\nsize_x\n\npython:float, default: DEFAULT_SAMPLE_SIZE\n\nSize (m) of the microstructure sample in the x direction.\nValid values are from MIN_SAMPLE_SIZE\nto MAX_SAMPLE_SIZE.\n\nsize_y\n\npython:float, default: DEFAULT_SAMPLE_SIZE\n\nSize (m) of the microstructure sample in the y direction.\nValid values are from MIN_SAMPLE_SIZE\nto MAX_SAMPLE_SIZE.\n\nsize_z\n\npython:float, default: DEFAULT_SAMPLE_SIZE\n\nSize (m) of the microstructure sample in the z direction.\nValid values are from MIN_SAMPLE_SIZE\nto MAX_SAMPLE_SIZE.\n\nsensor_dimension\n\npython:float, default: DEFAULT_SENSOR_DIMENSION\n\nSensor dimension (m) to use for microstructure simulations.\nValid values are from MIN_SENSOR_DIMENSION\nto MAX_SENSOR_DIMENSION.\nThe values for the size_x and size_y parameters must be greater than the\nsensor_dimension parameter by MIN_XY_SIZE_CUSHION\nmeters. The value for the size_z parameter must be greater than sensor_dimension\nparameter by MIN_Z_SIZE_CUSHION meters.\n\nlayer_thicknesses\n\npython:list[python:float], default: python:None\n\nLayer thicknesses (m) to use for microstructure simulations.\nIf this value is None,\nDEFAULT_LAYER_THICKNESS is used.\nValid values are from MIN_LAYER_THICKNESS\nto MAX_LAYER_THICKNESS.\n\nheater_temperatures\n\npython:list[python:float], default: python:None\n\nHeater temperatures (C) to use for microstructure simulations.\nIf this value is None,\nDEFAULT_HEATER_TEMP is used.\nValid values are from MIN_HEATER_TEMP\nto MAX_HEATER_TEMP.\n\nbeam_diameters\n\npython:list[python:float], default: python:None\n\nBeam diameters (m) to use for microstructure simulations. If this value is None,\nDEFAULT_BEAM_DIAMETER is used.\nValid values are from MIN_BEAM_DIAMETER\nto MAX_BEAM_DIAMETER.\n\nstart_angles\n\npython:list[python:float], default: python:None\n\nScan angles (deg) for the first layer to use for microstructure simulations.\nIf this value is None,\nDEFAULT_STARTING_LAYER_ANGLE\nis used. Valid values are from MIN_STARTING_LAYER_ANGLE\nto MAX_STARTING_LAYER_ANGLE.\n\nrotation_angles\n\npython:list[python:float], default: python:None\n\nAngles (deg) by which the scan direction is rotated with each layer\nto use for microstructure simulations.\nIf this value is None, DEFAULT_LAYER_ROTATION_ANGLE\nis used. Valid values are from MIN_LAYER_ROTATION_ANGLE\nto MAX_LAYER_ROTATION_ANGLE.\n\nhatch_spacings\n\npython:list[python:float], default: python:None\n\nHatch spacings (m) to use for microstructure simulations.\nIf this value is None, DEFAULT_HATCH_SPACING is used.\nValid values are from MIN_HATCH_SPACING\nto MAX_HATCH_SPACING.\n\nstripe_widths\n\npython:list[python:float], default: python:None\n\nStripe widths (m) to use for microstructure simulations.\nIf this value is None, DEFAULT_SLICING_STRIPE_WIDTH\nis used. Valid values are from MIN_SLICING_STRIPE_WIDTH\nto MAX_SLICING_STRIPE_WIDTH.\n\nmin_energy_density\n\npython:float, default: python:None\n\nMinimum energy density (J/m^3) to use for microstructure simulations. Energy density is\ndefined as laser power / (layer thickness * scan speed * hatch spacing).\nParameter combinations with an energy density below this value are not included.\n\nmax_energy_density\n\npython:float, default: python:None\n\nMaximum energy density (J/m^3) to use for microstructure simulations. Energy density is\ndefined as laser power / (layer thickness * scan speed * hatch spacing).\nParameter combinations with an energy density above this value are not included.\n\nmin_build_rate\n\npython:float, default: python:None\n\nThe minimum build rate (m^3/s) to use for microstructure simulations.\nParameter combinations with a build rate below this value will not be included.\nBuild rate is defined as layer thickness * scan speed * hatch spacing.\n\nmax_build_rate\n\npython:float, default: python:None\n\nThe maximum build rate (m^3/s) to use for microstructure simulations.\nParameter combinations with a build rate above this value will not be included.\nBuild rate is defined as layer thickness * scan speed * hatch spacing.\n\ncooling_rate\n\npython:float, default: python:None\n\nThe cooling rate (K/s) to use for microstructure simulations.\nIf this value is None, and thermal_gradient, melt_pool_width, and melt_pool_depth\nare None, the cooling rate is calculated. If None and any of the other three parameters\nare not None, DEFAULT_COOLING_RATE\nis used. Valid values are from MIN_COOLING_RATE\nto MAX_COOLING_RATE.\n\nthermal_gradient\n\npython:float, default: python:None\n\nThermal gradient (K/m) to use for microstructure simulations.\nIf this value is None, and cooling_rate, melt_pool_width, and melt_pool_depth\nare None, the thermal gradient is calculated. If this value is None and any of the other three parameters\nare not None, DEFAULT_THERMAL_GRADIENT           is used. Valid values are from MIN_THERMAL_GRADIENT\nto MAX_THERMAL_GRADIENT.\n\nmelt_pool_width\n\npython:float, default: python:None\n\nMelt pool width (m) to use for microstructure simulations.\nIf this value is None and cooling_rate, thermal_gradient, and melt_pool_depth\nare None, the melt pool is calculated. If this value is None and any of the other three parameters\nare not None, DEFAULT_MELT_POOL_WIDTH is used.\nValid values are from MIN_MELT_POOL_WIDTH\nto MAX_MELT_POOL_WIDTH.\n\nmelt_pool_depth\n\npython:float, default: python:None\n\nMelt pool depth (m) to use for microstructure simulations.\nIf this value is None, and cooling_rate, thermal_gradient, and melt_pool_width\nare None, the melt pool depth is calculated. If this value is None and any of the other three parameters\nare not None, DEFAULT_MELT_POOL_DEPTH is used.\nValid values are from MIN_MELT_POOL_DEPTH\nto MAX_MELT_POOL_DEPTH.\n\nrandom_seed\n\npython:int, default: python:None\n\nThe random seed to use for microstructure simulations. If this value is None,\nan automatically generated random seed is used.\nValid values are from MIN_RANDOM_SEED\nto MAX_RANDOM_SEED.\n\niteration\n\npython:int, default: DEFAULT_ITERATION\n\nIteration number for this set of simulations.\n\npriority\n\npython:int, default: DEFAULT_PRIORITY\n\nPriority for this set of simulations.\n\nheat_source\n\npython:str, default: DEFAULT_HEAT_SOURCE_MODEL_NAME\n\nHeat source model name to use for simulations. Available models are listed in\nAVAILABLE_HEAT_SOURCE_MODELS.\n\nring_mode_index\n\npython:int, default: DEFAULT_RING_MODE_INDEX\n\nRing mode index to use. See https://www.nlight.net/articles-content/ring-beams-change-the-game-for-powder-bed-fusion-nedmx for more information.\nThis parameter is only applicable if the heat_source parameter is set to HEAT_SOURCE_MODEL_NAME_RING.\nValid values are from MIN_RING_MODE_INDEX\nto MAX_RING_MODE_INDEX.\n\nReturns\n\npython:int\n\nNumber of microstructure permutations added to the parametric study.\n\n\n\nParametricStudy.update(summaries: list[ansys.additive.core.single_bead.SingleBeadSummary | ansys.additive.core.porosity.PorositySummary | ansys.additive.core.microstructure.MicrostructureSummary | ansys.additive.core.simulation_error.SimulationError])\n\nUpdate the results of simulations in the parametric study.\n\nThis method updates values for existing simulations in the parametric study. To add\ncompleted simulations, use the add_summaries() method instead.\n\nParameters\n\nsummaries\n\npython:list[SingleBeadSummary, PorositySummary, MicrostructureSummary, SimulationError]\n\nList of simulation summaries to use for updating the parametric study.\n\n\n\nParametricStudy.add_inputs(inputs: list[ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput], iteration: int = DEFAULT_ITERATION, priority: int = DEFAULT_PRIORITY, status: ansys.additive.core.simulation.SimulationStatus = SimulationStatus.NEW) -> int\n\nAdd new simulations to the parametric study.\n\nIf the input matches an existing simulation, the input will be ignored.\n\nParameters\n\ninputs\n\npython:list[SingleBeadInput, PorosityInput, MicrostructureInput]\n\nList of simulation inputs to add to the parametric study.\n\niteration\n\npython:int, default: DEFAULT_ITERATION\n\nIteration number for the simulation inputs.\n\npriority\n\npython:int, default: DEFAULT_PRIORITY\n\nPriority for the simulations.\n\nstatus\n\nSimulationStatus, default: SimulationStatus.NEW\n\nValid types are SimulationStatus.NEW and SimulationStatus.SKIP.\n\nReturns\n\npython:int\n\nThe number of simulations added to the parametric study.\n\n\n\nParametricStudy.remove(ids: str | list[str])\n\nRemove simulations from the parametric study.\n\nParameters\n\nids\n\npython:str, python:list[python:str]\n\nOne or more ID values for the simulations to remove.\n\n\n\nParametricStudy.set_simulation_status(ids: str | list[str], status: ansys.additive.core.simulation.SimulationStatus, err_msg: str = '')\n\nSet the status of simulations in the parametric study.\n\nParameters\n\nids\n\npython:str, python:list[python:str]\n\nOne or more IDs of the simulations to update.\n\nstatus\n\nSimulationStatus\n\nStatus for the simulations.\n\nerr_msg\n\npython:str, default: “”\n\nError message for the simulations. Only used if status is SimulationStatus.ERROR.\n\n\n\nParametricStudy.set_priority(ids: str | list[str], priority: int)\n\nSet the priority of simulations in the parametric study.\n\nParameters\n\nids\n\npython:str, python:list[python:str]\n\nOne or more IDs of the simulations to update.\n\npriority\n\npython:int\n\nPriority for the simulations.\n\n\n\nParametricStudy.set_iteration(ids: str | list[str], iteration: int)\n\nSet the iteration number of simulations in the parametric study.\n\nThe iteration number is used to track the evolution of a\ndesign of experiments. Its use is optional.\n\nParameters\n\nids\n\npython:str, python:list[python:str]\n\nOne or more IDs of the simulations to update.\n\niteration\n\npython:int\n\nIteration for the simulations.\n\n\n\nParametricStudy.clear()\n\nRemove all permutations from the parametric study.\n\n\n\nstatic ParametricStudy.update_format(study: ParametricStudy) -> ParametricStudy\n\nUpdate a parametric study to the latest format version.\n\nVersion 1: Initial version.\n\nVersion 2: Rename columns to use consistent units and naming conventions.\n\nVersion 3: Add material name and PV ratio columns.\n\nVersion 4: Add heat source, ring mode index and two single-bead thermal history columns.\n\nNote: The _add_simulations_from_csv method will need to be updated with new versions.\n\nParameters\n\nstudy\n\nParametricStudy\n\nParametric study to update.\n\nReturns\n\nParametricStudy\n\nUpdated parametric study.\n\n\n\nParametricStudy.simulation_inputs(get_material_func: Callable[[str], ansys.additive.core.material.AdditiveMaterial], simulation_ids: list[str] | None = None, types: list[ansys.additive.core.simulation.SimulationType] | None = None, priority: int | None = None, iteration: int | None = None) -> list[ansys.additive.core.single_bead.SingleBeadInput | ansys.additive.core.porosity.PorosityInput | ansys.additive.core.microstructure.MicrostructureInput]\n\nGet a list of simulation inputs from the parametric study.\n\nParameters\n\nget_material_func: Callable[[str], AdditiveMaterial]\n\nFunction to get the material object from the material name.\nThis can be a call to the Additive server or another source.\n\nsimulation_ids\n\npython:list[python:str], default: python:None\n\nList of simulation IDs to run. If this value is None,\nall simulations with a status of New are run.\n\ntypes\n\npython:list[SimulationType], default: python:None\n\nType of simulations to run. If this value is None,\nall simulation types are run.\n\npriority\n\npython:int, default: python:None\n\nPriority of simulations to run. If this value is None,\nall priorities are run.\n\niteration\n\npython:int, default: python:None\n\nIteration number of simulations to run. The default is None,\nall iterations are run.\n\nReturns\n\npython:list[SingleBeadInput, PorosityInput, MicrostructureInput]\n\nList of simulation inputs.\n\n\n\nParametricStudy.filter_data_frame(simulation_ids: list[str] | None = None, types: list[ansys.additive.core.simulation.SimulationType] | None = None, priority: int | None = None, iteration: int | None = None) -> pandas.DataFrame\n\nApply filters to the parametric study and return the filtered data frame.\n\nParameters\n\nsimulation_ids: list[str], default: None\n\nList of simulation IDs to include. The default is None, in which case\nall simulations with status of SimulationStatus.NEW are selected.\n\ntypes\n\npython:list, default: python:None\n\nList of simulation types to include. The default is None, in which case\nall simulation types are selected.\n\npriority\n\npython:int, default: python:None\n\nPriority of simulations to include. The default is None, in which case\nall priorities are selected.\n\niteration\n\npython:int, default: python:None\n\nIteration number of simulations to include. The default is None, in which case\nall iterations are selected.\n\nReturns\n\npd.DataFrame\n\nFiltered view of the parametric study data frame\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/index.html#the-constantspy-module","title":"The constants.py module","text":"The constants.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/index.html#summary","title":"The constants.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nColumnNames\n\nProvides column names for the parametric study data frame.\n\nConstants\n\n\n\n\n\nDEFAULT_ITERATION\n\nDefault iteration assigned to new simulations.\n\nDEFAULT_PRIORITY\n\nDefault priority assigned to new simulations.\n\nFORMAT_VERSION\n\nParametric study file format version. See ParametricStudy.update_format() for details.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/index.html#description","title":"The constants.py module > Description","text":"Description\n\nProvides constant values related to parametric studies."},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/constants/index.html#module-detail","title":"The constants.py module > Module detail","text":"Module detail\n\n\n\nconstants.DEFAULT_ITERATION = 0\n\nDefault iteration assigned to new simulations.\n\n\n\nconstants.DEFAULT_PRIORITY = 1\n\nDefault priority assigned to new simulations.\n\n\n\nconstants.FORMAT_VERSION = 4\n\nParametric study file format version. See ParametricStudy.update_format() for details.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/index.html#the-parametric_study_progress_handlerpy-module","title":"The parametric_study_progress_handler.py module","text":"The parametric_study_progress_handler.py module\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/index.html#summary","title":"The parametric_study_progress_handler.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nParametricStudyProgressHandler\n\nProvides methods to update parametric study simulation status.\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/parametric_study/parametric_study_progress_handler/index.html#description","title":"The parametric_study_progress_handler.py module > Description","text":"Description\n\nProvides a class to update progress when running parametric study simulations.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/exceptions/BetaFeatureNotEnabledError.html#betafeaturenotenablederror","title":"BetaFeatureNotEnabledError","text":"BetaFeatureNotEnabledError\n\n\n\nexception ansys.additive.core.exceptions.BetaFeatureNotEnabledError\n\nBases: Exception\n\nRaised when a beta feature is not enabled."},{"objectID":"Home","href":"api/ansys/additive/core/exceptions/BetaFeatureNotEnabledError.html#import-detail","title":"BetaFeatureNotEnabledError > Import detail","text":"Import detail\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/CustomMaterialExampleFiles.html#custommaterialexamplefiles","title":"CustomMaterialExampleFiles","text":"CustomMaterialExampleFiles\n\n\n\nclass ansys.additive.core.examples.downloads.CustomMaterialExampleFiles(material_configuration_file: str, thermal_properties_lookup_file: str, characteristic_width_lookup_file: str)\n\nHolds the files associated with a custom material definition.\n\nParameters\n\nmaterial_configuration_file\n\npython:str\n\nPath to the material configuration file.\n\nthermal_properties_lookup_file\n\npython:str\n\nPath to the thermal properties lookup file.\n\ncharacteristic_width_lookup_file\n\npython:str\n\nPath to the characteristic width lookup file."},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/CustomMaterialExampleFiles.html#overview","title":"CustomMaterialExampleFiles > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmaterial_configuration_file\n\nPath to the material configuration file.\n\nthermal_properties_lookup_file\n\nPath to the thermal properties lookup file.\n\ncharacteristic_width_lookup_file\n\nPath to the characteristic width lookup file."},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/CustomMaterialExampleFiles.html#import-detail","title":"CustomMaterialExampleFiles > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/examples/downloads/CustomMaterialExampleFiles.html#property-detail","title":"CustomMaterialExampleFiles > Property detail","text":"Property detail\n\n\n\nproperty CustomMaterialExampleFiles.material_configuration_file\n\nPath to the material configuration file.\n\n\n\nproperty CustomMaterialExampleFiles.thermal_properties_lookup_file\n\nPath to the thermal properties lookup file.\n\n\n\nproperty CustomMaterialExampleFiles.characteristic_width_lookup_file\n\nPath to the characteristic width lookup file.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/Range.html#range","title":"Range","text":"Range\n\n\n\nclass ansys.additive.core.thermal_history.Range(min: float, max: float)\n\nDefines a range of values."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/Range.html#overview","title":"Range > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmin\n\nMinimum value of range.\n\nmax\n\nMaximum value of range.\n\nSpecial methods\n\n\n\n\n\n__repr__\n\n\n\n__eq__\n\n"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/Range.html#import-detail","title":"Range > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/Range.html#property-detail","title":"Range > Property detail","text":"Property detail\n\n\n\nproperty Range.min: float\n\nMinimum value of range.\n\n\n\nproperty Range.max: float\n\nMaximum value of range."},{"objectID":"Home","href":"api/ansys/additive/core/thermal_history/Range.html#method-detail","title":"Range > Method detail","text":"Method detail\n\n\n\nRange.__repr__()\n\n\n\n\n\nRange.__eq__(other: object) -> bool\n\n\n\n\n\n"}]