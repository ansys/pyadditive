
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00_additive_single_bead.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00_additive_single_bead.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00_additive_single_bead.py:


Single Bead Analysis
====================

This tutorial shows how you can use PyAdditive to determine
meltpool characteristics for given material and machine
parameter combinations.

Units are SI (m, kg, s, K) unless otherwise noted.

First, connect to the Additive service.

.. GENERATED FROM PYTHON SOURCE LINES 13-19

.. code-block:: default

    import matplotlib.pyplot as plt

    import ansys.additive as pyadditive

    additive = pyadditive.Additive()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    2023-07-17 17:10:07 Connected to localhost:50052
    user data path: /home/runner/.local/share/ansys-pyadditive




.. GENERATED FROM PYTHON SOURCE LINES 20-24

Material Selection
------------------
The next step is a to choose a material. A list of available materials can
be obtained using the ``get_materials_list`` command.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default


    print(additive.get_materials_list())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    names: "Ti64"
    names: "IN625"
    names: "CoCr"
    names: "Al357"
    names: "AlSi10Mg"
    names: "IN718"
    names: "316L"
    names: "17-4PH"





.. GENERATED FROM PYTHON SOURCE LINES 28-29

Obtain the parameters for a single material using one of the names from the list.

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    material = additive.get_material("17-4PH")








.. GENERATED FROM PYTHON SOURCE LINES 32-37

Machine Parameter Specification
-------------------------------
Specify machine parameters by first creating an ``AdditiveMachine`` object
then assigning the desired values. All values are in SI units (m, kg, s, K)
unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 37-43

.. code-block:: default


    machine = pyadditive.AdditiveMachine()

    # Show available parameters
    print(machine)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    AdditiveMachine
    laser_power: 195
    scan_speed: 1.0
    heater_temperature: 80
    layer_thickness: 5e-05
    beam_diameter: 0.0001
    starting_layer_angle: 57
    layer_rotation_angle: 67
    hatch_spacing: 0.0001
    slicing_stripe_width: 0.01





.. GENERATED FROM PYTHON SOURCE LINES 44-45

Set laser power and scan speed

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: default

    machine.scan_speed = 1  # m/s
    machine.laser_power = 300  # W








.. GENERATED FROM PYTHON SOURCE LINES 49-53

Specify Single Bead Simulation Inputs
-------------------------------------
Create a ``SingleBeadInput`` object containing the desired simulation
parameters.

.. GENERATED FROM PYTHON SOURCE LINES 53-58

.. code-block:: default


    input = pyadditive.SingleBeadInput(
        machine=machine, material=material, id="single-bead-example", bead_length=0.0012  # meters
    )








.. GENERATED FROM PYTHON SOURCE LINES 59-62

Run Simulation
--------------
Use the ``simulate`` method of the ``additive`` object to run the simulation.

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. code-block:: default


    summary = additive.simulate(input)








.. GENERATED FROM PYTHON SOURCE LINES 66-69

Plot Melt Pool Statistics
-------------------------
You can plot the melt pool statistics using matplotlib.

.. GENERATED FROM PYTHON SOURCE LINES 69-83

.. code-block:: default


    _, ax = plt.subplots()
    mp = summary.melt_pool
    ax.plot(mp.laser_x, mp.length, label="length")
    ax.plot(mp.laser_x, mp.width, label="width")
    ax.plot(mp.laser_x, mp.depth, label="depth")
    ax.plot(mp.laser_x, mp.reference_width, label="reference_width")
    ax.plot(mp.laser_x, mp.reference_depth, label="reference_depth")
    ax.legend()
    ax.set_xlabel("Bead Length (m)")
    ax.set_ylabel("Melt Pool (m)")
    ax.set_title("Melt Pool Statistics")

    plt.show()



.. image-sg:: /examples/images/sphx_glr_00_additive_single_bead_001.png
   :alt: Melt Pool Statistics
   :srcset: /examples/images/sphx_glr_00_additive_single_bead_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  5.101 seconds)


.. _sphx_glr_download_examples_00_additive_single_bead.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 00_additive_single_bead.py <00_additive_single_bead.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 00_additive_single_bead.ipynb <00_additive_single_bead.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
