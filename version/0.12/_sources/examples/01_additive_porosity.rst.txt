
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01_additive_porosity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01_additive_porosity.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01_additive_porosity.py:


Porosity Analysis
=================

This tutorial shows how you can use PyAdditive to determine
porosity for given material and machine parameter combinations.

Units are SI (m, kg, s, K) unless otherwise noted.

First, connect to the Additive service.

.. GENERATED FROM PYTHON SOURCE LINES 12-16

.. code-block:: default

    import ansys.additive as pyadditive

    additive = pyadditive.Additive()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    user data path: /home/runner/.local/share/ansys-pyadditive




.. GENERATED FROM PYTHON SOURCE LINES 17-21

Material Selection
------------------
The next step is a to choose a material. A list of available materials can
be obtained using the ``get_materials_list`` command.

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: default


    print(additive.get_materials_list())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    names: "Ti64"
    names: "IN625"
    names: "CoCr"
    names: "Al357"
    names: "AlSi10Mg"
    names: "IN718"
    names: "316L"
    names: "17-4PH"





.. GENERATED FROM PYTHON SOURCE LINES 25-26

Obtain the parameters for a single material using one of the names from the list.

.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: default

    material_name = "17-4PH"
    material = additive.get_material(material_name)








.. GENERATED FROM PYTHON SOURCE LINES 30-35

Machine Parameter Specification
-------------------------------
Specify machine parameters by first creating an ``AdditiveMachine`` object
then assigning the desired values. All values are in SI units (m, kg, s, K)
unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 35-41

.. code-block:: default


    machine = pyadditive.AdditiveMachine()

    # Show available parameters
    print(machine)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    AdditiveMachine
    laser_power: 195
    scan_speed: 1.0
    heater_temperature: 80
    layer_thickness: 5e-05
    beam_diameter: 0.0001
    starting_layer_angle: 57
    layer_rotation_angle: 67
    hatch_spacing: 0.0001
    slicing_stripe_width: 0.01





.. GENERATED FROM PYTHON SOURCE LINES 42-43

Set laser power and scan speed

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: default

    machine.scan_speed = 1.2  # m/s
    machine.laser_power = 250  # W








.. GENERATED FROM PYTHON SOURCE LINES 47-51

Specify Porosity Simulation Inputs
----------------------------------
Create a ``PorosityInput`` object containing the desired simulation
parameters.

.. GENERATED FROM PYTHON SOURCE LINES 51-61

.. code-block:: default


    input = pyadditive.PorosityInput(
        machine=machine,
        material=material,
        id="porosity-example",
        size_x=0.001,  # in meters (1 mm)
        size_y=0.001,
        size_z=0.001,
    )








.. GENERATED FROM PYTHON SOURCE LINES 62-65

Run Simulation
--------------
Use the ``simulate`` method of the ``additive`` object to run the simulation.

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: default


    summary = additive.simulate(input)








.. GENERATED FROM PYTHON SOURCE LINES 69-72

Print Results
-------------
The result object has void_ratio, powder_ratio and solid_ratio properties.

.. GENERATED FROM PYTHON SOURCE LINES 72-80

.. code-block:: default


    print(
        f"For {material_name} with laser power of {summary.input.machine.laser_power} W"
        + f" and scan speed of {summary.input.machine.scan_speed} m/s:"
    )
    print(f"    solid ratio = {round(summary.solid_ratio, 5)}")
    print(f"    powder ratio = {round(summary.powder_ratio, 5)}")
    print(f"    void ratio = {round(summary.void_ratio, 5)}")




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    For 17-4PH with laser power of 250 W and scan speed of 1.2 m/s:
        solid ratio = 0.9998
        powder ratio = 0.0002
        void ratio = 0.0





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 4 minutes  15.857 seconds)


.. _sphx_glr_download_examples_01_additive_porosity.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 01_additive_porosity.py <01_additive_porosity.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 01_additive_porosity.ipynb <01_additive_porosity.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
