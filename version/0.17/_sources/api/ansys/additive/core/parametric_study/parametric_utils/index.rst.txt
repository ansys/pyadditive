




The ``parametric_utils.py`` module
==================================

.. py:module:: ansys.additive.core.parametric_study.parametric_utils


Summary
-------








.. py:currentmodule:: parametric_utils
.. tab-set::







    .. tab-item:: Functions

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:attr:`~build_rate`
            - Calculate the build rate.


          * - :py:attr:`~energy_density`
            - Calculate the energy density.

















Description
-----------

Provides utility functions used during a parametric study.

..
    !! processed by numpydoc !!






Module detail
-------------

.. py:function:: build_rate(scan_speed: float, layer_thickness: float, hatch_spacing: Optional[float] = None) -> float

   
   Calculate the build rate.

   This is an approximate value useful for comparison but not for an accurate prediction
   of build time. The returned value is simply the product of the scan speed, layer thickness,
   and hatch spacing (if provided).

   :Parameters:

       **scan_speed** : :class:`python:float`
           Laser scan speed.

       **layer_thickness** : :class:`python:float`
           Powder deposit layer thickness.

       **hatch_spacing** : :class:`python:float`, default: :data:`python:None`
           Distance between hatch scan lines.

   :Returns:

       :class:`python:float`
           Volumetric build rate is returned if hatch spacing is provided.
           Otherwise, an area build rate is returned. If input units are m/s and m,
           the output units are m^3/s or m^2/s.













   ..
       !! processed by numpydoc !!

.. py:function:: energy_density(laser_power: float, scan_speed: float, layer_thickness: float, hatch_spacing: Optional[float] = None) -> float

   
   Calculate the energy density.

   This is an approximate value useful for comparison. The returned value is simply
   the laser power divided by the build rate. For more information, see the :meth:`build_rate`
   method.

   :Parameters:

       **laser_power** : :class:`python:float`
           Laser power.

       **scan_speed** : :class:`python:float`
           Laser scan speed.

       **layer_thickness** : :class:`python:float`
           Powder deposit layer thickness.

       **hatch_spacing** : :class:`python:float`, default: :data:`python:None`
           Distance between hatch scan lines.

   :Returns:

       :class:`python:float`
           Volumetric energy density is returned if hatch spacing is provided.
           Otherwise an area energy density is returned. If input units are W, m/s, m, or m,
           the output units are J/m^3 or J/m^2.













   ..
       !! processed by numpydoc !!



