
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/07_additive_thermal_history.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_07_additive_thermal_history.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_07_additive_thermal_history.py:


Thermal history analysis (BETA)
===============================

.. warning::
    Beta Features Disclaimer

    * This is beta documentation for one or more beta software features.
    * Beta features are considered unreleased and have not been fully tested nor
      fully validated. The results are not guaranteed by Ansys, Inc. (Ansys) to be
      correct. You assume the risk of using beta features.
    * At its discretion, Ansys may release, change, or withdraw beta features
      in future revisions.
    * Beta features are not subject to the Ansys Class 3 error reporting system.
      Ansys makes no commitment to resolve defects reported against beta features;
      however, your feedback will help us improve the quality of the product.
    * Ansys does not guarantee that database and/or input files used with beta
      features will run successfully from version to version of the software, nor
      with the final released version of the features. You may need to modify the
      database and/or input files before running them on other versions.
    * Documentation for beta features is called beta documentation, and it may
      not be written to the same standard as documentation for released features.
      Beta documentation may not be complete at the time of product release.
      At its discretion, Ansys may add, change, or delete beta documentation
      at any time.

This example shows how to use PyAdditive to determine
thermal history during a build using a simulated coaxial
average sensor.

Units are SI (m, kg, s, K) unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 55-58

Perform required import and connect
-----------------------------------
Perform the required import and connect to the Additive service.

.. GENERATED FROM PYTHON SOURCE LINES 58-73

.. code-block:: Python


    from ansys.additive.core import (
        Additive,
        AdditiveMachine,
        BuildFile,
        CoaxialAverageSensorInputs,
        MachineType,
        Range,
        SimulationError,
        StlFile,
        ThermalHistoryInput,
    )

    additive = Additive(enable_beta_features=True)








.. GENERATED FROM PYTHON SOURCE LINES 74-81

Specify model
-------------
Specify the geometry model. PyAdditive supports two types of geometry
specifications, the :class:`StlFile` class and the :class:`BuildFile` class.

You can download the example build and STL files by importing the
:obj:`~ansys.additive.core.examples` module.

.. GENERATED FROM PYTHON SOURCE LINES 81-92

.. code-block:: Python


    import ansys.additive.core.examples as examples

    # Create an ``StlFile`` object.
    stl_name = examples.download_10mm_cube()
    stl_file = StlFile(stl_name)

    # Or, create a ``BuildFile`` object.
    build_file_name = examples.download_small_wedge_slm_build_file()
    build_file = BuildFile(MachineType.SLM, build_file_name)








.. GENERATED FROM PYTHON SOURCE LINES 93-97

Select material
---------------
Select a material. You can use the :meth:`~Additive.materials_list` method to
obtain a list of available materials.

.. GENERATED FROM PYTHON SOURCE LINES 97-100

.. code-block:: Python


    print("Available material names: {}".format(additive.materials_list()))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Available material names: ['AlSi10Mg', 'Al357', 'CoCr', 'IN718', 'IN625', '316L', '17-4PH', 'Ti64']




.. GENERATED FROM PYTHON SOURCE LINES 101-103

You can obtain the parameters for a single material by passing a name
from the materials list to the :meth:`~Additive.material` method.

.. GENERATED FROM PYTHON SOURCE LINES 103-106

.. code-block:: Python


    material = additive.material("17-4PH")








.. GENERATED FROM PYTHON SOURCE LINES 107-112

Specify machine parameters
--------------------------
Specify machine parameters by first creating an :class:`AdditiveMachine` object
and then assigning the desired values. All values are in SI units (m, kg, s, K)
unless otherwise noted.

.. GENERATED FROM PYTHON SOURCE LINES 112-118

.. code-block:: Python


    machine = AdditiveMachine()

    # Show available parameters
    print(machine)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    AdditiveMachine
    laser_power: 195.0 W
    scan_speed: 1.0 m/s
    heater_temperature: 80.0 °C
    layer_thickness: 5e-05 m
    beam_diameter: 0.0001 m
    starting_layer_angle: 57 °
    layer_rotation_angle: 67 °
    hatch_spacing: 0.0001 m
    slicing_stripe_width: 0.01 m
    heat_source_model: gaussian
    ring_mode_index: 0





.. GENERATED FROM PYTHON SOURCE LINES 119-122

Set laser power and scan speed
------------------------------
Set the laser power and scan speed.

.. GENERATED FROM PYTHON SOURCE LINES 122-126

.. code-block:: Python


    machine.scan_speed = 1  # m/s
    machine.laser_power = 500  # W








.. GENERATED FROM PYTHON SOURCE LINES 127-134

Specify inputs for thermal history simulation
---------------------------------------------
Thermal history is simulated for the given geometry over a range of heights
in the Z dimension. More than one range can be specified. Each range is specified
with a :class:`Range` object. The ranges are assigned to a :class:`CoaxialAverageSensorInputs`
object, which also includes a sensor radius. The :class:`CoaxialAverageSensorInputs` object
is assigned to a :class:`ThermalHistoryInput` object.

.. GENERATED FROM PYTHON SOURCE LINES 134-148

.. code-block:: Python


    # Values are in meters
    sensor_inputs = CoaxialAverageSensorInputs(
        radius=5e-4,
        z_heights=[Range(min=1e-3, max=1.1e-3), Range(min=6.5e-3, max=6.6e-3)],
    )

    input = ThermalHistoryInput(
        machine=machine,
        material=material,
        geometry=stl_file,
        coax_ave_sensor_inputs=sensor_inputs,
    )








.. GENERATED FROM PYTHON SOURCE LINES 149-154

Run simulation
--------------
Use the :meth:`~Additive.simulate` method of the ``additive`` object to run the simulation.
The returned object is either a :class:`ThermalHistorySummary` object or a
:class:`SimulationError` object.

.. GENERATED FROM PYTHON SOURCE LINES 154-159

.. code-block:: Python


    summary = additive.simulate(input)
    if isinstance(summary, SimulationError):
        raise Exception(summary.message)








.. GENERATED FROM PYTHON SOURCE LINES 160-163

Plot thermal history
--------------------
Plot the thermal history using PyVista.

.. GENERATED FROM PYTHON SOURCE LINES 163-177

.. code-block:: Python


    import glob
    import os

    import pyvista as pv

    vtk_files = glob.glob(os.path.join(summary.coax_ave_output_folder, "*.vtk"))
    for file in vtk_files:
        plotter = pv.Plotter(window_size=[512, 512])
        plotter.add_mesh(pv.read(file))
        title = os.path.splitext(os.path.basename(file))[0]
        plotter.add_title(title, font_size=8)
        plotter.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_001.png
          :alt: 07 additive thermal history
          :srcset: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_001.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_002.png
          :alt: 07 additive thermal history
          :srcset: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_002.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_003.png
          :alt: 07 additive thermal history
          :srcset: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_003.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_004.png
          :alt: 07 additive thermal history
          :srcset: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_004.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_005.png
          :alt: 07 additive thermal history
          :srcset: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_005.png
          :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_006.png
          :alt: 07 additive thermal history
          :srcset: /examples/gallery_examples/images/sphx_glr_07_additive_thermal_history_006.png
          :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 178-181

Print the simulation logs
-------------------------
To print the simulation logs, use the :meth:`~ThermalHistorySummary.logs` property.

.. GENERATED FROM PYTHON SOURCE LINES 181-183

.. code-block:: Python


    print(summary.logs)








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (3 minutes 12.569 seconds)


.. _sphx_glr_download_examples_gallery_examples_07_additive_thermal_history.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 07_additive_thermal_history.ipynb <07_additive_thermal_history.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 07_additive_thermal_history.py <07_additive_thermal_history.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 07_additive_thermal_history.zip <07_additive_thermal_history.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
