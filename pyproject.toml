[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
# Check https://flit.readthedocs.io/en/latest/pyproject_toml.html for all available sections
authors = [{name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"}]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Manufacturing",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
description = "A Python client for the Ansys Additive service"
license = {file = "LICENSE"}
maintainers = [{name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"}]
name = "ansys-additive-core"
readme = "README.rst"
requires-python = ">=3.10,<4"
version = "0.20.0b3"

dependencies = [
  "ansys-api-additive==5.0.2",
  "ansys-platform-instancemanagement>=1.1.1",
  "dill>=0.3.7",
  "google-api-python-client>=1.7.11",
  "googleapis-common-protos>=1.52.0",
  "grpcio>=1.35.0",
  "grpcio-health-checking>=1.45.0",
  "importlib-metadata>=4.0",
  "numpy>=1.20.3",
  "pandas>=2.2.2",
  "platformdirs>=3.8.0",
  "protobuf>=3.20.2,<6",
  "six>=1.16.0",
  "tqdm>=4.45.0",
  "pydantic>=2.6.3",
  "ipython>=7.0.0",
]

[project.optional-dependencies]
tests = [
  "ansys-platform-instancemanagement==1.1.2",
  "dill==0.3.9",
  "google-api-python-client==2.159.0",
  "googleapis-common-protos==1.66.0",
  "grpcio==1.60.0",
  "grpcio-health-checking==1.48.2",
  "numpy==2.2.2",
  "pandas==2.2.3",
  "platformdirs==4.3.6",
  "protobuf==5.29.3",
  "six==1.17.0",
  "tqdm==4.67.1",
  "pydantic==2.10.5",
  "pytest==8.3.4",
  "pytest-cov==6.0.0",
]

doc = [
  "ansys-sphinx-theme[autoapi]==1.2.6",
  "enum-tools==0.12.0",
  "joblib==1.4.2",
  "jupyter_sphinx==0.5.3",
  "matplotlib==3.10.0",
  "numpydoc==1.8.0",
  "phantomjs==1.4.1",
  "pypandoc==1.15",
  "pyvista==0.44.2",
  "ipywidgets==8.1.5",
  "trame==3.7.6",
  "trame-vtk==2.8.14",
  "trame-plotly==3.0.2",
  "trame-vuetify==2.8.0",
  "imageio==2.37.0",
  "sphinx==8.1.3",
  "sphinx-autodoc-typehints==3.0.1",
  "sphinx-copybutton==0.5.2",
  "sphinx-design==0.6.1",
  "sphinx-gallery==0.18.0",
  "sphinx-jinja==2.0.2",
  "sphinx-notfound-page==1.0.4",
  "sphinx-toolbox==3.8.1",
  "sphinxemoji==0.3.1",
  "ipython>=7.0.0",
]

[project.urls]
Discussions = "https://github.com/ansys/pyadditive/discussions"
Documentation = "https://additive.docs.pyansys.com"
Issues = "https://github.com/ansys/pyadditive/issues"
Releases = "https://github.com/ansys/pyadditive/releases"
Source = "https://github.com/ansys/pyadditive"

[tool.flit.module]
name = "ansys.additive.core"

[tool.coverage.run]
source = ["ansys.additive.core"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
addopts = "-ra --cov=ansys.additive.core --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report term -vv --cov-fail-under 95"
filterwarnings = ["ignore:::.*protoc_gen_swagger*"]
minversion = "7.1"
testpaths = ["tests"]

[tool.interrogate]
ignore-magic = true
ignore-private = true
ignore-semiprivate = true
ignore-setters = true
verbose = 1

[tool.ruff]
exclude = ["doc", "examples", "tests"]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
ignore = [
  # "D100",   # pydocstyle - missing docstring in public module
  # "D101",   # pydocstyle - missing docstring in public class
  # "D102",   # pydocstyle - missing docstring in public method
  # "D103",   # pydocstyle - missing docstring in public function
  "D104", # pydocstyle - missing docstring in public package
  "D105", # pydocstyle - missing docstring in magic method
  "D106", # pydocstyle - missing docstring in public nested class
  # "D107",   # pydocstyle - missing docstring in __init__
  "D202", # pydocstyle - no blank lines allowed after function docstring
  "D203", # pydocstyle - 1 blank line required before class docstring
  "D204", # pydocstyle - 1 blank line required after class docstring
  "D205", # pydocstyle - 1 blank line required between summary line and description
  "D212", # pydocstyle - multi-line docstring summary should start at the first line
  "D213", # pydocstyle - multi-line docstring summary should start at the second line
  "E501", # pycodestyle line too long, handled by formatting
  "ISC001", # Ruff formatter incompatible
  "S101", # flake8-bandit - use of assert
  "ERA001", # eradicate - commented out code
]
select = [
  # "A", # flake8-builtins
  # "ANN", # flake8-annotations
  # "ARG", # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  # "BLE", # flake8-blind-except
  "C4", # flake8-comprehensions
  # "C90", # mccabe
  # "CPY", # flake8-copyright
  "D", # pydocstyle
  # "DJ", # flake8-django
  # "DTZ", # flake8-datetimez
  "E", # pycodestyle errors
  # "EM", # flake8-errmsg
  "ERA", # eradicate
  "EXE", # flake8-executable
  "F", # pyflakes
  # "FA", # flake8-future-annotations
  # "FBT", # flake8-boolean-trap
  # "FIX", # flake8-fixme
  "FLY", # flying
  # "FURB", # refurb
  # "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "INP", # flake8-no-pep420
  "LOG", # flake8-logging
  # "N", # pep8-naming
  # "PD", # pandas-vet
  "PIE", # flake8-pie
  "PLC", # pylint - convention
  "PLE", # pylint - error
  # "PLR", # pylint - refactor
  "PLW", # pylint - warning
  # "PT", # flake8-pytest-style
  # "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "Q", # flake8-quotes
  # "RET", # flake8-return
  "RSE", # flake8-raise
  # "RUF", # Ruff-specific rules
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  # "SLF", # flake8-self
  "SLOT", # flake8-slot
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TCH", # flake8-type-checking
  # "TD", # flake8-todos
  "TID", # flake8-tidy-imports
  # "TRIO", # flake8-trio
  # "TRY", # tryceratops
  # "UP", # pyupgrade
  "W", # pycodestyle - warning
  "YTT", # flake8-2020
]

[tool.ruff.lint.per-file-ignores]
"dev/scripts/*" = [
  "D", # all docstring rules
  "INP001", # implicit namespace package
]
"examples/*" = [
  "D", # all docstring rules
  "E402", # module level import not at top of file
  "T201", # print statement
]
"src/ansys/additive/core/logger.py" = [
  "PLW0642", # reassigned self
]
"tests/*" = ["D"]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
