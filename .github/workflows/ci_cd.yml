name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION : '3.10'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit tox
      - name: Test with tox
        run: tox -e style

  docs-style:
    name: Doc style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: [docs-style]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox

      - name: Build documentation
        run: | 
          tox -e doc
          touch ".tox/doc_out/.nojekyll"
          bash -c 'echo "dev.additive.docs.pyansys.com" > ".tox/doc_out/CNAME"'

      - name: Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: .tox/doc_out/
          retention-days: 7

      - name: Deploy to gh-pages
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@v4.3.4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: .tox/doc_out/
          CLEAN: true

  tests:
    name: Smoke tests
    needs: [style]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        cfg:
          - {python-version: "3.7", toxenv: "py37"}
          - {python-version: "3.8", toxenv: "py38"}
          - {python-version: "3.9", toxenv: "py39"}
          - {python-version: "3.10", toxenv: "py310-coverage"}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Install dependencies
        run: python -m pip install --upgrade pip ${{ matrix.build-system }} tox

      - name: Run Tox
        run: tox -e ${{ matrix.cfg.toxenv }}

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   if: matrix.cfg.python-version ==  ${{ env.MAIN_PYTHON_VERSION }}

  build:
    name: Build package
    needs: [style, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements_build.txt

      - name: Build wheel and sdist
        run: python -m build && python -m twine check dist/*

      - name: Upload wheel and sdist to artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ansys-additive-processwindow
          path: dist/
          retention-days: 7

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [style, docs-style, docs, tests, build]
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout project
        uses: actions/download-artifact@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Display structure of downloaded files
        run: ls -R

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip twine

      # - name: Publish to PyPI
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      #   run: |
      #     python -m twine upload --skip-existing ./**/*.whl
      #     python -m twine upload --skip-existing ./**/*.tar.gz

      - name: Publish to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz
